{"version":3,"sources":["elements/node.tsx","elements/path.tsx","containers/EditorContainer.tsx","containers/BasciLayout.tsx","style/index.less","App.tsx","reportWebVitals.ts","index.tsx"],"names":["node","Porps","posX","posY","onClick","event","console","log","cx","cy","stroke","r","path","Props","state","x","y","t","ctrX","ctrY","editing","b","Bezier","project","mockNodes","ctrPosX","ctrPosY","this","map","item","x1","y1","x2","y2","d","nodes","i","length","getD","stroke-width","fill","React","Component","EditorContainer","width","height","BasicLayout","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAoBeA,EAbF,SAACC,GAA4C,IAEhDC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KAGd,OACE,wBAAQC,QAAS,SAACC,GAAD,OAAWC,QAAQC,IAAIF,IAAQG,GAAIN,EAAMO,GAAIN,EAAMO,OAAO,OAAOC,EAAE,O,gBCuGzEC,E,kDA/Fb,WAAYC,GAAiC,IAAD,uBAC1C,cAAMA,IAEDC,MAAQ,CACXC,EAAG,EACHC,EAAG,EACHC,EAAG,KACHC,KAAM,EACNC,KAAM,EACNC,SAAS,GAGX,IAAMC,EAAI,IAAIC,IAAO,MAAO,KAAM,MAAO,KAAM,MAAO,MAZZ,OAa1ChB,QAAQC,IAAIc,EAAEE,QAAQ,CAACR,EAAG,MAAOC,EAAG,QAbM,E,qDAmBhC,IAAIM,IAAO,MAAO,MAAO,IAAK,GAAI,IAAK,MADlC,IAGTE,EAAY,CAChB,CACEtB,KAAM,MACNC,KAAM,MACNsB,QAAS,IACTC,QAAS,IAEX,CACExB,KAAM,MACNC,KAAM,KACNsB,QAAS,IACTC,QAAS,KAmBb,IAAIC,KAAKb,MAAMM,QAAf,CAsBA,OACE,eAAC,WAAD,WACGI,EAAUI,KAAI,SAAAC,GAAI,OACjB,eAAC,WAAD,WACE,cAAC,EAAD,CAAM3B,KAAM2B,EAAK3B,KAAMC,KAAM0B,EAAK1B,OAClC,sBAAM2B,GAAID,EAAK3B,KAAM6B,GAAIF,EAAK1B,KAAM6B,GAAIH,EAAKJ,QAASQ,GAAIJ,EAAKH,QAAShB,OAAO,YAC/E,cAAC,EAAD,CAAMR,KAAM2B,EAAKJ,QAAStB,KAAM0B,EAAKH,gBAMzC,sBAAMQ,EA9BG,SAACC,GAIZ,IAFA,IAAID,EAAI,GAECE,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAE9BF,GADQ,IAANE,EACD,YAASD,EAAMC,GAAGlC,KAAlB,YAA0BiC,EAAMC,GAAGjC,KAAnC,cAA6CgC,EAAMC,GAAGX,QAAtD,YAAiEU,EAAMC,GAAGV,QAA1E,KAEA,UAAOS,EAAMC,GAAGlC,KAAhB,YAAwBiC,EAAMC,GAAGjC,KAAjC,YAAyCgC,EAAMC,GAAGX,QAAlD,YAA6DU,EAAMC,GAAGV,SAO3E,OAFApB,QAAQC,IAAI2B,GAELA,EAeII,CAAKd,GAAYe,eAAa,IAAI7B,OAAO,UAAU8B,KAAK,iB,GAvFtDC,IAAMC,WCfJC,E,uKAGjB,OACE,qBAAKC,MAAM,MAAMC,OAAO,MAAxB,SACE,cAAC,EAAD,U,GALqCJ,IAAMC,WCA9BI,GCJN,I,uKDOX,OACE,cAAC,WAAD,UACE,cAAC,EAAD,U,GALiCL,IAAMC,Y,MEQhCK,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae230cc3.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  posX: number,\n  posY: number\n}\n\nconst node = (Porps: { posX: number; posY: number; }) => {\n\n  const { posX, posY } = Porps;\n\n\n  return(\n    <circle onClick={(event) => console.log(event)} cx={posX} cy={posY} stroke=\"#55f\" r=\"4\">\n\n    </circle>\n  )\n\n}\n\nexport default node;","import React, { Fragment } from 'react';\nimport Node from './node';\nimport Bezier from 'bezier-js';\nimport node from './node';\n\n\ninterface Props{\n \n}\n\ninterface State{\n  x: number,\n  y: number,\n  t: any,\n  ctrX: number,\n  ctrY: number,\n  editing: boolean\n}\n\nclass path extends React.Component<Props, State> {\n\n  constructor(Props: Props | Readonly<Props>) {\n    super(Props);\n\n    this.state = {\n      x: 0,\n      y: 0,\n      t: null,\n      ctrX: 0,\n      ctrY: 0,\n      editing: false\n    }\n\n    const b = new Bezier(135.5, 77.5, 252.5, 36.5, 219.5, 85.5)\n    console.log(b.project({x: 135.5, y: 77.5}))\n\n  }\n  \n\n  public render() {\n    const b = new Bezier(157.5, 105.5, 180, 95, 148, 76.5);\n\n    const mockNodes = [\n      {\n        posX: 157.5,\n        posY: 105.5,\n        ctrPosX: 180,\n        ctrPosY: 95,\n      },\n      {\n        posX: 148.8,\n        posY: 76.5,\n        ctrPosX: 227,\n        ctrPosY: 74,\n      },\n    ];\n\n    // M157.5,105.5C180.66667,95 148.83333,76.5 227,74C305.16667,71.5 266.5,82.5 251.5,115.5C236.5,148.5 236.5,148.5 236,148C235.5,147.5 143.5,203.5 166,151\n\n    const handleMouse = (event: { clientX: number; clientY: any; }) => {\n      console.log(event.clientX - 428, event.clientY); \n      const res = b.project({x: event.clientX - 428, y: event.clientY})\n      console.log(b.project({x: event.clientX - 428, y: event.clientY}))\n      console.log(b.toSVG())\n      this.setState({x: res.x, y: res.y, t: res.t}) \n    }\n\n    const handleOnclick = () => {\n      const c = b.split(0, this.state.t);\n      this.setState({ ctrX: c.points[1].x, ctrY: c.points[1].y })\n    }\n\n    if (this.state.editing) {\n      return \n    }\n\n    const getD = (nodes: string | any[]) => {\n\n      let d = \"\";\n      let temp = [];\n      for (let i = 0; i < nodes.length; i++) {\n        if (i === 0) {\n          d += `M ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctrPosX} ${nodes[i].ctrPosY} `\n        } else {\n          d += `${nodes[i].posX} ${nodes[i].posY} ${nodes[i].ctrPosX} ${nodes[i].ctrPosY}`\n        }\n\n        // temp.push(nodes[i].posX, nodes[i].posY, nodes[i].ctrPosX, nodes[i].ctrPosY)\n      }\n      console.log(d)\n      \n      return d\n    }\n\n    return (\n      <Fragment>\n        {mockNodes.map(item => \n          <Fragment>\n            <Node posX={item.posX} posY={item.posY}/>\n            <line x1={item.posX} y1={item.posY} x2={item.ctrPosX} y2={item.ctrPosY} stroke=\"#2440B3\" />\n            <Node posX={item.ctrPosX} posY={item.ctrPosY}/>\n          </Fragment>\n          )}\n        {/* <circle cx={this.state.x} cy={this.state.y} stroke=\"#55f\" r=\"4\" />\n        <circle cx={this.state.ctrX} cy={this.state.ctrY} stroke=\"#55f\" r=\"4\" /> */}\n       \n        <path d={getD(mockNodes)} stroke-width=\"5\" stroke=\"#000000\" fill=\"none\"/>\n        \n        {/* <path onClick={handleOnclick} onMouseMove={handleMouse} onMouseLeave={() => console.log(\"leave path\")} stroke-width=\"5\" stroke=\"#000000\" fill=\"none\" d=\"M157.5,105.5C180.66667,95 148.83333,76.5 227,74C305.16667,71.5 266.5,82.5 251.5,115.5C236.5,148.5 236.5,148.5 236,148C235.5,147.5 143.5,203.5 166,151\"></path> */}\n      </Fragment>\n    );\n  }\n\n}\n\n\nexport default path;","import React from 'react';\nimport Path from '../elements/path';\n\n\nexport default class EditorContainer extends React.Component {\n  \n  render() {\n    return(\n      <svg width=\"500\" height=\"500\"> \n        <Path />\n      </svg>\n    )\n  }\n}","import React, { Fragment } from 'react';\nimport EditorContainer from './EditorContainer'\nimport '../style/index.less';\n\nexport default class BasicLayout extends React.Component {\n\n  render() {\n    return(\n      <Fragment>\n        <EditorContainer />\n        \n      </Fragment>\n    )\n  }\n\n}","export default __webpack_public_path__ + \"static/media/index.15ffad28.less\";","import React from 'react';\nimport BasciLayout from './containers/BasciLayout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasciLayout />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
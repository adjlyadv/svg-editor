{"version":3,"sources":["elements/constants.ts","stores/UIStore.ts","stores/myIndexDb.ts","utils/calculate.ts","elements/node.tsx","elements/path.tsx","containers/EditorContainer.tsx","containers/StatusContainer.tsx","containers/FunctionContainer.tsx","asset/circle.svg","asset/pen.svg","asset/mouse.svg","asset/line.svg","asset/rectangle.svg","containers/ToolbarContainer.tsx","containers/BasciLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nodeTypes","UIStore","editorInfo","width","height","left","top","mouseState","type","drugging","pathid","nodeid","currentTool","pathList","editingPathId","setPathBbox","path","svgBox","getBBox","ctrx","x","ctry","y","centerPoint","border","myIndexDB","update","initPathList","id","addPath","push","length","nodes","strokeWidth","stroke","fill","rotate","deletePath","pathId","splice","remove","setEditingPath","setNodes","nodeId","node","addNodes","posX","posY","ctrPosX","ctrPosY","ctr2PosX","ctr2PoxY","index","over","nodesLength","ctr2PosY","add","slice","setMouseState","dragging","setCurrentTool","toolName","movePath","moveX","moveY","it","setBorder","setStateInfo","name","value","oldX","Number","oldY","makeAutoObservable","this","dbName","version","tableName","db","openDB","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","event","console","log","target","result","onupgradeneeded","create_table","onerror","idb","objectStoreNames","contains","createObjectStore","keyPath","createIndex","unique","newPath","toJS","transaction","objectStore","readAll","openCursor","cursor","key","continue","_","put","delete","getRelativePositon","clientX","clientY","getCentralSymmetryPosition","getCircleNodes","radius","Math","sqrt","h","getRectNodes","Node","observer","props","onClick","onMouseLeave","className","cx","cy","mouseEvent","isEditingNode","handleMouseDown","elec","onMouseDown","e","x1","y1","x2","y2","getD","d","i","handleClick","stopPropagation","handleOnMouseMove","throttle","item","nums","reduce","pre","cur","flat","bezier","Bezier","setBezier","nodeInfo","project","setNewNode","t","useState","newNode","paths","mockNode","_nodes","attrD","getEditingPath","map","onMouseOver","split","points","findIndex","undefined","addingNode","right","borderD","transform","strokeDasharray","EditorContainer","useEffect","edtiorRef","current","getBoundingClientRect","setEditorInfo","a","setNode","useRef","editing","setPathId","startNode","setStartNode","_pathid","mouseUpTimeChange","toolNode","setToolNode","newToolNode","setNewToolNode","setNewnode","lastNode","setLastnode","pos","setPos","dragPath","setDragPath","handleMouseMove","currentPathid","angle","dot","det","atan2","PI","getAngle","toString","ref","node1","onMouseMove","onMouseUp","clearTimeout","setTimeout","center","l","cosv","cos","sinv","sin","forEach","newBorder","calRotatePath","_pathId","onDoubleClick","r","Array","addOtherPath","StatusContainer","pathInfo","inputChange","toFixed","onChange","min","max","ToolbarContainer","set","indexOf","alt","src","mouse","circle","rectangle","line","pen","BasicLayout","setCurrenttool","handleToolChange","App","BasciLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0c80005.chunk.js","sourcesContent":["export const nodeTypes = {\n  AnchorPoint: 0,\n  Ctr1Point: 1,\n  Ctr2Point: 2\n}\n","import { makeAutoObservable} from 'mobx';\nimport { nodeTypes } from '../elements/constants';\nimport { myIndexDB } from './myIndexDb';\nexport interface Node{\n  posX: number,\n  posY: number,\n  ctrPosX: number,\n  ctrPosY: number,\n  ctr2PosX?: number,\n  ctr2PosY?: number,\n}\nexport interface Point{\n  ctrx:number,\n  ctry:number\n}\nexport interface Path {\n  id: number,\n  nodes: Node[],\n  type: number, // 0 非闭合 1 闭合\n  strokeWidth: number,\n  stroke: string,\n  fill:string,\n  centerPoint:Point,//路径中心\n  rotate:number;//旋转的角度\n  border: Point[]//边界  point[0]代表左上角  point[1]右上角  point[2]右下角  point[3] 左下角\n}\n\nclass UIstore {\n\n  editorInfo = {\n    width: 800,\n    height: 600,\n    left: 0,\n    top: 0\n  }\n  mouseState = {\n    type: nodeTypes.AnchorPoint,\n    drugging: false,\n    pathid: -1,\n    nodeid: -1,\n  }\n\n  currentTool = \"mouse\";\n\n  pathList: Path[] = [];\n  editingPathId = -1;\n  \n  constructor() {\n    makeAutoObservable(this); \n  }\n\n  //设置路径边界和中心\n  setPathBbox = (path:SVGPathElement,pathid:number) => {\n    let svgBox = path.getBBox();\n    let ctrx = svgBox.x + (svgBox.width >> 1);\n    let ctry = svgBox.y + (svgBox.height >> 1);\n    this.pathList[pathid].centerPoint = {ctrx,ctry};\n    this.pathList[pathid].border = [\n      {ctrx:svgBox.x, ctry:svgBox.y},\n      {ctrx: svgBox.x + svgBox.width, ctry:svgBox.y},\n      {ctrx: svgBox.x + svgBox.width, ctry:svgBox.y + svgBox.height},\n      {ctrx: svgBox.x, ctry:svgBox.y + svgBox.height}\n    ];\n    myIndexDB.update(this.pathList[pathid]);\n  }\n\n  initPathList = (id:number,path:Path) =>{\n    this.pathList[id] = path;\n  }\n\n  addPath = (type?:number) => {\n    this.pathList.push(\n        {\n          id: this.pathList.length,\n          nodes: [],\n          strokeWidth: 5,\n          stroke: \"#000000\",\n          fill: \"none\",\n          type: type || 0,\n          centerPoint:{ctrx:-1,ctry:-1},\n          rotate:0,\n          border:[{ctrx:-1,ctry:-1},{ctrx:-1,ctry:-1},{ctrx:-1,ctry:-1},{ctrx:-1,ctry:-1}]\n        }\n    )\n    return this.pathList.length - 1;\n  }\n\n  deletePath = (pathId: number) => {\n    this.pathList = this.pathList.splice(pathId,1);\n    myIndexDB.remove(pathId);\n  }\n\n  setEditingPath = (pathId: number) => {\n    this.editingPathId = pathId;\n  }\n\n  setNodes = (pathId: number, nodeId: number, node: Node) => {\n    if(this.pathList[pathId]){\n      this.pathList[pathId].nodes[nodeId] = node;\n      myIndexDB.update(this.pathList[pathId]);\n    }\n  }\n\n  addNodes =(pathId: number , posX: number, posY: number, ctrPosX?: number, ctrPosY?: number, ctr2PosX?: number, ctr2PoxY?: number, index?: number,over?:boolean) => {\n\n    const nodesLength = this.pathList[pathId].nodes.length;\n    const type = this.pathList[pathId].type;\n    if(nodesLength === 0 || over){\n      if(type){//闭合路径的第一个有两个控制点\n        this.pathList[pathId].nodes.push(\n          {\n            posX: posX,\n            posY: posY,\n            ctrPosX: ctrPosX || posX,\n            ctrPosY: ctrPosY || posY,\n            ctr2PosX: ctr2PosX,\n            ctr2PosY: ctr2PoxY\n          }\n        )\n      }\n      else{//非闭合路径的第一个和最后一个只有一个控制点\n        this.pathList[pathId].nodes.push(\n          {\n            posX: posX,\n            posY: posY,\n            ctrPosX: ctrPosX || posX,\n            ctrPosY: ctrPosY || posY\n          }\n        )\n      }\n      if(nodesLength === 0){\n        myIndexDB.add(this.pathList[pathId]);\n      }else{\n        myIndexDB.update(this.pathList[pathId]);\n      }\n    }\n    else{\n      this.pathList[pathId].nodes = [\n        ...this.pathList[pathId].nodes.slice(0, index || nodesLength),\n        {\n          posX: posX,\n          posY: posY,\n          ctrPosX: ctrPosX || posX,\n          ctrPosY: ctrPosY || posY,\n          ctr2PosX: ctr2PosX,\n          ctr2PosY: ctr2PoxY\n        },\n        ...this.pathList[pathId].nodes.slice(index || nodesLength)\n      ]\n      myIndexDB.update(this.pathList[pathId]);\n    }\n\n  }\n\n  setMouseState = (type: number, dragging:boolean, pathid:number, nodeid:number) => {\n    this.mouseState.pathid = pathid;\n    this.mouseState.nodeid = nodeid;\n    this.mouseState.type = type;\n    this.mouseState.drugging = dragging;\n  }\n\n  setCurrentTool = (toolName: string) => {\n    this.currentTool = toolName;\n  } \n\n  movePath = (pathid: number , moveX: number , moveY: number) => {\n    for( let it of this.pathList[pathid].nodes){\n      it.posX += moveX;\n      it.posY += moveY;\n      it.ctrPosX += moveX;\n      it.ctrPosY += moveY;\n      if(it.ctr2PosY && it.ctr2PosX){\n        it.ctr2PosX += moveX;\n        it.ctr2PosY += moveY;\n      }\n    }\n    myIndexDB.update(this.pathList[pathid]);\n  }\n\n  setBorder = (pathid: number, border: Point [])=>{\n    this.pathList[pathid].border = border;\n  }\n\n  setStateInfo = (pathId: number, name:string, value:string) => {\n    switch(name){\n      case 'X':\n        let oldX = this.pathList[pathId].nodes[0].posX;\n        this.movePath(pathId, Number(value) - oldX, 0);\n        break;\n      case 'Y':\n        let oldY = this.pathList[pathId].nodes[0].posY;\n        this.movePath(pathId,0, Number(value) - oldY);\n        break;\n      case 'fill':\n        this.pathList[pathId].fill = value;\n        break;\n      case 'strokeWidth':\n        this.pathList[pathId].strokeWidth = Number(value);\n        break;\n      case 'stroke':\n        this.pathList[pathId].stroke = value;\n        break;\n      case 'rotate':\n        this.pathList[pathId].rotate = Number(value);\n        break;\n      default:        \n    }\n    myIndexDB.update(this.pathList[pathId]);\n  }\n}\n\nexport const UIStore = new UIstore();","import {UIStore} from './UIStore';\nimport * as _ from 'lodash';\nimport {toJS} from 'mobx';\nclass IndexDB{\n\n    private dbName: string = 'svgData';//数据库名称\n    private version: number = 1;//数据库版本\n    private tableName: string = 'svgPath';//数据表名称\n    private db: IDBDatabase | null = null;\n\n    //打开数据库\n    openDB = () => {\n        return new Promise((resolve,reject)=>{\n            const request = window.indexedDB.open(this.dbName, this.version);\n\n            request.onsuccess = (event: any) => {//数据库打开成功\n                console.log('成功打开数据库')\n                this.db = event.target.result\n                resolve(1);\n            };\n    \n            request.onupgradeneeded = (event:any) => {\n                console.log('成功新建数据库')\n                this.db = event.target.result;\n                this.create_table(this.db);\n            }\n    \n            request.onerror = (event:any) => {\n                console.log('数据库打开报错');\n                reject(1);\n            };\n        })\n        \n    }\n\n    //新建数据表\n    create_table  = (idb: any) => {\n        if (!idb.objectStoreNames.contains(this.tableName)) {\n            let objectStore;\n            objectStore = idb.createObjectStore(this.tableName, { keyPath: 'id' });\n            objectStore.createIndex('id', 'id', { unique: true });\n        }\n    }\n    //向indexdb中增加数据\n\n    add  = (newPath:any) => {\n        if(this.db){\n            let path = toJS(newPath);\n            let request = this.db.transaction([this.tableName], 'readwrite')\n            .objectStore(this.tableName)\n            .add(path);\n            request.onsuccess = function (event:any) {\n                console.log('数据写入成功');\n            };\n    \n            request.onerror = function (event:any) {\n                console.log('数据写入失败');\n            }\n        } \n    }\n    //读取所有数据\n    readAll = () => {\n            return new Promise((resolve,reject)=>{\n                if(this.db){\n                    let objectStore = this.db.transaction(this.tableName).objectStore(this.tableName);\n                    objectStore.openCursor().onsuccess = function (event:any) {\n                        var cursor = event.target.result;\n                        if (cursor) {\n                            UIStore.initPathList(cursor.key,cursor.value);\n                            cursor.continue();\n                        } else {\n                            console.log('没有更多数据了！');\n                            resolve(1);\n                        }\n                    };\n                }\n                else{\n                    reject();\n                }\n            })\n    }\n\n    //更新数据\n    update = _.debounce((newPath:any)=> {\n        if(this.db){\n            let path = toJS(newPath);\n            let request = this.db.transaction([this.tableName], 'readwrite')\n            .objectStore(this.tableName)\n            .put(path);\n            request.onsuccess = function (event:any) {\n                console.log('数据更新成功');\n            };\n\n            request.onerror = function (event:any) {\n                console.log('数据更新失败');\n            }\n        }\n    },1000,{ 'maxWait': 10000 })\n\n    //删除数据\n    remove = (id:number) => {\n        if(this.db){\n            let request = this.db.transaction([this.tableName], 'readwrite')\n            .objectStore(this.tableName)\n            .delete(id);\n          request.onsuccess = function (event) {\n            console.log('数据删除成功');\n          };\n        }\n    }\n\n}\nexport const myIndexDB = new IndexDB();","import { UIStore, Node } from '../stores/UIStore'\n\nexport function getRelativePositon(event: any) {\n  const editorInfo = UIStore.editorInfo;\n  return {\n    x: event.clientX - editorInfo.left,\n    y: event.clientY - editorInfo.top\n  }\n}\n\nexport function getCentralSymmetryPosition(node: Node) {\n  return {\n    ctr2PosX: node.posX * 2 - node.ctrPosX,\n    ctr2PosY: node.posY * 2 - node.ctrPosY\n  }\n}\n\nexport function getAngle(node:Node){\n  const dot = node.posX * node.ctrPosX + node.posY * node.ctrPosY\n  const det = node.posX * node.ctrPosY - node.posY * node.ctrPosY\n  const angle = Math.atan2(det, dot) / Math.PI * 180\n  return (angle + 360) % 360\n}\n\nexport function calRotatePath(pathid:number){\n  const path = UIStore.pathList[pathid];\n  const angle = path.rotate;\n  const center = path.centerPoint;\n  const border = path.border;\n\n  const  l = (angle * Math.PI) / 180;\n  const  cosv =  Math.cos(l);\n  const  sinv =  Math.sin(l);\n\n  let newNode = {\n    posX:-1,\n    posY:-1,\n    ctrPosX: -1,\n    ctrPosY: -1,\n    ctr2PosX: -1,\n    ctr2PosY: -1\n  }\n  path.nodes.forEach((item,index)=>{\n    newNode.posX = (item.posX - center.ctrx) * cosv - (item.posY - center.ctry) * sinv + center.ctrx;\n    newNode.posY =  (item.posX - center.ctrx) * sinv + (item.posY - center.ctry) * cosv + center.ctry;      \n    newNode.ctrPosX = (item.ctrPosX - center.ctrx) * cosv - (item.ctrPosY - center.ctry) * sinv + center.ctrx;\n    newNode.ctrPosY = (item.ctrPosX - center.ctrx) * sinv + (item.ctrPosY - center.ctry) * cosv + center.ctry;\n    if(item.ctr2PosX && item.ctr2PosY){\n      newNode.ctr2PosX = (item.ctr2PosX - center.ctrx) * cosv - (item.ctr2PosY - center.ctry) * sinv + center.ctrx;\n      newNode.ctr2PosY =  (item.ctr2PosX - center.ctrx) * sinv + (item.ctr2PosY - center.ctry) * cosv + center.ctry;\n      UIStore.setNodes(pathid,index,newNode);\n    }else{\n      UIStore.setNodes(pathid,index,{posX:newNode.posX, posY:newNode.posY, ctrPosX: newNode.ctrPosX, ctrPosY:newNode.ctrPosY });\n    }\n  })\n\n  let newBorder = [{ctrx:-1, ctry:-1},{ctrx:-1, ctry:-1},{ctrx:-1, ctry:-1},{ctrx:-1, ctry:-1}];\n  border.forEach((item,index)=>{\n    newBorder[index].ctrx = (item.ctrx - center.ctrx) * cosv - (item.ctry - center.ctry) * sinv + center.ctrx;\n    newBorder[index].ctry = (item.ctrx - center.ctrx) * sinv + (item.ctry - center.ctry) * cosv + center.ctry;\n  })\n  UIStore.setBorder(pathid,newBorder);\n}\n\n\nexport function getCircleNodes(node: Node){\n  const C = 0.552284749831;  \n  let {posX,posY,ctrPosY,ctrPosX} = node;\n  let radius = Math.sqrt((posX-ctrPosX)*(posX-ctrPosX) + (posY-ctrPosY)* (posY-ctrPosY));\n  let h = C * radius; \n\n  let nodes = [];\n  nodes[0] = {\n    posX:posX,\n    posY:posY + radius,\n    ctrPosX:posX + h,\n    ctrPosY:posY + radius,\n    ctr2PosX: posX - h,\n    ctr2PosY: posY + radius,\n  }\n  nodes[1] = {\n    posX:posX + radius,\n    posY:posY,\n    ctrPosX: posX + radius,\n    ctrPosY: posY + h,\n    ctr2PosX:posX + radius,\n    ctr2PosY:posY - h\n  }\n  nodes[2] = {\n    posX:posX,\n    posY:posY - radius,\n    ctrPosX: posX + h,\n    ctrPosY: posY - radius,\n    ctr2PosX:posX - h,\n    ctr2PosY:posY - radius\n  }\n  nodes[3] = {\n    posX:posX - radius,\n    posY:posY,\n    ctrPosX: posX - radius,\n    ctrPosY: posY - h,\n    ctr2PosX:posX - radius,\n    ctr2PosY:posY + h\n  }\n\n  return nodes;\n}\n\n\nexport function getRectNodes(node: Node){ \n  let {posX,posY,ctrPosY,ctrPosX} = node;\n\n  let nodes = [];\n  nodes[0] = {\n    posX:posX,\n    posY:posY,\n    ctrPosX:posX,\n    ctrPosY:posY,\n    ctr2PosX:posX,\n    ctr2PosY:posY\n  }\n  nodes[1] = {\n    posX:ctrPosX,\n    posY:posY,\n    ctrPosX: ctrPosX,\n    ctrPosY: posY,\n    ctr2PosX:ctrPosX,\n    ctr2PosY:posY\n  }\n  nodes[2] = {\n    posX:ctrPosX,\n    posY:ctrPosY,\n    ctrPosX:ctrPosX,\n    ctrPosY:ctrPosY,\n    ctr2PosX:ctrPosX,\n    ctr2PosY:ctrPosY\n  }\n  nodes[3] = {\n    posX:posX,\n    posY:ctrPosY,\n    ctrPosX: posX,\n    ctrPosY: ctrPosY,\n    ctr2PosX:posX,\n    ctr2PosY:ctrPosY\n  }\n  return nodes;\n}","import { observer} from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport { nodeTypes } from './constants';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\n\ninterface Props {\n  node: typeNode,\n  id: number,\n  pathId: number,\n  onClick?: any,\n  onMouseLeave?: any,\n}\n\nconst Node = observer((props: Props) => {\n\n  if (props.id === -1) {\n    return (\n      <circle onClick={props.onClick} onMouseLeave={props.onMouseLeave} className=\"point-control-add\" cx={props.node.posX} cy={props.node.posY} />\n    )\n  }\n\n  const node = UIStore.pathList[props.pathId].nodes[props.id];\n  const mouseEvent = UIStore.mouseState;\n  const isEditingNode = mouseEvent.pathid === props.pathId && mouseEvent.nodeid === props.id;\n  const currentTool = UIStore.currentTool;\n\n  const handleMouseDown = (elec:number, event: any) => {\n\n    if (currentTool === \"pen_new_path\") {\n      UIStore.pathList[props.pathId].type = 1; //设定成闭合\n    }\n\n    switch(elec) {\n      case nodeTypes.AnchorPoint: {\n        UIStore.setMouseState(nodeTypes.AnchorPoint, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr1Point: {\n        UIStore.setMouseState(nodeTypes.Ctr1Point, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr2Point: {\n        UIStore.setMouseState(nodeTypes.Ctr2Point, true, props.pathId, props.id);\n        break\n      }\n    }\n  }\n  \n  return(\n    <Fragment>\n      <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.AnchorPoint, e)} cx={node.posX} cy={node.posY} />\n      \n      { isEditingNode && <line x1={node.posX} y1={node.posY} x2={node.ctrPosX} y2={node.ctrPosY} stroke=\"#555\" strokeWidth=\"1\" /> }\n      { isEditingNode && <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr1Point, e)} cx={node.ctrPosX} cy={node.ctrPosY} /> }\n      \n\n      {isEditingNode && mouseEvent.nodeid === props.id && node.ctr2PosX && node.ctr2PosY && <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr2Point, e)} cx={node.ctr2PosX} cy={node.ctr2PosY} />}\n      {isEditingNode && mouseEvent.nodeid === props.id && node.ctr2PosX && node.ctr2PosY && <line x1={node.posX} y1={node.posY} x2={node.ctr2PosX} y2={node.ctr2PosY} stroke=\"#555\" strokeWidth=\"1\" />}\n    </Fragment>\n  )\n\n})\n\nexport default Node;","import React, { Fragment, useState } from 'react';\nimport { Node as typeNode, Point as typePoint ,UIStore } from '../stores/UIStore';\nimport { getRelativePositon, getCentralSymmetryPosition } from '../utils/calculate';\nimport Node from './node';\nimport _ from 'lodash';\nimport Bezier from 'bezier-js';\nimport { observer } from 'mobx-react';\n\ninterface Props{\n  path: {\n    id: number,\n    nodes: typeNode[],\n    strokeWidth: number,\n    stroke: string,\n    fill:string,\n    type: number,\n    centerPoint:typePoint,//路径中心\n    rotate: number,//旋转角度\n    border: typePoint[]//边界\n  }\n  currentTool:String;\n}\n\nconst path: React.FC<Props> = observer((props: Props) => {\n    \n    const getD = (nodes: string | any[], type: boolean) => {\n\n      let d = \"\";\n      const length = nodes.length;\n      if(length === 1){//钢笔增加路径的时候对第一个节点的渲染\n        return d;\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        if (i === 0) {\n          d += `M ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctrPosX} ${nodes[i].ctrPosY} `\n        } else if (i + 1 <= nodes.length - 1) {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctr2PosX} ${nodes[i].ctr2PosY} `\n        } else {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY} `\n        }\n      }\n\n      if (type) {\n        const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(nodes[0])\n        d += `C ${nodes[length - 1].ctr2PosX} ${nodes[length - 1].ctr2PosY} \n          ${nodes[0].ctr2PosX ? nodes[0].ctr2PosX : ctr2PosX} ${nodes[0].ctr2PosY ? nodes[0].ctr2PosY : ctr2PosY} ${nodes[0].posX} ${nodes[0].posY} z`\n      }\n\n      return d\n    }\n    \n    const getEditingPath = () => {\n      let paths = [];\n      let mockNode = null;\n\n      for (let i = 0; i + 1 < nodes.length; i++) {\n\n        if (i !== 0) {\n          const node = nodes[i];\n          mockNode = {\n            posX: node.posX,\n            posY: node.posY,\n            ctrPosX: node.ctr2PosX,\n            ctrPosY: node.ctr2PosY\n          }\n        }\n        \n        const _nodes = [\n          mockNode ? mockNode : nodes[i], \n          nodes[i + 1]\n        ]\n\n        const attrD = getD(_nodes, false);\n        paths.push({\n          attrD: attrD,\n          nodes: _nodes\n        });\n      }\n\n      if (props.path.type) { // 判定一下是不是闭合路径，如果是的话需要另外的控制点\n        let node = nodes[nodes.length - 1];\n        const mockEndNode = {\n          posX: node.posX,\n          posY: node.posY,\n          ctrPosX: node.ctr2PosX,\n          ctrPosY: node.ctr2PosY\n        }\n\n        node = nodes[0];\n        const mockStartNode = {\n          posX: node.posX,\n          posY: node.posY,\n          ctrPosX: node.ctr2PosX,\n          ctrPosY: node.ctr2PosY\n        }\n\n        const _nodes = [\n          mockEndNode,\n          mockStartNode\n        ]\n\n        const attrD = getD(_nodes, false);\n        paths.push({\n          attrD: attrD,\n          nodes: _nodes\n        });\n      }\n\n      return paths\n    }\n\n    const handleClick = (event: any) => {\n      event.stopPropagation();\n      UIStore.setEditingPath(props.path.id);\n      UIStore.setPathBbox(event.target,props.path.id);//被点击的时候计算中心点\n    }\n\n    const handleOnMouseMove = _.throttle((event: any, item: any) => {\n      event.stopPropagation();\n      if(props.currentTool !== \"pen_add_node\"){\n        return\n      }\n      const { x, y } = getRelativePositon(event);\n\n      const nums = item.nodes.reduce((pre: Array<number>, cur: typeNode, index: number) => {\n        if (index === item.nodes.length - 1) {\n          pre.push(cur.ctrPosX, cur.ctrPosY, cur.posX, cur.posY);\n        } else {\n          pre.push(cur.posX, cur.posY, cur.ctrPosX, cur.ctrPosY);\n        }\n\n        return pre\n      }, []).flat(1);\n\n      const bezier = new Bezier(nums);\n      setBezier(bezier);\n      const nodeInfo = bezier.project({x, y});\n\n      setNewNode({\n        posX: nodeInfo.x,\n        posY: nodeInfo.y,\n        ctrPosX: nodeInfo.x,\n        ctrPosY: nodeInfo.y,\n        t: nodeInfo.t\n      })\n\n    }, 50);\n\n    const handleAddNewNodeClick = () => {\n      if(props.currentTool !== \"pen_add_node\"){\n        return\n      }\n      const newPath = bezier?.split(newNode.t); // 这里贝塞尔曲线被分成了两个部分，需要分别更新左右两端\n      let points = newPath?.left.points; // 0 1 2 3 分别是第一个点的位置、控制点，第二个点的控制点、位置\n\n      if (!newPath || !points) {\n        return\n      }\n\n      let index = nodes.findIndex((node) => {\n        return node.posX === bezier?.points[0].x && node.posY === bezier?.points[0].y\n      });\n\n      let node = {\n        posX: points[0].x,\n        posY: points[0].y,\n        ctrPosX: index ? UIStore.pathList[id].nodes[index].ctrPosX : points[1].x,\n        ctrPosY: index ? UIStore.pathList[id].nodes[index].ctrPosY : points[1].y,\n        ctr2PosX: index ? points[1].x : undefined,\n        ctr2PosY: index ? points[1].y : undefined\n      } // 这里要判定一下index为0  即起始节点的情况，做特殊处理\n\n      let addingNode = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: 0,\n        ctr2PosY: 0\n      } // 这是新的节点信息\n\n      UIStore.setNodes(id, index, node); // 更新左端点\n\n      points = newPath?.right.points;\n\n      node = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: UIStore.pathList[id].nodes[index + 1].ctr2PosX || undefined,\n        ctr2PosY: UIStore.pathList[id].nodes[index + 1].ctr2PosY || undefined\n      } \n\n      addingNode.ctr2PosX = points[1].x;\n      addingNode.ctr2PosY = points[1].y; // 新的节点信息需要左右两端的\n      \n      UIStore.setNodes(id, index + 1, node); // 更新右端点\n\n      UIStore.addNodes(id, addingNode.posX, addingNode.posY, addingNode.ctrPosX, addingNode.ctrPosY, addingNode.ctr2PosX, addingNode.ctr2PosY, index + 1);\n      setNewNode(null);\n    }\n\n    const [newNode, setNewNode] = useState<any>();\n    const [bezier, setBezier] = useState<Bezier>();\n    const { id, nodes } = props.path;\n\n    if (props.currentTool === \"pen_add_node\") {\n      const paths = getEditingPath();\n      return (\n        <Fragment>\n          {\n            paths.map(item => \n              <Fragment>\n                <path key={item.attrD} onClick={handleClick} d={item.attrD} onMouseOver={e => handleOnMouseMove(e, item)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke}fill={props.path.fill}/>\n              </Fragment>\n            )\n          }\n          {nodes.length && nodes.map((node, index) => \n            <Node node={node} id={index} pathId={id} />\n          )}\n          {newNode && <Node node={newNode} id={-1} pathId={-1} onClick={handleAddNewNodeClick} onMouseLeave={() => setNewNode(null)} />}\n        </Fragment>\n      )\n    }\n\n    if (props.currentTool === \"mouse_rotate_path\" && UIStore.editingPathId === id) {\n      let rotate = `rotate(${props.path.rotate},${props.path.centerPoint.ctrx},${props.path.centerPoint.ctry})`;\n      let borderD = `M ${props.path.border[0].ctrx} ${props.path.border[0].ctry}` \n                      +` C ${props.path.border[0].ctrx} ${props.path.border[0].ctry} ${props.path.border[0].ctrx} ${props.path.border[0].ctry} ${props.path.border[1].ctrx} ${props.path.border[1].ctry}` \n                      +` C ${props.path.border[1].ctrx} ${props.path.border[1].ctry} ${props.path.border[1].ctrx} ${props.path.border[1].ctry} ${props.path.border[2].ctrx} ${props.path.border[2].ctry}` \n                      +` C ${props.path.border[2].ctrx} ${props.path.border[2].ctry} ${props.path.border[2].ctrx} ${props.path.border[2].ctry} ${props.path.border[3].ctrx} ${props.path.border[3].ctry}`\n                      +` C ${props.path.border[3].ctrx} ${props.path.border[3].ctry} ${props.path.border[3].ctrx} ${props.path.border[3].ctry} ${props.path.border[0].ctrx} ${props.path.border[0].ctry}`;\n      return (\n        <Fragment>\n          <path transform={rotate} onClick={handleClick} d={getD(nodes, !!props.path.type)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke} fill={props.path.fill}/>\n          <path d={borderD} transform={rotate} strokeWidth='2' stroke='#55f' fill='none' strokeDasharray='5'/>\n        </Fragment>\n\n      )\n    }\n    return (\n      <Fragment>\n        <path onClick={handleClick} d={getD(nodes, !!props.path.type)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke} fill={props.path.fill}/>\n        {id === UIStore.editingPathId && nodes.length && nodes.map((node, index) => \n          <Node key={index} node={node} id={index} pathId={id} />\n        )}\n      </Fragment>\n    )\n\n  }\n)\n\n\nexport default path;","import React, { Fragment,useEffect, useRef , useState} from 'react';\nimport {myIndexDB} from '../stores/myIndexDb';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\nimport Path from '../elements/path';\nimport { nodeTypes } from '../elements/constants';\nimport { getRelativePositon, getCentralSymmetryPosition ,getAngle,getCircleNodes,getRectNodes,calRotatePath} from '../utils/calculate';\nimport * as _ from 'lodash';\nimport '../style/EditorContainer.scss';\n\ninterface Props{\n  currentTool:string;\n}\n\nconst EditorContainer: React.FC<Props> = (props) =>  {\n\n  useEffect(() => {\n    if (!edtiorRef) {\n      return\n    }\n    const editorInfo = edtiorRef?.current?.getBoundingClientRect();\n    if (editorInfo) {\n      UIStore.editorInfo.top = editorInfo.top;\n      UIStore.editorInfo.left = editorInfo.left;\n      setEditorInfo(editorInfo);\n    }\n    const initPathList = async() =>{\n      try{\n        await myIndexDB.openDB();\n        await myIndexDB.readAll();\n        setNode({ posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1});//加载结束后重新渲染页面\n        console.log('加载数据结束');\n      }catch(err){\n        console.log('加载失败');\n      }\n    }\n    initPathList();\n  }, [])\n\n  const edtiorRef = useRef<SVGSVGElement>(null);\n  const editing = useRef<boolean>(false)\n  const [pathId, setPathId] = useState<number>(-1)\n  const [editorInfo, setEditorInfo] = useState(UIStore.editorInfo);\n  const [startNode, setStartNode] = useState<Boolean>(false);\n  const pathList = UIStore.pathList;\n  let pathid = UIStore.mouseState.pathid;\n  let nodeid = UIStore.mouseState.nodeid;\n\n \n  const [node, setNode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n  \n  useEffect(() => {\n    UIStore.setNodes(UIStore.mouseState.pathid, UIStore.mouseState.nodeid, node);\n  }, [node])\n\n  useEffect(() => {\n    if (props.currentTool !== \"pen_new_path\"){\n      const _pathid=pathId;\n      if (_pathid !== -1 && UIStore.pathList[_pathid].nodes.length < 2){\n        UIStore.deletePath(_pathid);\n        editing.current=false;\n        setPathId(-1);\n      }\n      else if (_pathid !== -1 && UIStore.pathList[_pathid].nodes.length >= 2){\n        editing.current=false;\n        setPathId(-1);\n      }\n    }\n  }, [props.currentTool,pathId])\n\n  const [toolNode, setToolNode] = useState<boolean>(false);\n  const [newToolNode, setNewToolNode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 }); \n  \n  const [newNode, setNewnode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n  const [lastNode, setLastnode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n\n  const [pos, setPos] = useState({posX : -1 ,posY : -1});\n  const [dragPath, setDragPath] = useState<boolean>(false);\n  let mouseUpTimeChange:any;\n\n  const handleMouseDown = (event: any) => {\n    event.stopPropagation();\n    const { x, y } = getRelativePositon(event);\n    switch(props.currentTool){\n      case 'mouse_drag_path':{\n        const currentPathid = UIStore.editingPathId;\n        if(currentPathid !== -1){\n          setDragPath(true);\n          setPos({\n            posX: x,\n            posY: y\n          })\n        }\n      break;\n      }\n      case 'mouse_rotate_path':{\n        const currentPathid = UIStore.editingPathId;\n        if(currentPathid !== -1){\n          setToolNode(true);\n          setNewToolNode({\n            posX:x,\n            posY:y,\n            ctrPosX:x,\n            ctrPosY:y\n          })\n        }\n      break;\n      }\n      case 'rectangle':\n      case 'circle':\n        setToolNode(true);\n        setNewToolNode({\n          posX:x,\n          posY:y,\n          ctrPosX:x,\n          ctrPosY:y\n        })\n      break;\n      case 'pen_drag_node':\n        pathid = UIStore.mouseState.pathid;\n        nodeid = UIStore.mouseState.nodeid;\n        if(pathid!==-1 && nodeid!== -1){\n          let node1 = UIStore.pathList[pathid].nodes[nodeid];\n          setNode({\n            ...node1\n          });\n       }\n      break;\n      case 'pen_new_path'://钢笔工具 按下的时候确定一个锚点的posx posy\n        if(!editing.current){\n          editing.current=true;\n          setStartNode(true);\n          setLastnode({//是路径的第一个锚点时 上一个锚点设置成一样\n            posX:x,\n            posY:y,\n            ctrPosX:x,\n            ctrPosY:y,\n            ctr2PosX:x,\n            ctr2PosY:y\n          })\n        }\n        setNewnode({\n          posX:x,\n          posY:y,\n          ctrPosX:x,\n          ctrPosY:y,\n          ctr2PosX:x,\n          ctr2PosY:y\n        })\n        break;\n    }\n  }\n    \n\n  const handleMouseMove = _.throttle((event: any) => {\n    event.stopPropagation();\n    const { x, y } = getRelativePositon(event);\n    switch(props.currentTool){\n      case 'mouse_drag_path':\n        if(!dragPath){\n          return;\n        }\n        const moveX=x-pos.posX;\n        const moveY=y-pos.posY;\n        const currentPathid = UIStore.editingPathId;\n          UIStore.movePath(currentPathid , moveX , moveY)\n          setPos({\n            posX: x,\n            posY: y\n          })\n      break;\n      case 'mouse_rotate_path':{\n        if(toolNode){\n          const currentPathid = UIStore.editingPathId;\n          const {ctrx,ctry} = UIStore.pathList[currentPathid].centerPoint;\n          setNewToolNode({\n            ...newToolNode,\n            ctrPosX:x,\n            ctrPosY:y\n          })\n          let angle = getAngle({\n            posX:newToolNode.posX - ctrx,\n            posY:newToolNode.posY - ctry,\n            ctrPosX:newToolNode.ctrPosX - ctrx,\n            ctrPosY:newToolNode.ctrPosY - ctry\n          });\n          UIStore.setStateInfo(currentPathid,'rotate',angle.toString());\n        }\n      break;\n      }\n      case 'rectangle':\n      case 'circle':\n        if(toolNode){\n          setNewToolNode({\n            ...newToolNode,\n            ctrPosX:x,\n            ctrPosY:y\n          })\n        }\n      break;\n      case 'pen_drag_node':\n        if(!UIStore.mouseState.drugging){\n          return\n        }\n        switch (UIStore.mouseState.type) {\n          case (nodeTypes.AnchorPoint): {\n            setNode({\n              ...node,\n              posX: x,\n              posY: y,\n            });\n            break;\n          }\n    \n          case (nodeTypes.Ctr1Point): {\n            setNode({\n              ...node,\n              ctrPosX: x,\n              ctrPosY: y,\n            });\n            break;\n          }\n    \n          case (nodeTypes.Ctr2Point): {\n            setNode({\n              ...node,\n              ctr2PosX: x,\n              ctr2PosY: y\n            });\n            break;\n          }\n\n      }\n      break;\n      case 'pen_new_path'://钢笔工具 如果在编辑模式 移动鼠标的时候不断变化控制点\n        if(editing.current){\n          setNewnode(\n            {\n              ...newNode,\n              ctrPosX:x,\n              ctrPosY:y,\n            }\n          )\n        }\n      break;\n    }\n  }, 5, { 'trailing': true })\n \n\n  const handleMouseUp = (event: any) => {\n    event.stopPropagation();\n    clearTimeout(mouseUpTimeChange);\n    mouseUpTimeChange = setTimeout(\n        () => {\n          switch(props.currentTool){\n            case 'mouse_drag_path':\n              setDragPath(false);\n              break;\n            case 'mouse_rotate_path':\n              if(toolNode){\n                const currentPathid = UIStore.editingPathId;\n                calRotatePath(currentPathid);\n                UIStore.setStateInfo(currentPathid,'rotate','0');//把rotate置零\n              }\n              setToolNode(false);\n              setNewToolNode({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n              break;\n            case 'rectangle':\n                if(toolNode){\n                  let _pathId = pathId;\n                  if(pathId === -1){\n                    _pathId = UIStore.addPath(1);\n                    let nodes = getRectNodes(newToolNode);\n                    nodes.forEach((node)=>{\n                      UIStore.addNodes(_pathId,node.posX,node.posY,node.ctrPosX,node.ctrPosY,node.ctr2PosX,node.ctr2PosY);\n                    })\n                  }\n                }\n                setToolNode(false);\n                setNewToolNode({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n              break;\n            case 'circle':\n                if(toolNode){\n                  let _pathId = pathId;\n                  if(pathId === -1){\n                    _pathId = UIStore.addPath(1);\n                    let nodes = getCircleNodes(newToolNode);\n                    nodes.forEach((node)=>{\n                      UIStore.addNodes(_pathId,node.posX,node.posY,node.ctrPosX,node.ctrPosY,node.ctr2PosX,node.ctr2PosY);\n                    })\n                  }\n                }\n                setToolNode(false);\n                setNewToolNode({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n              break;\n            case 'pen_drag_node':\n                UIStore.setMouseState(nodeTypes.AnchorPoint, false, pathid, nodeid);\n              break; \n            case 'pen_new_path':{//松开鼠标确定一个点 加入path里\n              if (!editing.current){\n                return;\n              }\n              let _pathId = pathId;\n              if(pathId === -1){\n                _pathId = UIStore.addPath()\n                setPathId(_pathId);\n              }\n\n              UIStore.setEditingPath(_pathId);\n\n              if (UIStore.pathList[_pathId].type) {\n                // 需要创建闭合路径了，退出编辑模式\n                const _node = UIStore.pathList[_pathId].nodes[0];\n                const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(_node);\n                UIStore.pathList[_pathId].nodes[0].ctr2PosX = ctr2PosX;\n                UIStore.pathList[_pathId].nodes[0].ctr2PosY = ctr2PosY;\n                editing.current = false;\n                setPathId(-1);\n                return\n              }\n\n              const nodesLength = UIStore.pathList[_pathId].nodes.length;\n              const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(newNode);\n              UIStore.addNodes(_pathId,newNode.posX,newNode.posY,newNode.ctrPosX,newNode.ctrPosY,ctr2PosX,ctr2PosY,nodesLength);\n              if(startNode){// 处理第一个节点的渲染\n                setLastnode({\n                  ...newNode,\n                  ctrPosX: ctr2PosX,\n                  ctrPosY: ctr2PosY\n                })\n                setStartNode(false);\n              }else{\n                setLastnode({\n                  ...newNode\n                })\n              }\n            }\n            break;\n          } \n\n        },250)\n  }\n\n  const pathDoubleClick:any = () => {\n    clearTimeout(mouseUpTimeChange);\n    switch(props.currentTool){\n      case 'pen_new_path':\n        if (!editing.current || pathId === -1){\n          return;\n        }\n        let _pathId = pathId;\n        const nodesLength = UIStore.pathList[_pathId].nodes.length;\n        UIStore.addNodes(_pathId,newNode.posX,newNode.posY,newNode.ctrPosX,newNode.ctrPosY,newNode.ctrPosX,newNode.ctrPosY,nodesLength,true);\n    }\n    editing.current=false;\n    setPathId(-1);\n  }\n\n  const addNodes:any = () =>{\n    if(editing.current){\n      const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(lastNode);\n        let getD = `M ${lastNode.posX} ${lastNode.posY} C ${ctr2PosX} ${ctr2PosY} ${newNode.ctrPosX} ${newNode.ctrPosY}`;\n        let width = 0;\n\n        if(lastNode.posX !== newNode.posX && lastNode.posY !== newNode.posY){\n          getD += ` ${newNode.posX} ${newNode.posY}`;\n          width = 1;\n        }else{\n          getD += ` ${newNode.ctrPosX} ${newNode.ctrPosY}`;//当没有确定新的锚点时\n          width = 0;\n        }\n        return(\n          <Fragment>\n            <path d = {getD}  fill=\"none\" stroke=\"#000\" strokeWidth=\"1\"/>\n            <circle className=\"point-control\" cx={newNode.posX} cy={newNode.posY} stroke=\"#55f\" r=\"10\" />\n            <line x1={newNode.posX} y1={newNode.posY} x2={newNode.ctrPosX} y2={newNode.ctrPosY} stroke=\"#555\" strokeWidth={width} />\n          </Fragment>  \n        )\n    }\n  }\n  const addOtherPath:any = () =>{\n    if(toolNode){\n\n      let nodes = new Array(4).fill({\n        posX:-1,\n        posY:-1,\n        ctrPosX:-1,\n        ctrPosY:-1,\n        ctr2PosX:-1,\n        ctr2PosY:-1\n      })\n      switch(props.currentTool){\n        case 'rectangle': nodes = getRectNodes(newToolNode);break;\n        case 'circle':nodes = getCircleNodes(newToolNode);break;\n      }\n      let getD = \n      `M ${nodes[0].posX} ${nodes[0].posY} \n      C ${nodes[0].ctrPosX} ${nodes[0].ctrPosY} ${nodes[1].ctrPosX} ${nodes[1].ctrPosY} ${nodes[1].posX} ${nodes[1].posY} \n      C ${nodes[1].ctr2PosX} ${nodes[1].ctr2PosY} ${nodes[2].ctrPosX} ${nodes[2].ctrPosY} ${nodes[2].posX} ${nodes[2].posY} \n      C ${nodes[2].ctr2PosX} ${nodes[2].ctr2PosY} ${nodes[3].ctrPosX} ${nodes[3].ctrPosY} ${nodes[3].posX} ${nodes[3].posY} \n      C ${nodes[3].ctr2PosX} ${nodes[3].ctr2PosY} ${nodes[0].ctr2PosX} ${nodes[0].ctr2PosY} ${nodes[0].posX} ${nodes[0].posY} Z`;\n        return(\n          <Fragment>\n            <path d = {getD}  fill=\"none\" stroke=\"#55f\" strokeWidth=\"1\"/>\n          </Fragment>  \n        )\n    }\n  }\n\n  return(\n    <div className=\"editor-container\">\n      <svg ref={edtiorRef} className=\"editor-svg\" width={editorInfo.width} height={editorInfo.height}\n           onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}\n          onDoubleClick={pathDoubleClick}>\n        {addNodes()}\n        {pathList.map(path => (\n          <Path key={path.id} path={path} currentTool={props.currentTool}/>\n        ))}\n        {addOtherPath()}\n\n      </svg>\n    </div>\n  )\n}\n\nexport default EditorContainer;","import { observer } from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport '../style/statusContainer.scss';\nimport { UIStore } from '../stores/UIStore';\n\ninterface Props{\n  \n}\n\nconst StatusContainer: React.FC<Props> = observer((props: Props) => {\n\n  const currentPathid = UIStore.editingPathId\n  \n  const inputChange = (event: any) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    if(currentPathid!== -1){\n      UIStore.setStateInfo(currentPathid,name,value);\n    }\n  }\n  let pathInfo:any;\n  if(currentPathid !== -1){\n     pathInfo = UIStore.pathList[currentPathid].nodes.length ? UIStore.pathList[currentPathid]: null;\n  }\n    \n  return (\n    <Fragment>\n      <div className = \"statusContainer\">\n          <h4>状态栏</h4>\n          <label className = \"statusinput\">\n            <span>PositionX:</span>\n            <input type=\"number\"  name=\"X\" value = {pathInfo?pathInfo.nodes[0].posX.toFixed(1):0} onChange={inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>PositionY:</span>\n            <input type=\"number\" name=\"Y\"  value = {pathInfo?pathInfo.nodes[0].posY.toFixed(1):0} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>fill:</span>\n            <input type=\"color\" name=\"fill\" value = {(!pathInfo || pathInfo.fill === 'none')?'#ffffff':pathInfo.fill} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke Width:</span>\n            <input type=\"number\" name=\"strokeWidth\" value = {pathInfo?pathInfo.strokeWidth:0} min = \"0\" max = \"40\"  onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke:</span>\n            <input type=\"color\" name=\"stroke\" value = {pathInfo?pathInfo.stroke:'#000000'}  onChange = {inputChange}/>\n          </label>\n      </div>\n    </Fragment>\n  )\n\n})\n\nexport default StatusContainer;\n","import React  from 'react';\nimport '../style/FunctionContainer.scss'\n\n\ninterface Props{\n  currentTool:string;\n  set:(arg0: string)=>void;\n  id:string;\n\n}\n\nconst ToolbarContainer:  React.FC<Props> = (props) => {\n\n  function handleClick(e:any){\n    props.set(e.target.id)\n  }\n\n  return (\n\n\n      <div  className=\"function\">\n        {( ()=>{\n            switch(props.id){\n              case \"mouse\":return [\n                <div key={0} className={props.currentTool===\"mouse_rotate_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"mouse_rotate_path\">Rotate Path</div>,\n                <div key={1} className={props.currentTool===\"mouse_scaling_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"mouse_scaling_path\">Scaling Path</div>,\n                <div key={2} className={props.currentTool===\"mouse_drag_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"mouse_drag_path\">Drag Path</div>\n              ]\n              case \"pen\":return [\n                <div key={0} className={props.currentTool===\"pen_add_node\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"pen_add_node\">Add Node</div>,\n                <div key={1} className={props.currentTool===\"pen_drag_node\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"pen_drag_node\">Drag Node</div>,\n                <div key={2} className={props.currentTool===\"pen_new_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"pen_new_path\">New Path</div>\n              ]\n\n              default:return null;\n            }\n          }\n        )()}\n      </div>\n\n\n\n  )\n}\n\nexport default ToolbarContainer;\n","export default __webpack_public_path__ + \"static/media/circle.292ce4e1.svg\";","export default __webpack_public_path__ + \"static/media/pen.4de46a1c.svg\";","export default __webpack_public_path__ + \"static/media/mouse.dfeff54d.svg\";","export default __webpack_public_path__ + \"static/media/line.86048c7a.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.d8ea8f58.svg\";","import React from 'react';\nimport '../style/ToolbarContainer.scss'\nimport circle from '../asset/circle.svg'\nimport pen from '../asset/pen.svg'\nimport mouse from '../asset/mouse.svg'\nimport line from '../asset/line.svg'\nimport rectangle from '../asset/rectangle.svg'\n\ninterface Props{\n  currentTool:string;\n  set:(arg0: string)=>void;\n}\n\nconst ToolbarContainer:  React.FC<Props> = (props) => {\n\n  function handleClick(e:any){\n    props.set(e.target.id)\n  }\n\n  return (\n    <div className=\"toolbar\">\n        <div className=\"toolitem\" onClick={handleClick} >\n            <img className={props.currentTool.indexOf(\"mouse\")!==-1?\"itmeIconselect\":\"itmeIcon\"} id=\"mouse\"  alt=\"mouse\" src={mouse}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"circle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"circle\" alt=\"circle\" src={circle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"rectangle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"rectangle\" alt=\"rectangle\" src={rectangle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"line\"?\"itmeIconselect\":\"itmeIcon\"} id=\"line\" alt=\"line\" src={line}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool.indexOf(\"pen\")!==-1?\"itmeIconselect\":\"itmeIcon\"} id=\"pen\" alt=\"pen\" src={pen}/>\n        </div>\n    </div>\n  )\n}\n\nexport default ToolbarContainer;\n","import React, { useState } from 'react';\nimport EditorContainer from './EditorContainer';\nimport StatusContainer from './StatusContainer';\nimport FunctionContainer from './FunctionContainer';\nimport '../style/index.scss';\nimport ToolbarContainer from \"./ToolbarContainer\";\nimport '../style/BasicContainer.scss'\nimport { UIStore } from '../stores/UIStore';\n\n\nconst BasicLayout = () => {\n\n  const [currentTool, setCurrenttool] = useState(\"mouse\");\n  const handleToolChange = (toolName: string) => {\n    UIStore.setCurrentTool(toolName);\n    setCurrenttool(toolName)\n  }\n\n  return(\n    <div className=\"basic-container\">\n      <ToolbarContainer currentTool={currentTool} set={handleToolChange}/>\n      {\n        currentTool.indexOf(\"mouse\")===-1\n          ? null\n          : <FunctionContainer currentTool={currentTool} set={handleToolChange} id=\"mouse\"/>\n      }\n      {\n        currentTool.indexOf(\"pen\")===-1\n          ? null\n          : <FunctionContainer currentTool={currentTool} set={handleToolChange} id=\"pen\"/>\n      }\n      <EditorContainer currentTool={currentTool} />\n\n\n      <StatusContainer />\n\n    </div>\n  )\n}\n\nexport default BasicLayout\n","import React from 'react';\nimport BasciLayout from './containers/BasciLayout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasciLayout />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
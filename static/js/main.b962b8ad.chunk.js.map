{"version":3,"sources":["elements/constants.ts","stores/UIStore.ts","utils/calculate.ts","elements/node.tsx","elements/path.tsx","containers/EditorContainer.tsx","containers/StatusContainer.tsx","containers/FunctionContainer.tsx","asset/circle.svg","asset/pen.svg","asset/mouse.svg","asset/line.svg","asset/rectangle.svg","containers/ToolbarContainer.tsx","containers/BasciLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nodeTypes","UIStore","editorInfo","width","height","left","top","mouseState","type","drugging","pathid","nodeid","pathList","addPath","push","id","length","nodes","strokeWidth","stroke","fill","deletePath","pathId","setNodes","nodeId","node","addNodes","posX","posY","ctrPosX","ctrPosY","ctr2PosX","ctr2PoxY","index","nodesLength","slice","ctr2PosY","setMouseState","dragging","movePath","moveX","moveY","it","setStateInfo","name","value","node1","Number","node2","makeAutoObservable","this","getRelativePositon","event","x","clientX","y","clientY","Node","observer","props","onClick","onMouseLeave","className","cx","cy","handleMouseDown","elec","onMouseDown","e","x1","y1","x2","y2","path","getD","d","i","console","log","handleClick","stopPropagation","setPathid","handleOnMouseMove","_","throttle","item","currentTool","nums","reduce","pre","cur","flat","bezier","Bezier","setBezier","nodeInfo","project","setNewNode","t","useState","editing","setEditing","newNode","onDoubleClick","indexOf","paths","mockNode","attrD","getEditingPath","map","onMouseOver","newPath","split","points","findIndex","undefined","addingNode","right","EditorContainer","useEffect","edtiorRef","current","getBoundingClientRect","setEditorInfo","useRef","setPathId","startNode","setStartNode","setNode","_pathid","mouseUpTimeChange","setNewnode","lastNode","setLastnode","pos","setPos","dragPath","setDragPath","handleMouseMove","currentPathid","ref","onMouseMove","onMouseUp","clearTimeout","setTimeout","_pathId","mockCtrX","mockCtrY","set","r","StatusContainer","inputChange","target","pathInfo","onChange","min","max","ToolbarContainer","alt","src","mouse","circle","rectangle","line","pen","BasicLayout","setCurrenttool","setCurrentPathid","App","BasciLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b962b8ad.chunk.js","sourcesContent":["export const nodeTypes = {\n  AnchorPoint: 0,\n  Ctr1Point: 1,\n  Ctr2Point: 2\n}\n","import { makeAutoObservable } from 'mobx';\nimport { nodeTypes } from '../elements/constants';\n\n\nexport interface Node {\n  posX: number,\n  posY: number,\n  ctrPosX: number,\n  ctrPosY: number,\n  ctr2PosX?: number,\n  ctr2PosY?: number,\n}\n\nexport interface Path {\n  id: number,\n  nodes: Node[],\n  strokeWidth: number,\n  stroke: string,\n  fill:string\n}\n\nclass UIstore {\n\n  editorInfo = {\n    width: 800,\n    height: 600,\n    left: 0,\n    top: 0\n  }\n  mouseState ={\n    type: nodeTypes.AnchorPoint,\n    drugging: false,\n    pathid: 0,\n    nodeid: 0\n  }\n\n  pathList: Path[] = [];\n\n  constructor() {\n    makeAutoObservable(this);\n    this.pathList.push(\n      {\n        id: 0,\n        nodes: [\n          {\n            posX: 125.5,\n            posY: 171.5,\n            ctrPosX: 194.5,\n            ctrPosY: 85.5\n          },\n          {\n            posX: 246.5,\n            posY: 140.5,\n            ctrPosX: 288.5,\n            ctrPosY: 95.5,\n            ctr2PosX: 204.5,\n            ctr2PosY: 185.5\n          },\n          {\n            posX: 210,\n            posY: 261,\n            ctrPosX: 309.5,\n            ctrPosY: 309.5,\n          }\n        ],\n        strokeWidth: 5,\n        stroke: \"#000000\",\n        fill: \"#ffffff\"\n      }\n    )\n  }\n\n  addPath = () => {\n    this.pathList.push(\n        {\n          id: this.pathList.length,\n          nodes: [],\n          strokeWidth: 5,\n          stroke: \"#000000\",\n          fill: \"#ffffff\"\n        }\n    )\n    return this.pathList.length - 1;\n  }\n\n  deletePath = (pathId: number) => {\n    delete this.pathList[pathId]\n  }\n\n  setNodes = (pathId: number, nodeId: number, node: Node) => {\n    this.pathList[pathId].nodes[nodeId] = node;\n  }\n\n  addNodes =(pathId: number , posX: number, posY: number, ctrPosX?: number, ctrPosY?: number, ctr2PosX?: number, ctr2PoxY?: number, index?: number) => {\n\n    const nodesLength = this.pathList[pathId].nodes.length;\n    if(nodesLength === 0){\n      this.pathList[pathId].nodes.push(\n        {\n          posX: posX,\n          posY: posY,\n          ctrPosX: ctrPosX || posX,\n          ctrPosY: ctrPosY || posY\n        }\n      )\n    }\n    else{\n      this.pathList[pathId].nodes = [\n        ...this.pathList[pathId].nodes.slice(0, index || nodesLength - 1),\n        {\n          posX: posX,\n          posY: posY,\n          ctrPosX: ctrPosX || posX,\n          ctrPosY: ctrPosY || posY,\n          ctr2PosX: ctr2PosX,\n          ctr2PosY: ctr2PoxY\n        },\n        ...this.pathList[pathId].nodes.slice(index || nodesLength - 1)\n      ]\n\n    }\n\n  }\n\n  setMouseState = (type: number, dragging:boolean, pathid:number, nodeid:number) => {\n    this.mouseState.pathid = pathid;\n    this.mouseState.nodeid = nodeid;\n    this.mouseState.type = type;\n    this.mouseState.drugging = dragging;\n  }\n\n  movePath = (pathid: number , moveX: number , moveY: number) => {\n    for( let it of this.pathList[pathid].nodes){\n      it.posX += moveX;\n      it.posY += moveY;\n      it.ctrPosX += moveX;\n      it.ctrPosY += moveY;\n      if(it.ctr2PosY && it.ctr2PosX){\n        it.ctr2PosX += moveX;\n        it.ctr2PosY += moveY;\n\n      }\n\n    }\n}\n\n  setStateInfo = (pathId: number, name:string, value:string) => {\n    switch(name){\n      case 'X':\n        let node1 = this.pathList[0].nodes[0];\n        node1.posX = Number(value);\n        this.setNodes(0, 0,node1);\n        break;\n      case 'Y':\n        let node2 = this.pathList[0].nodes[0];\n        node2.posY = Number(value)\n        this.setNodes(0, 0,node2);\n        break;\n      case 'fill':\n        this.pathList[pathId].fill = value;\n        break;\n      case 'strokeWidth':\n        this.pathList[pathId].strokeWidth = Number(value);\n        break;\n      case 'stroke':\n        this.pathList[pathId].stroke = value;\n        break;\n      default:        \n    }\n  }\n}\n\nexport const UIStore = new UIstore();","import { UIStore } from '../stores/UIStore'\n\nexport function getRelativePositon(event: any) {\n  const editorInfo = UIStore.editorInfo;\n  return {\n    x: event.clientX - editorInfo.left,\n    y: event.clientY - editorInfo.top\n  }\n}","import { observer} from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport { nodeTypes } from './constants';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\n\ninterface Props {\n  node: typeNode,\n  id: number,\n  pathId: number,\n  onClick?: any,\n  onMouseLeave?: any\n}\n\nconst Node = observer((props: Props) => {\n\n  if (props.id === -1) {\n    return (\n      <circle onClick={props.onClick} onMouseLeave={props.onMouseLeave} className=\"point-control-add\" cx={props.node.posX} cy={props.node.posY} />\n    )\n  }\n\n  const node = UIStore.pathList[props.pathId].nodes[props.id];\n\n  const handleMouseDown = (elec:number, event: any) => {\n    switch(elec) {\n      case nodeTypes.AnchorPoint: {\n        UIStore.setMouseState(nodeTypes.AnchorPoint, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr1Point: {\n        UIStore.setMouseState(nodeTypes.Ctr1Point, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr2Point: {\n        UIStore.setMouseState(nodeTypes.Ctr2Point, true, props.pathId, props.id);\n        break\n      }\n    }\n\n  }\n  \n  return(\n    <Fragment>\n      <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.AnchorPoint, e)} cx={node.posX} cy={node.posY} />\n        <line x1={node.posX} y1={node.posY} x2={node.ctrPosX} y2={node.ctrPosY} stroke=\"#555\" strokeWidth=\"1\" />\n      <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr1Point, e)} cx={node.ctrPosX} cy={node.ctrPosY} />\n\n      {node.ctr2PosX && node.ctr2PosY && <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr2Point, e)} cx={node.ctr2PosX} cy={node.ctr2PosY} />}\n      {node.ctr2PosX && node.ctr2PosY && <line x1={node.posX} y1={node.posY} x2={node.ctr2PosX} y2={node.ctr2PosY} stroke=\"#555\" strokeWidth=\"1\" />}\n    </Fragment>\n  )\n\n})\n\nexport default Node;","import React, { Fragment, useState } from 'react';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\nimport { getRelativePositon } from '../utils/calculate';\nimport Node from './node';\nimport _ from 'lodash';\nimport Bezier from 'bezier-js';\nimport { observer } from 'mobx-react';\n\ninterface Props{\n  path: {\n    id: number,\n    nodes: typeNode[],\n    strokeWidth: number,\n    stroke: string,\n    fill:string\n  }\n  setPathid:(arg0: number)=>void;\n  currentTool:String;\n}\n\nconst path: React.FC<Props> = observer((props: Props) => {\n    \n    const getD = (nodes: string | any[]) => {\n\n      let d = \"\";\n      if(nodes.length === 1){//钢笔增加路径的时候对第一个节点的渲染\n        return d;\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        if (i === 0) {\n          d += `M ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctrPosX} ${nodes[i].ctrPosY} `\n        } else if (i + 1 <= nodes.length - 1) {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctr2PosX} ${nodes[i].ctr2PosY} `\n        } else {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY}`\n        }\n      }\n\n      console.log(d)\n      \n      return d\n    }\n    \n    const getEditingPath = () => {\n      let paths = [];\n      let mockNode = null;\n\n      for (let i = 0; i + 1 < nodes.length; i++) {\n\n        if (i !== 0 && i + 1 !== nodes.length) {\n          const node = nodes[i];\n\n          mockNode = {\n            posX: node.posX,\n            posY: node.posY,\n            ctrPosX: node.ctr2PosX,\n            ctrPosY: node.ctr2PosY\n          }\n        }\n\n        const attrD = getD([mockNode ? mockNode : nodes[i], nodes[i + 1]]);\n        paths.push({\n          attrD: attrD,\n          nodes: [\n            mockNode ? mockNode : nodes[i], \n            nodes[i + 1]\n          ],\n        });\n      }\n\n      return paths\n    }\n    \n    const handleDoubleClick = (event: any) => {\n      event.stopPropagation();\n      if(props.currentTool.indexOf(\"mouse\") !== -1)\n        setEditing(true);\n    }\n\n    const handleClick = (event: any) => {\n      event.stopPropagation();\n      props.setPathid(props.path.id);\n    }\n\n    const handleOnMouseMove = _.throttle((event: any, item: any) => {\n      event.stopPropagation();\n      if(props.currentTool !== \"mouse_add_node\"){\n        return\n      }\n      const { x, y } = getRelativePositon(event);\n\n      const nums = item.nodes.reduce((pre: Array<number>, cur: typeNode, index: number) => {\n        if (index === item.nodes.length - 1) {\n          pre.push(cur.ctrPosX, cur.ctrPosY, cur.posX, cur.posY);\n        } else {\n          pre.push(cur.posX, cur.posY, cur.ctrPosX, cur.ctrPosY);\n        }\n\n        return pre\n      }, []).flat(1);\n\n      const bezier = new Bezier(nums);\n      setBezier(bezier);\n      const nodeInfo = bezier.project({x, y});\n\n      setNewNode({\n        posX: nodeInfo.x,\n        posY: nodeInfo.y,\n        ctrPosX: nodeInfo.x,\n        ctrPosY: nodeInfo.y,\n        t: nodeInfo.t\n      })\n\n    }, 50);\n\n    const handleAddNewNodeClick = () => {\n      if(props.currentTool !== \"mouse_add_node\"){\n        return\n      }\n      const newPath = bezier?.split(newNode.t); // 这里贝塞尔曲线被分成了两个部分，需要分别更新左右两端\n      let points = newPath?.left.points; // 0 1 2 3 分别是第一个点的位置、控制点，第二个点的控制点、位置\n\n      if (!newPath || !points) {\n        return\n      }\n\n      let index = nodes.findIndex((node) => {\n        return node.posX === bezier?.points[0].x && node.posY === bezier?.points[0].y\n      });\n\n      let node = {\n        posX: points[0].x,\n        posY: points[0].y,\n        ctrPosX: index ? UIStore.pathList[id].nodes[index].ctrPosX : points[1].x,\n        ctrPosY: index ? UIStore.pathList[id].nodes[index].ctrPosY : points[1].y,\n        ctr2PosX: index ? points[1].x : undefined,\n        ctr2PosY: index ? points[1].y : undefined\n      } // 这里要判定一下index为0  即起始节点的情况，做特殊处理\n\n      let addingNode = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: 0,\n        ctr2PosY: 0\n      } // 这是新的节点信息\n\n      UIStore.setNodes(id, index, node); // 更新左端点\n\n      points = newPath?.right.points;\n\n      node = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: UIStore.pathList[id].nodes[index + 1].ctr2PosX || undefined,\n        ctr2PosY: UIStore.pathList[id].nodes[index + 1].ctr2PosY || undefined\n      }\n\n      addingNode.ctr2PosX = points[1].x;\n      addingNode.ctr2PosY = points[1].y; // 新的节点信息需要左右两端的\n      \n      UIStore.setNodes(id, index + 1, node); // 更新右端点\n\n      UIStore.addNodes(id, addingNode.posX, addingNode.posY, addingNode.ctrPosX, addingNode.ctrPosY, addingNode.ctr2PosX, addingNode.ctr2PosY, index + 1);\n      setNewNode(null);\n    }\n\n    const [editing, setEditing] = useState<boolean>(false);\n    const [newNode, setNewNode] = useState<any>();\n    const [bezier, setBezier] = useState<Bezier>();\n    const { id, nodes } = props.path;\n\n    if (!editing) {\n      return (\n        <Fragment>\n          <path onDoubleClick={handleDoubleClick} onClick={handleClick} d={getD(nodes)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke} fill={props.path.fill}/>\n        </Fragment>\n      );\n    }\n\n    const paths = getEditingPath();\n\n    return (\n      <Fragment>\n        {\n          paths.map(item => \n            <Fragment>\n              <path key={item.attrD} onClick={handleClick} d={item.attrD} onMouseOver={e => handleOnMouseMove(e, item)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke}fill={props.path.fill}/>\n            </Fragment>\n          )\n        }\n        {nodes.map((node, index) => \n          <Node node={node} id={index} pathId={id} />\n        )}\n        {newNode && <Node node={newNode} id={-1} pathId={-1} onClick={handleAddNewNodeClick} onMouseLeave={() => setNewNode(null)} />}\n      </Fragment>\n    )\n\n\n  }\n)\n\n\nexport default path;","import React, { Fragment,useEffect, useRef , useState} from 'react';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\nimport Path from '../elements/path';\nimport { nodeTypes } from '../elements/constants';\nimport { getRelativePositon } from '../utils/calculate';\nimport * as _ from 'lodash';\nimport '../style/EditorContainer.scss';\n\ninterface Props{\n  currentTool:string;\n  currentPathid:number;\n  set:(arg0: number)=>void;\n}\n\nconst EditorContainer: React.FC<Props> = (props) =>  {\n\n  useEffect(() => {\n    if (!edtiorRef) {\n      return\n    }\n    const editorInfo = edtiorRef?.current?.getBoundingClientRect();\n    if (editorInfo) {\n      UIStore.editorInfo.top = editorInfo.top;\n      UIStore.editorInfo.left = editorInfo.left;\n      setEditorInfo(editorInfo);\n    }\n  }, [])\n\n  const edtiorRef = useRef<SVGSVGElement>(null);\n  const editing = useRef<boolean>(false)\n  const [pathId, setPathId] = useState<number>(-1)\n  const [editorInfo, setEditorInfo] = useState(UIStore.editorInfo);\n  const [startNode, setStartNode] = useState<Boolean>(false);\n  const pathList = UIStore.pathList;\n  let pathid = UIStore.mouseState.pathid;\n  let nodeid = UIStore.mouseState.nodeid;\n\n \n  const [node, setNode] = useState<typeNode>(pathList[UIStore.mouseState.pathid].nodes[UIStore.mouseState.nodeid]);\n  \n  useEffect(() => {\n    UIStore.setNodes(UIStore.mouseState.pathid, UIStore.mouseState.nodeid, node);\n  }, [node])\n\n  useEffect(() => {\n    if (props.currentTool !== \"pen\"){\n      const _pathid=pathId;\n      if (_pathid !== -1 && UIStore.pathList[_pathid].nodes.length < 2){\n        UIStore.deletePath(_pathid);\n        editing.current=false;\n        setPathId(-1);\n      }\n      else if (_pathid !== -1 && UIStore.pathList[_pathid].nodes.length >= 2){\n        editing.current=false;\n        setPathId(-1);\n      }\n\n\n    }\n  }, [props.currentTool,pathId])\n\n  const [newNode, setNewnode] = useState<typeNode>(pathList[pathid].nodes[nodeid]);\n  const [lastNode, setLastnode] = useState<typeNode>(pathList[pathid].nodes[nodeid]);\n  const [pos, setPos] = useState({posX : -1 ,posY : -1});\n  const [dragPath, setDragPath] = useState<boolean>(false);\n  let mouseUpTimeChange:any;\n\n  const handleMouseDown = (event: any) => {\n    event.stopPropagation();\n    const { x, y } = getRelativePositon(event);\n    switch(props.currentTool){\n      case 'mouse_drag_node':{\n        pathid = UIStore.mouseState.pathid;\n        nodeid = UIStore.mouseState.nodeid\n        let node1 = UIStore.pathList[pathid].nodes[nodeid];\n        setNode({\n          ...node1\n        });\n      }\n      break;\n      case 'mouse_drag_path':\n        setDragPath(true);\n        setPos({\n          posX: x,\n          posY: y\n        })\n      break;\n      case 'pen'://钢笔工具 按下的时候确定一个锚点的posx posy\n        if(!editing.current){\n          editing.current=true;\n          setStartNode(true);\n          setLastnode({//是路径的第一个锚点时 上一个锚点设置成一样\n            posX:x,\n            posY:y,\n            ctrPosX:x,\n            ctrPosY:y,\n            ctr2PosX:x,\n            ctr2PosY:y\n          })\n        }\n        setNewnode({\n          posX:x,\n          posY:y,\n          ctrPosX:x,\n          ctrPosY:y,\n          ctr2PosX:x,\n          ctr2PosY:y\n        })\n        break;\n    }\n  }\n    \n\n  const handleMouseMove = _.throttle((event: any) => {\n    event.stopPropagation();\n    const { x, y } = getRelativePositon(event);\n    switch(props.currentTool){\n      case 'mouse_drag_node':\n        if(!UIStore.mouseState.drugging){\n          return\n        }\n        switch (UIStore.mouseState.type) {\n          case (nodeTypes.AnchorPoint): {\n            setNode({\n              ...node,\n              posX: x,\n              posY: y,\n            });\n            break;\n          }\n    \n          case (nodeTypes.Ctr1Point): {\n            setNode({\n              ...node,\n              ctrPosX: x,\n              ctrPosY: y,\n            });\n            break;\n          }\n    \n          case (nodeTypes.Ctr2Point): {\n            setNode({\n              ...node,\n              ctr2PosX: x,\n              ctr2PosY: y\n            });\n            break;\n          }\n\n      }\n    \n      break;\n      case 'mouse_drag_path':\n        if(!dragPath){\n          return;\n        }\n        const moveX=x-pos.posX;\n        const moveY=y-pos.posY;\n          UIStore.movePath(props.currentPathid , moveX , moveY)\n          setPos({\n            posX: x,\n            posY: y\n          })\n\n\n        break;\n      case 'pen'://钢笔工具 如果在编辑模式 移动鼠标的时候不断变化控制点\n        if(editing.current){\n          setNewnode(\n            {\n              ...newNode,\n              ctrPosX:x,\n              ctrPosY:y,\n            }\n          )\n        }\n      break;\n    }\n  }, 5, { 'trailing': true })\n \n\n  const handleMouseUp = (event: any) => {\n    event.stopPropagation();\n    clearTimeout(mouseUpTimeChange);\n    mouseUpTimeChange = setTimeout(\n        () => {\n          switch(props.currentTool){\n            case 'mouse_drag_node':\n              UIStore.setMouseState(nodeTypes.AnchorPoint, false, pathid, nodeid);\n            break;\n            case 'mouse_drag_path':\n              setDragPath(false);\n\n              break;\n            case 'pen':{//松开鼠标确定一个点 加入path里\n              if (!editing.current){\n                return;\n              }\n              let _pathId = pathId;\n              if(pathId === -1){\n                _pathId = UIStore.addPath()\n                setPathId(_pathId);\n              }\n              const nodesLength = UIStore.pathList[_pathId].nodes.length;\n              const mockCtrX = newNode.posX * 2 - newNode.ctrPosX;\n              const mockCtrY = newNode.posY * 2 - newNode.ctrPosY;\n              UIStore.addNodes(_pathId,newNode.posX,newNode.posY,newNode.ctrPosX,newNode.ctrPosY,mockCtrX,mockCtrY,nodesLength);\n              if(startNode){// 处理第一个节点的渲染\n                setLastnode({\n                  ...newNode,\n                  ctrPosX: mockCtrX,\n                  ctrPosY: mockCtrY\n                })\n                setStartNode(false);\n              }else{\n                setLastnode({\n                  ...newNode\n                })\n              }\n            }\n            break;\n          } \n\n        },250)\n  }\n\n  const pathDoubleClick:any = () => {\n    clearTimeout(mouseUpTimeChange);\n    editing.current=false;\n    setPathId(-1);\n  }\n\n  const addNodes:any = () =>{ \n    if(editing.current){\n        const mockCtrX = lastNode.posX * 2 - lastNode.ctrPosX;\n        const mockCtrY = lastNode.posY * 2 - lastNode.ctrPosY;\n        let getD = `M ${lastNode.posX} ${lastNode.posY} C ${mockCtrX} ${mockCtrY} ${newNode.ctrPosX} ${newNode.ctrPosY}`;\n        let width = 0;\n\n        if(lastNode.posX !== newNode.posX && lastNode.posY !== newNode.posY){\n          getD += ` ${newNode.posX} ${newNode.posY}`;\n          width = 1;\n        }else{\n          getD += ` ${newNode.ctrPosX} ${newNode.ctrPosY}`;//当没有确定新的锚点时\n          width = 0;\n        }\n        return(\n          <Fragment>\n            <path d = {getD}  fill=\"none\" stroke=\"#000\" strokeWidth=\"1\"/>\n            <circle className=\"point-control\" cx={newNode.posX} cy={newNode.posY} stroke=\"#55f\" r=\"10\" />\n            <line x1={newNode.posX} y1={newNode.posY} x2={newNode.ctrPosX} y2={newNode.ctrPosY} stroke=\"#555\" strokeWidth={width} />\n            <circle className=\"point-control\" cx={newNode.ctrPosX} cy={newNode.ctrPosY} stroke=\"#000\" r=\"10\" />\n          </Fragment>  \n        )\n    }\n  }\n\n  return(\n    <div className=\"editor-container\">\n      <svg ref={edtiorRef} className=\"editor-svg\" width={editorInfo.width} height={editorInfo.height}\n           onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}\n           onDoubleClick={pathDoubleClick}>\n        {pathList.map(path => (\n          <Path key={path.id} path={path} setPathid={props.set} currentTool={props.currentTool}/>\n        ))}\n        {addNodes()}\n      </svg>\n    </div>\n  )\n}\n\nexport default EditorContainer;","import { observer } from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport '../style/statusContainer.scss';\nimport { UIStore } from '../stores/UIStore';\n\ninterface Props{\n  currentPathid:number;\n}\n\nconst StatusContainer: React.FC<Props> = observer((props: Props) => {\n  \n  const inputChange = (event: any) => {\n    let name = event.target.name;\n    let value = event.target.value;\n      UIStore.setStateInfo(props.currentPathid,name,value);\n  }\n\n  const pathInfo = UIStore.pathList[props.currentPathid];\n\n  return (\n    <Fragment>\n      <div className = \"statusContainer\">\n          <h4>状态栏</h4>\n          <label className = \"statusinput\">\n            <span>PositionX:</span>\n            <input type=\"number\"  name=\"X\" value={pathInfo.nodes[0].posX} onChange={inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>PositionY:</span>\n            <input type=\"number\" name=\"Y\" value = {pathInfo.nodes[0].posY} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>fill:</span>\n            <input type=\"color\" name=\"fill\" value = {pathInfo.fill} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke Width:</span>\n            <input type=\"number\" name=\"strokeWidth\" min = \"0\" max = \"40\" value = {pathInfo.strokeWidth} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke:</span>\n            <input type=\"color\" name=\"stroke\" value = {pathInfo.stroke} onChange = {inputChange}/>\n          </label>\n      </div>\n    </Fragment>\n  )\n\n})\n\nexport default StatusContainer;\n","import React from 'react';\nimport '../style/FunctionContainer.scss'\n\n\ninterface Props{\n    currentTool:string;\n    set:(arg0: string)=>void;\n}\n\nconst ToolbarContainer:  React.FC<Props> = (props) => {\n\n    function handleClick(e:any){\n        props.set(e.target.id)\n    }\n\n    return (\n        <div className=\"function\">\n            <div className={props.currentTool===\"mouse_add_node\"?\"functionItemSelect\":\"functionItem\"}\n                 onClick={handleClick} id=\"mouse_add_node\">Add Node</div>\n            <div className={props.currentTool===\"mouse_drag_node\"?\"functionItemSelect\":\"functionItem\"}\n                 onClick={handleClick} id=\"mouse_drag_node\">Drag Node</div>\n            <div className={props.currentTool===\"mouse_drag_path\"?\"functionItemSelect\":\"functionItem\"}\n                 onClick={handleClick} id=\"mouse_drag_path\">Drag Path</div>\n        </div>\n    )\n}\n\nexport default ToolbarContainer;\n","export default __webpack_public_path__ + \"static/media/circle.292ce4e1.svg\";","export default __webpack_public_path__ + \"static/media/pen.4de46a1c.svg\";","export default __webpack_public_path__ + \"static/media/mouse.dfeff54d.svg\";","export default __webpack_public_path__ + \"static/media/line.86048c7a.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.d8ea8f58.svg\";","import React from 'react';\nimport '../style/ToolbarContainer.scss'\nimport circle from '../asset/circle.svg'\nimport pen from '../asset/pen.svg'\nimport mouse from '../asset/mouse.svg'\nimport line from '../asset/line.svg'\nimport rectangle from '../asset/rectangle.svg'\n\ninterface Props{\n  currentTool:string;\n  set:(arg0: string)=>void;\n}\n\nconst ToolbarContainer:  React.FC<Props> = (props) => {\n\n  function handleClick(e:any){\n    props.set(e.target.id)\n  }\n\n  return (\n    <div className=\"toolbar\">\n        <div className=\"toolitem\" onClick={handleClick} >\n            <img className={props.currentTool.indexOf(\"mouse\")!==-1?\"itmeIconselect\":\"itmeIcon\"} id=\"mouse\"  alt=\"mouse\" src={mouse}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"circle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"circle\" alt=\"circle\" src={circle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"rectangle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"rectangle\" alt=\"rectangle\" src={rectangle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"line\"?\"itmeIconselect\":\"itmeIcon\"} id=\"line\" alt=\"line\" src={line}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"pen\"?\"itmeIconselect\":\"itmeIcon\"} id=\"pen\" alt=\"pen\" src={pen}/>\n        </div>\n    </div>\n  )\n}\n\nexport default ToolbarContainer;\n","import React, { useState } from 'react';\nimport EditorContainer from './EditorContainer';\nimport StatusContainer from './StatusContainer';\nimport FunctionContainer from './FunctionContainer';\nimport '../style/index.scss';\nimport ToolbarContainer from \"./ToolbarContainer\";\nimport '../style/BasicContainer.scss'\n\n\nconst BasicLayout = () => {\n\n  const [currentTool, setCurrenttool] = useState(\"mouse\");\n  const [currentPathid, setCurrentPathid] = useState(0);\n\n  return(\n    <div className=\"basic-container\">\n      <ToolbarContainer currentTool={currentTool} set={setCurrenttool}/>\n      {\n          currentTool.indexOf(\"mouse\")===-1\n              ?null\n              :<FunctionContainer currentTool={currentTool} set={setCurrenttool}/>\n      }\n      <EditorContainer currentTool={currentTool} currentPathid={currentPathid} set={setCurrentPathid} />\n\n\n      <StatusContainer currentPathid={currentPathid}/>\n\n    </div>\n  )\n}\n\nexport default BasicLayout\n","import React from 'react';\nimport BasciLayout from './containers/BasciLayout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasciLayout />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["elements/constants.ts","utils/calculate.ts","stores/UIStore.ts","stores/myIndexDb.ts","elements/node.tsx","containers/ScalingContainer.tsx","elements/path.tsx","containers/EditorContainer.tsx","containers/StatusContainer.tsx","containers/FunctionContainer.tsx","asset/circle.svg","asset/pen.svg","asset/mouse.svg","asset/line.svg","asset/rectangle.svg","containers/ToolbarContainer.tsx","containers/BasciLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nodeTypes","getRelativePositon","event","editorInfo","UIStore","x","clientX","left","y","clientY","top","getCentralSymmetryPosition","node","ctr2PosX","posX","ctrPosX","ctr2PosY","posY","ctrPosY","getCircleNodes","radius","Math","sqrt","h","nodes","getRectNodes","scallingPos","pre","now","pos","border","width","height","mouseState","type","drugging","pathid","nodeid","currentTool","pathList","editingPathId","setPathBbox","path","svgBox","getBBox","ctrx","ctry","centerPoint","myIndexDB","update","initPathList","id","addPath","push","length","strokeWidth","stroke","fill","rotate","scalling","scaleX","scaleY","scale_origin","translate","right","bottom","deletePath","pathId","splice","remove","setEditingPath","setNodes","nodeId","addNodes","ctr2PoxY","index","over","nodesLength","add","slice","setMouseState","dragging","setCurrentTool","toolName","movePath","moveX","moveY","it","setBorder","setTranslate","setScalling","setScaleY","indexOf","preHeight","setScaleX","preWidth","setScale","scaleFinshX","scaleFinshY","setStateInfo","name","value","oldX","Number","oldY","makeAutoObservable","this","dbName","version","tableName","db","openDB","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","console","log","target","result","onupgradeneeded","create_table","onerror","idb","objectStoreNames","contains","createObjectStore","keyPath","createIndex","unique","newPath","toJS","transaction","objectStore","readAll","openCursor","cursor","key","continue","_","put","delete","Node","observer","props","onClick","onMouseLeave","className","cx","cy","mouseEvent","isEditingNode","handleMouseDown","elec","onMouseDown","e","x1","y1","x2","y2","ScalingContainer","useEffect","setBorderD","useState","scale","borderD","stopPropagation","transform","d","transform-origin","strokeDasharray","getD","i","handleClick","handleOnMouseMove","throttle","item","nums","reduce","cur","flat","bezier","Bezier","setBezier","nodeInfo","project","setNewNode","t","newNode","paths","mockNode","_nodes","attrD","getEditingPath","map","onMouseOver","split","points","findIndex","undefined","addingNode","EditorContainer","edtiorRef","current","getBoundingClientRect","setEditorInfo","a","setNode","useRef","editing","setPathId","startNode","setStartNode","_pathid","mouseUpTimeChange","toolNode","setToolNode","newToolNode","setNewToolNode","setNewnode","lastNode","setLastnode","setPos","dragPath","setDragPath","handleMouseMove","currentPathid","angle","dot","det","atan2","PI","getAngle","toString","ref","node1","onMouseMove","onMouseUp","clearTimeout","setTimeout","center","l","cosv","cos","sinv","sin","forEach","newBorder","calRotatePath","_pathId","onDoubleClick","r","Array","addOtherPath","StatusContainer","pathInfo","inputChange","toFixed","onChange","min","max","ToolbarContainer","set","alt","src","mouse","circle","rectangle","line","pen","BasicLayout","setCurrenttool","handleToolChange","App","BasciLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf9aee2.chunk.js","sourcesContent":["export const nodeTypes = {\n  AnchorPoint: 0,\n  Ctr1Point: 1,\n  Ctr2Point: 2\n}\n","import { UIStore, Node } from '../stores/UIStore'\n\nexport function getRelativePositon(event: any) {\n  const editorInfo = UIStore.editorInfo;\n  return {\n    x: event.clientX - editorInfo.left,\n    y: event.clientY - editorInfo.top\n  }\n}\n\nexport function getCentralSymmetryPosition(node: Node) {\n  return {\n    ctr2PosX: node.posX * 2 - node.ctrPosX,\n    ctr2PosY: node.posY * 2 - node.ctrPosY\n  }\n}\n\nexport function getAngle(node:Node){\n  const dot = node.posX * node.ctrPosX + node.posY * node.ctrPosY\n  const det = node.posX * node.ctrPosY - node.posY * node.ctrPosY\n  const angle = Math.atan2(det, dot) / Math.PI * 180\n  return (angle + 360) % 360\n}\n\nexport function calRotatePath(pathid:number){\n  const path = UIStore.pathList[pathid];\n  const angle = path.rotate;\n  const center = path.centerPoint;\n  const border = path.border;\n\n  const  l = (angle * Math.PI) / 180;\n  const  cosv =  Math.cos(l);\n  const  sinv =  Math.sin(l);\n\n  let newNode = {\n    posX:-1,\n    posY:-1,\n    ctrPosX: -1,\n    ctrPosY: -1,\n    ctr2PosX: -1,\n    ctr2PosY: -1\n  }\n  path.nodes.forEach((item,index)=>{\n    newNode.posX = (item.posX - center.ctrx) * cosv - (item.posY - center.ctry) * sinv + center.ctrx;\n    newNode.posY =  (item.posX - center.ctrx) * sinv + (item.posY - center.ctry) * cosv + center.ctry;      \n    newNode.ctrPosX = (item.ctrPosX - center.ctrx) * cosv - (item.ctrPosY - center.ctry) * sinv + center.ctrx;\n    newNode.ctrPosY = (item.ctrPosX - center.ctrx) * sinv + (item.ctrPosY - center.ctry) * cosv + center.ctry;\n    if(item.ctr2PosX && item.ctr2PosY){\n      newNode.ctr2PosX = (item.ctr2PosX - center.ctrx) * cosv - (item.ctr2PosY - center.ctry) * sinv + center.ctrx;\n      newNode.ctr2PosY =  (item.ctr2PosX - center.ctrx) * sinv + (item.ctr2PosY - center.ctry) * cosv + center.ctry;\n      UIStore.setNodes(pathid,index,newNode);\n    }else{\n      UIStore.setNodes(pathid,index,{posX:newNode.posX, posY:newNode.posY, ctrPosX: newNode.ctrPosX, ctrPosY:newNode.ctrPosY });\n    }\n  })\n\n  let newBorder = [{ctrx:-1, ctry:-1},{ctrx:-1, ctry:-1},{ctrx:-1, ctry:-1},{ctrx:-1, ctry:-1}];\n  border.forEach((item,index)=>{\n    newBorder[index].ctrx = (item.ctrx - center.ctrx) * cosv - (item.ctry - center.ctry) * sinv + center.ctrx;\n    newBorder[index].ctry = (item.ctrx - center.ctrx) * sinv + (item.ctry - center.ctry) * cosv + center.ctry;\n  })\n  UIStore.setBorder(pathid,newBorder);\n}\n\n\nexport function getCircleNodes(node: Node){\n  const C = 0.552284749831;  \n  let {posX,posY,ctrPosY,ctrPosX} = node;\n  let radius = Math.sqrt((posX-ctrPosX)*(posX-ctrPosX) + (posY-ctrPosY)* (posY-ctrPosY));\n  let h = C * radius; \n\n  let nodes = [];\n  nodes[0] = {\n    posX:posX,\n    posY:posY + radius,\n    ctrPosX:posX + h,\n    ctrPosY:posY + radius,\n    ctr2PosX: posX - h,\n    ctr2PosY: posY + radius,\n  }\n  nodes[1] = {\n    posX:posX + radius,\n    posY:posY,\n    ctrPosX: posX + radius,\n    ctrPosY: posY + h,\n    ctr2PosX:posX + radius,\n    ctr2PosY:posY - h\n  }\n  nodes[2] = {\n    posX:posX,\n    posY:posY - radius,\n    ctrPosX: posX + h,\n    ctrPosY: posY - radius,\n    ctr2PosX:posX - h,\n    ctr2PosY:posY - radius\n  }\n  nodes[3] = {\n    posX:posX - radius,\n    posY:posY,\n    ctrPosX: posX - radius,\n    ctrPosY: posY - h,\n    ctr2PosX:posX - radius,\n    ctr2PosY:posY + h\n  }\n\n  return nodes;\n}\n\n\nexport function getRectNodes(node: Node){ \n  let {posX,posY,ctrPosY,ctrPosX} = node;\n\n  let nodes = [];\n  nodes[0] = {\n    posX:posX,\n    posY:posY,\n    ctrPosX:posX,\n    ctrPosY:posY,\n    ctr2PosX:posX,\n    ctr2PosY:posY\n  }\n  nodes[1] = {\n    posX:ctrPosX,\n    posY:posY,\n    ctrPosX: ctrPosX,\n    ctrPosY: posY,\n    ctr2PosX:ctrPosX,\n    ctr2PosY:posY\n  }\n  nodes[2] = {\n    posX:ctrPosX,\n    posY:ctrPosY,\n    ctrPosX:ctrPosX,\n    ctrPosY:ctrPosY,\n    ctr2PosX:ctrPosX,\n    ctr2PosY:ctrPosY\n  }\n  nodes[3] = {\n    posX:posX,\n    posY:ctrPosY,\n    ctrPosX: posX,\n    ctrPosY: ctrPosY,\n    ctr2PosX:posX,\n    ctr2PosY:ctrPosY\n  }\n  return nodes;\n}\nexport function scallingPos(pre: number, now: number, pos:number, border: number){\n  if(pos === border){\n    return 0;\n  }\n  return (pos-border)/pre*now;\n}","import { makeAutoObservable} from 'mobx';\nimport { nodeTypes } from '../elements/constants';\nimport { myIndexDB } from './myIndexDb';\nimport {scallingPos} from '../utils/calculate';\nexport interface Node{\n  posX: number,\n  posY: number,\n  ctrPosX: number,\n  ctrPosY: number,\n  ctr2PosX?: number,\n  ctr2PosY?: number,\n}\nexport interface Point{\n  ctrx:number,\n  ctry:number\n}\nexport interface Path {\n  id: number,\n  nodes: Node[],\n  type: number, // 0 非闭合 1 闭合\n  strokeWidth: number,\n  stroke: string,\n  fill:string,\n  centerPoint:Point,//路径中心\n  rotate:number;//旋转的角度\n  border: Point[],//边界  point[0]代表左上角  point[1]右上角  point[2]右下角  point[3] 左下角\n  scalling:string,\n  scaleX: number,\n  scaleY: number,\n  scale_origin: string,\n  translate:{\n    left: number,\n    right: number,\n    top: number,\n    bottom: number\n  }\n}\n\nclass UIstore {\n\n  editorInfo = {\n    width: 800,\n    height: 600,\n    left: 0,\n    top: 0\n  }\n  mouseState = {\n    type: nodeTypes.AnchorPoint,\n    drugging: false,\n    pathid: -1,\n    nodeid: -1,\n  }\n\n  currentTool = \"mouse\";\n\n  pathList: Path[] = [];\n  editingPathId = -1;\n  \n  constructor() {\n    makeAutoObservable(this); \n  }\n\n  //设置路径边界和中心\n  setPathBbox = (path:SVGPathElement,pathid:number) => {\n    let svgBox = path.getBBox();\n    let ctrx = svgBox.x + (svgBox.width >> 1);\n    let ctry = svgBox.y + (svgBox.height >> 1);\n    this.pathList[pathid].centerPoint = {ctrx,ctry};\n    this.pathList[pathid].border = [\n      {ctrx:svgBox.x, ctry:svgBox.y},\n      {ctrx: svgBox.x + svgBox.width, ctry:svgBox.y},\n      {ctrx: svgBox.x + svgBox.width, ctry:svgBox.y + svgBox.height},\n      {ctrx: svgBox.x, ctry:svgBox.y + svgBox.height}\n    ];\n    myIndexDB.update(this.pathList[pathid]);\n  }\n\n  initPathList = (id:number,path:Path) =>{\n    this.pathList[id] = path;\n  }\n\n  addPath = (type?:number) => {\n    this.pathList.push(\n        {\n          id: this.pathList.length,\n          nodes: [],\n          strokeWidth: 5,\n          stroke: \"#000000\",\n          fill: \"none\",\n          type: type || 0,\n          centerPoint:{ctrx:-1,ctry:-1},\n          rotate:0,\n          border:[{ctrx:-1,ctry:-1},{ctrx:-1,ctry:-1},{ctrx:-1,ctry:-1},{ctrx:-1,ctry:-1}],\n          scalling:\"\",\n          scaleX: 1,\n          scaleY: 1,\n          scale_origin: '',\n          translate:{\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n          }\n        }\n    )\n    return this.pathList.length - 1;\n  }\n\n  deletePath = (pathId: number) => {\n    this.pathList = this.pathList.splice(pathId,1);\n    myIndexDB.remove(pathId);\n  }\n\n  setEditingPath = (pathId: number) => {\n    this.editingPathId = pathId;\n  }\n\n  setNodes = (pathId: number, nodeId: number, node: Node) => {\n    if(this.pathList[pathId]){\n      this.pathList[pathId].nodes[nodeId] = node;\n      myIndexDB.update(this.pathList[pathId]);\n    }\n  }\n\n  addNodes =(pathId: number , posX: number, posY: number, ctrPosX?: number, ctrPosY?: number, ctr2PosX?: number, ctr2PoxY?: number, index?: number,over?:boolean) => {\n\n    const nodesLength = this.pathList[pathId].nodes.length;\n    const type = this.pathList[pathId].type;\n    if(nodesLength === 0 || over){\n      if(type){//闭合路径的第一个有两个控制点\n        this.pathList[pathId].nodes.push(\n          {\n            posX: posX,\n            posY: posY,\n            ctrPosX: ctrPosX || posX,\n            ctrPosY: ctrPosY || posY,\n            ctr2PosX: ctr2PosX,\n            ctr2PosY: ctr2PoxY\n          }\n        )\n      }\n      else{//非闭合路径的第一个和最后一个只有一个控制点\n        this.pathList[pathId].nodes.push(\n          {\n            posX: posX,\n            posY: posY,\n            ctrPosX: ctrPosX || posX,\n            ctrPosY: ctrPosY || posY\n          }\n        )\n      }\n      if(nodesLength === 0){\n        myIndexDB.add(this.pathList[pathId]);\n      }else{\n        myIndexDB.update(this.pathList[pathId]);\n      }\n    }\n    else{\n      this.pathList[pathId].nodes = [\n        ...this.pathList[pathId].nodes.slice(0, index || nodesLength),\n        {\n          posX: posX,\n          posY: posY,\n          ctrPosX: ctrPosX || posX,\n          ctrPosY: ctrPosY || posY,\n          ctr2PosX: ctr2PosX,\n          ctr2PosY: ctr2PoxY\n        },\n        ...this.pathList[pathId].nodes.slice(index || nodesLength)\n      ]\n      myIndexDB.update(this.pathList[pathId]);\n    }\n\n  }\n\n  setMouseState = (type: number, dragging:boolean, pathid:number, nodeid:number) => {\n    this.mouseState.pathid = pathid;\n    this.mouseState.nodeid = nodeid;\n    this.mouseState.type = type;\n    this.mouseState.drugging = dragging;\n  }\n\n  setCurrentTool = (toolName: string) => {\n    this.currentTool = toolName;\n  } \n\n  movePath = (pathid: number , moveX: number , moveY: number) => {\n    for( let it of this.pathList[pathid].nodes){\n      it.posX += moveX;\n      it.posY += moveY;\n      it.ctrPosX += moveX;\n      it.ctrPosY += moveY;\n      if(it.ctr2PosY && it.ctr2PosX){\n        it.ctr2PosX += moveX;\n        it.ctr2PosY += moveY;\n      }\n    }\n    myIndexDB.update(this.pathList[pathid]);\n  }\n\n  setBorder = (pathid: number, border: Point [])=>{\n    this.pathList[pathid].border = border;\n  }\n\n  setTranslate = (pathid: number, translate: {left: number, right: number,top: number,bottom: number}) =>{\n    this.pathList[pathid].translate=translate;\n  }\n  setScalling = (pathid: number, scalling: string) => {\n    if(pathid > -1){\n      this.pathList[pathid].scalling = scalling;\n    }\n}\n  setScaleY = (pathid: number,y: number) => {\n    if(this.pathList[pathid].scalling.indexOf(\"top\") !== -1){\n      if(y > this.pathList[pathid].border[2].ctry){\n        return\n      }\n      const preHeight = this.pathList[pathid].border[3].ctry - this.pathList[pathid].border[1].ctry;\n      const height  =this.pathList[pathid].border[3].ctry - y;\n      this.pathList[pathid].translate.top = preHeight - height;\n      this.pathList[pathid].scaleY = height/preHeight;\n    }\n    else {\n      if (y < this.pathList[pathid].border[0].ctry) {\n        return\n      }\n      const preHeight = this.pathList[pathid].border[3].ctry - this.pathList[pathid].border[1].ctry;\n      const height  = y - this.pathList[pathid].border[0].ctry;\n      this.pathList[pathid].scaleY = height/preHeight;\n      this.pathList[pathid].translate.bottom = height - preHeight;\n    }\n\n  }\n  setScaleX = (pathid: number,x: number) => {\n    if(this.pathList[pathid].scalling.indexOf(\"left\") !== -1){\n      if(x > this.pathList[pathid].border[1].ctrx){\n        return\n      }\n      const preWidth = this.pathList[pathid].border[1].ctrx - this.pathList[pathid].border[0].ctrx;\n      const width  =this.pathList[pathid].border[1].ctrx - x\n      this.pathList[pathid].translate.left=preWidth-width;\n      this.pathList[pathid].scaleX=width/preWidth;\n    }\n    else {\n      if (x < this.pathList[pathid].border[0].ctrx) {\n        return\n      }\n      const preWidth = this.pathList[pathid].border[1].ctrx - this.pathList[pathid].border[0].ctrx;\n      const width  = x - this.pathList[pathid].border[0].ctrx;\n      this.pathList[pathid].translate.right = width - preWidth;\n      this.pathList[pathid].scaleX=width/preWidth;\n    }\n\n}\n  setScale = (pathid: number,x: number ,y: number) => {\n    this.pathList[pathid].scaleX = x;\n    this.pathList[pathid].scaleY = y;\n  }\n\n\n\nscaleFinshX =(pathid: number, x: number) => {\n    if(this.pathList[pathid].scalling.indexOf(\"left\") !== -1) {\n      const preWidth = this.pathList[pathid].border[1].ctrx - this.pathList[pathid].border[0].ctrx;\n      const width = this.pathList[pathid].border[1].ctrx - x;\n      const border = this.pathList[pathid].border[0].ctrx;\n      for (let it of this.pathList[pathid].nodes) {\n        it.posX = x + scallingPos(preWidth, width, it.posX, border);\n        it.ctrPosX = x + scallingPos(preWidth, width, it.ctrPosX, border);\n        if (it.ctr2PosX && it.ctr2PosY) {\n          it.ctr2PosX = x + scallingPos(preWidth, width, it.ctr2PosX, border);\n        }\n        this.pathList[pathid].border[0].ctrx = x;\n        this.pathList[pathid].border[3].ctrx = x;\n        this.pathList[pathid].centerPoint.ctrx = (this.pathList[pathid].border[1].ctrx + x) / 2;\n      }\n\n    }\n    else if(this.pathList[pathid].scalling.indexOf(\"right\") !== -1){\n      const preWidth = this.pathList[pathid].border[1].ctrx - this.pathList[pathid].border[0].ctrx;\n      const width = x - this.pathList[pathid].border[0].ctrx ;\n      const border = this.pathList[pathid].border[1].ctrx;\n      for (let it of this.pathList[pathid].nodes) {\n        it.posX = x + scallingPos(preWidth, width, it.posX, border);\n        it.ctrPosX = x + scallingPos(preWidth, width, it.ctrPosX, border);\n        if (it.ctr2PosX && it.ctr2PosY) {\n          it.ctr2PosX = x + scallingPos(preWidth, width, it.ctr2PosX, border);\n        }\n        this.pathList[pathid].border[1].ctrx = x;\n        this.pathList[pathid].border[2].ctrx = x;\n        this.pathList[pathid].centerPoint.ctrx = (this.pathList[pathid].border[0].ctrx + x) / 2;\n      }\n    }\n  this.pathList[pathid].scaleX=1;\n  this.pathList[pathid].translate.left=0;\n  this.pathList[pathid].translate.right=0;\n\n}\n\n  scaleFinshY =(pathid: number, y: number) => {\n    if(this.pathList[pathid].scalling.indexOf(\"top\") !== -1) {\n      const preHeight = this.pathList[pathid].border[3].ctry - this.pathList[pathid].border[0].ctry;\n      const height = this.pathList[pathid].border[3].ctry - y;\n      const border = this.pathList[pathid].border[0].ctry;\n      for (let it of this.pathList[pathid].nodes) {\n        it.posY = y + scallingPos(preHeight, height, it.posY, border);\n        it.ctrPosY = y + scallingPos(preHeight, height, it.ctrPosY, border);\n        if (it.ctr2PosX && it.ctr2PosY) {\n          it.ctr2PosY = y + scallingPos(preHeight, height, it.ctr2PosY, border);\n        }\n        this.pathList[pathid].border[0].ctry = y;\n        this.pathList[pathid].border[1].ctry = y;\n        this.pathList[pathid].centerPoint.ctry = (this.pathList[pathid].border[3].ctry + y) / 2;\n      }\n    }\n    else if(this.pathList[pathid].scalling.indexOf(\"bottom\") !== -1){\n      const preHeight = this.pathList[pathid].border[3].ctry - this.pathList[pathid].border[0].ctry;\n      const height = y - this.pathList[pathid].border[0].ctry ;\n      const border = this.pathList[pathid].border[3].ctry;\n      for (let it of this.pathList[pathid].nodes) {\n        it.posY = y + scallingPos(preHeight, height, it.posY, border);\n        it.ctrPosY = y + scallingPos(preHeight, height, it.ctrPosY, border);\n        if (it.ctr2PosX && it.ctr2PosY) {\n          it.ctr2PosY = y + scallingPos(preHeight, height, it.ctr2PosY, border);\n        }\n        this.pathList[pathid].border[3].ctry = y;\n        this.pathList[pathid].border[2].ctry = y;\n        this.pathList[pathid].centerPoint.ctry = (this.pathList[pathid].border[0].ctry + y) / 2;\n      }\n    }\n    this.pathList[pathid].scaleY=1;\n    this.pathList[pathid].translate.bottom=0;\n    this.pathList[pathid].translate.top=0;\n\n  }\n\n\n\n  setStateInfo = (pathId: number, name:string, value:string) => {\n    switch(name){\n      case 'X':\n        let oldX = this.pathList[pathId].nodes[0].posX;\n        this.movePath(pathId, Number(value) - oldX, 0);\n        break;\n      case 'Y':\n        let oldY = this.pathList[pathId].nodes[0].posY;\n        this.movePath(pathId,0, Number(value) - oldY);\n        break;\n      case 'fill':\n        this.pathList[pathId].fill = value;\n        break;\n      case 'strokeWidth':\n        this.pathList[pathId].strokeWidth = Number(value);\n        break;\n      case 'stroke':\n        this.pathList[pathId].stroke = value;\n        break;\n      case 'rotate':\n        this.pathList[pathId].rotate = Number(value);\n        break;\n      case 'scale_origin':\n        this.pathList[pathId].scale_origin = value;\n        break;\n      case 'scaleX':\n        this.pathList[pathId].scaleX = Number(value);\n        break;\n      case 'scaleY':\n        this.pathList[pathId].scaleY = Number(value);\n        break;\n      default:        \n    }\n    myIndexDB.update(this.pathList[pathId]);\n  }\n}\n\nexport const UIStore = new UIstore();","import {UIStore} from './UIStore';\nimport * as _ from 'lodash';\nimport {toJS} from 'mobx';\nclass IndexDB{\n\n    private dbName: string = 'svgData';//数据库名称\n    private version: number = 1;//数据库版本\n    private tableName: string = 'svgPath';//数据表名称\n    private db: IDBDatabase | null = null;\n\n    //打开数据库\n    openDB = () => {\n        return new Promise((resolve,reject)=>{\n            const request = window.indexedDB.open(this.dbName, this.version);\n\n            request.onsuccess = (event: any) => {//数据库打开成功\n                console.log('成功打开数据库')\n                this.db = event.target.result\n                resolve(1);\n            };\n    \n            request.onupgradeneeded = (event:any) => {\n                console.log('成功新建数据库')\n                this.db = event.target.result;\n                this.create_table(this.db);\n            }\n    \n            request.onerror = (event:any) => {\n                console.log('数据库打开报错');\n                reject(1);\n            };\n        })\n        \n    }\n\n    //新建数据表\n    create_table  = (idb: any) => {\n        if (!idb.objectStoreNames.contains(this.tableName)) {\n            let objectStore;\n            objectStore = idb.createObjectStore(this.tableName, { keyPath: 'id' });\n            objectStore.createIndex('id', 'id', { unique: true });\n        }\n    }\n    //向indexdb中增加数据\n\n    add  = (newPath:any) => {\n        if(this.db){\n            let path = toJS(newPath);\n            let request = this.db.transaction([this.tableName], 'readwrite')\n            .objectStore(this.tableName)\n            .add(path);\n            request.onsuccess = function (event:any) {\n                console.log('数据写入成功');\n            };\n    \n            request.onerror = function (event:any) {\n                console.log('数据写入失败');\n            }\n        } \n    }\n    //读取所有数据\n    readAll = () => {\n            return new Promise((resolve,reject)=>{\n                if(this.db){\n                    let objectStore = this.db.transaction(this.tableName).objectStore(this.tableName);\n                    objectStore.openCursor().onsuccess = function (event:any) {\n                        var cursor = event.target.result;\n                        if (cursor) {\n                            UIStore.initPathList(cursor.key,cursor.value);\n                            cursor.continue();\n                        } else {\n                            console.log('没有更多数据了！');\n                            resolve(1);\n                        }\n                    };\n                }\n                else{\n                    reject();\n                }\n            })\n    }\n\n    //更新数据\n    update = _.debounce((newPath:any)=> {\n        if(this.db){\n            let path = toJS(newPath);\n            let request = this.db.transaction([this.tableName], 'readwrite')\n            .objectStore(this.tableName)\n            .put(path);\n            request.onsuccess = function (event:any) {\n                console.log('数据更新成功');\n            };\n\n            request.onerror = function (event:any) {\n                console.log('数据更新失败');\n            }\n        }\n    },1000,{ 'maxWait': 10000 })\n\n    //删除数据\n    remove = (id:number) => {\n        if(this.db){\n            let request = this.db.transaction([this.tableName], 'readwrite')\n            .objectStore(this.tableName)\n            .delete(id);\n          request.onsuccess = function (event) {\n            console.log('数据删除成功');\n          };\n        }\n    }\n\n}\nexport const myIndexDB = new IndexDB();","import { observer} from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport { nodeTypes } from './constants';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\n\ninterface Props {\n  node: typeNode,\n  id: number,\n  pathId: number,\n  onClick?: any,\n  onMouseLeave?: any,\n}\n\nconst Node = observer((props: Props) => {\n\n  if (props.id === -1) {\n    return (\n      <circle onClick={props.onClick} onMouseLeave={props.onMouseLeave} className=\"point-control-add\" cx={props.node.posX} cy={props.node.posY} />\n    )\n  }\n\n  const node = UIStore.pathList[props.pathId].nodes[props.id];\n  const mouseEvent = UIStore.mouseState;\n  const isEditingNode = mouseEvent.pathid === props.pathId && mouseEvent.nodeid === props.id;\n  const currentTool = UIStore.currentTool;\n\n  const handleMouseDown = (elec:number, event: any) => {\n\n    if (currentTool === \"pen_new_path\") {\n      UIStore.pathList[props.pathId].type = 1; //设定成闭合\n    }\n\n    switch(elec) {\n      case nodeTypes.AnchorPoint: {\n        UIStore.setMouseState(nodeTypes.AnchorPoint, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr1Point: {\n        UIStore.setMouseState(nodeTypes.Ctr1Point, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr2Point: {\n        UIStore.setMouseState(nodeTypes.Ctr2Point, true, props.pathId, props.id);\n        break\n      }\n    }\n  }\n  \n  return(\n    <Fragment>\n      <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.AnchorPoint, e)} cx={node.posX} cy={node.posY} />\n      \n      { isEditingNode && <line x1={node.posX} y1={node.posY} x2={node.ctrPosX} y2={node.ctrPosY} stroke=\"#555\" strokeWidth=\"1\" /> }\n      { isEditingNode && <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr1Point, e)} cx={node.ctrPosX} cy={node.ctrPosY} /> }\n      \n\n      {isEditingNode && mouseEvent.nodeid === props.id && node.ctr2PosX && node.ctr2PosY && <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr2Point, e)} cx={node.ctr2PosX} cy={node.ctr2PosY} />}\n      {isEditingNode && mouseEvent.nodeid === props.id && node.ctr2PosX && node.ctr2PosY && <line x1={node.posX} y1={node.posY} x2={node.ctr2PosX} y2={node.ctr2PosY} stroke=\"#555\" strokeWidth=\"1\" />}\n    </Fragment>\n  )\n\n})\n\nexport default Node;","import React, {Fragment, useEffect, useState} from 'react';\nimport path from \"../elements/path\";\nimport {Node as typeNode, Point as typePoint, UIStore} from '../stores/UIStore'\nimport '../style/ScalingContainer.scss'\n\n\n\ninterface Props{\n  path: {\n    id: number,\n    nodes: typeNode[],\n    strokeWidth: number,\n    stroke: string,\n    fill:string,\n    type: number,\n    centerPoint:typePoint,//路径中心\n    rotate: number,//旋转角度\n    border: typePoint[]//边界\n    scaleX: number,\n    scaleY: number,\n    scale_origin: string,\n    translate:{\n      left: number,\n      right: number,\n      top: number,\n      bottom: number\n    }\n  }\n}\n\nconst ScalingContainer:  React.FC<Props> = (props) => {\n\n\n  useEffect(() => {\n    setBorder(props.path.border);\n    setTranslate(props.path.translate);\n    setScale(`scale(${props.path.scaleX},${props.path.scaleY})`);\n    setBorderD(`M ${props.path.border[0].ctrx} ${props.path.border[0].ctry}`\n      +` C ${props.path.border[0].ctrx} ${props.path.border[0].ctry} ${props.path.border[0].ctrx} ${props.path.border[0].ctry} ${props.path.border[1].ctrx} ${props.path.border[1].ctry}`\n      +` C ${props.path.border[1].ctrx} ${props.path.border[1].ctry} ${props.path.border[1].ctrx} ${props.path.border[1].ctry} ${props.path.border[2].ctrx} ${props.path.border[2].ctry}`\n      +` C ${props.path.border[2].ctrx} ${props.path.border[2].ctry} ${props.path.border[2].ctrx} ${props.path.border[2].ctry} ${props.path.border[3].ctrx} ${props.path.border[3].ctry}`\n      +` C ${props.path.border[3].ctrx} ${props.path.border[3].ctry} ${props.path.border[3].ctrx} ${props.path.border[3].ctry} ${props.path.border[0].ctrx} ${props.path.border[0].ctry}`)\n\n\n  }, [props])\n  const [translate, setTranslate] = useState(props.path.translate);\n  const [border, setBorder] = useState(props.path.border);\n  const [scale, setScale] = useState(`scale(${props.path.scaleX},${props.path.scaleY})`);\n  const [borderD,setBorderD] = useState<string>(`M ${props.path.border[0].ctrx} ${props.path.border[0].ctry}`\n    +` C ${props.path.border[0].ctrx} ${props.path.border[0].ctry} ${props.path.border[0].ctrx} ${props.path.border[0].ctry} ${props.path.border[1].ctrx} ${props.path.border[1].ctry}`\n    +` C ${props.path.border[1].ctrx} ${props.path.border[1].ctry} ${props.path.border[1].ctrx} ${props.path.border[1].ctry} ${props.path.border[2].ctrx} ${props.path.border[2].ctry}`\n    +` C ${props.path.border[2].ctrx} ${props.path.border[2].ctry} ${props.path.border[2].ctrx} ${props.path.border[2].ctry} ${props.path.border[3].ctrx} ${props.path.border[3].ctry}`\n    +` C ${props.path.border[3].ctrx} ${props.path.border[3].ctry} ${props.path.border[3].ctrx} ${props.path.border[3].ctry} ${props.path.border[0].ctrx} ${props.path.border[0].ctry}`)\n\n\n  const handleMouseDown = (event: any) => {\n    event.stopPropagation();\n    UIStore.setScalling(props.path.id, event.target.id);\n    switch (event.target.id){\n      case \"left\" :\n      case \"left_bottom\" :\n      case \"bottom\" :\n        UIStore.setStateInfo(props.path.id, \"scale_origin\", `${props.path.border[1].ctrx} ${props.path.border[1].ctry}`);\n        break;\n      case \"right\" :\n      case \"right_bottom\" :\n        UIStore.setStateInfo(props.path.id, \"scale_origin\", `${props.path.border[0].ctrx} ${props.path.border[0].ctry}`);\n        break;\n      case \"top\" :\n      case \"left_top\" :\n        UIStore.setStateInfo(props.path.id, \"scale_origin\", `${props.path.border[2].ctrx} ${props.path.border[2].ctry}`);\n        break;\n      case \"right_top\" :\n        UIStore.setStateInfo(props.path.id, \"scale_origin\", `${props.path.border[3].ctrx} ${props.path.border[3].ctry}`);\n        break;\n\n    }\n\n\n  }\n\n\n  return (\n    <Fragment >\n      <rect className='react' transform={`translate(${translate.left},${translate.top})`} id=\"left_top\" x={props.path.border[0].ctrx-4} y={border[0].ctry-4} onMouseDown={handleMouseDown}/>\n      <rect className='react' transform={`translate(${translate.right},${translate.top})`}id=\"right_top\" x={border[1].ctrx-4} y={border[1].ctry-4} onMouseDown={handleMouseDown}/>\n      <rect className='react' transform={`translate(${translate.right},${translate.bottom})`}id=\"right_bottom\" x={border[2].ctrx-4} y={border[2].ctry-4} onMouseDown={handleMouseDown}/>\n      <rect className='react' transform={`translate(${translate.left},${translate.bottom})`}id=\"left_bottom\" x={border[3].ctrx-4} y={border[3].ctry-4} onMouseDown={handleMouseDown}/>\n      <rect className='react' transform={`translate(${(translate.left+translate.right)/2},${translate.top})`}id=\"top\" x={props.path.centerPoint.ctrx-4} y={border[0].ctry-4} onMouseDown={handleMouseDown} />\n      <rect className='react' transform={`translate(${(translate.left+translate.right)/2},${translate.bottom})`}id=\"bottom\" x={props.path.centerPoint.ctrx-4} y={border[3].ctry-4} onMouseDown={handleMouseDown}/>\n      <rect className='react' transform={`translate(${translate.left},${(translate.bottom+translate.top)/2})`}id=\"left\" x={border[0].ctrx-4} y={props.path.centerPoint.ctry-4} onMouseDown={handleMouseDown}/>\n      <rect className='react' transform={`translate(${translate.right},${(translate.bottom+translate.top)/2})`}id=\"right\" x={border[1].ctrx-4} y={props.path.centerPoint.ctry-4} onMouseDown={handleMouseDown}/>\n      <path id=\"scale_react\" d={borderD} transform-origin={props.path.scale_origin} transform ={scale} strokeWidth='2' stroke='#55f' fill='none' strokeDasharray='5'/>\n    </Fragment>\n\n  )\n}\n\nexport default ScalingContainer;","import React, { Fragment, useState } from 'react';\nimport { Node as typeNode, Point as typePoint ,UIStore } from '../stores/UIStore';\nimport { getRelativePositon, getCentralSymmetryPosition } from '../utils/calculate';\nimport Node from './node';\nimport _ from 'lodash';\nimport Bezier from 'bezier-js';\nimport { observer } from 'mobx-react';\nimport ScalingContainer from '../containers/ScalingContainer';\n\ninterface Props{\n  path: {\n    id: number,\n    nodes: typeNode[],\n    strokeWidth: number,\n    stroke: string,\n    fill:string,\n    type: number,\n    centerPoint:typePoint,//路径中心\n    rotate: number,//旋转角度\n    border: typePoint[]//边界\n    scaleX: number,\n    scaleY: number,\n    scale_origin: string,\n    translate:{\n      left: number,\n      right: number,\n      top: number,\n      bottom: number\n    }\n  }\n  currentTool:String;\n}\n\nconst path: React.FC<Props> = observer((props: Props) => {\n    \n    const getD = (nodes: string | any[], type: boolean) => {\n\n      let d = \"\";\n      const length = nodes.length;\n      if(length === 1){//钢笔增加路径的时候对第一个节点的渲染\n        return d;\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        if (i === 0) {\n          d += `M ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctrPosX} ${nodes[i].ctrPosY} `\n        } else if (i + 1 <= nodes.length - 1) {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctr2PosX} ${nodes[i].ctr2PosY} `\n        } else {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY} `\n        }\n      }\n\n      if (type) {\n        const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(nodes[0])\n        d += `C ${nodes[length - 1].ctr2PosX} ${nodes[length - 1].ctr2PosY} \n          ${nodes[0].ctr2PosX ? nodes[0].ctr2PosX : ctr2PosX} ${nodes[0].ctr2PosY ? nodes[0].ctr2PosY : ctr2PosY} ${nodes[0].posX} ${nodes[0].posY} z`\n      }\n\n      return d\n    }\n    \n    const getEditingPath = () => {\n      let paths = [];\n      let mockNode = null;\n\n      for (let i = 0; i + 1 < nodes.length; i++) {\n\n        if (i !== 0) {\n          const node = nodes[i];\n          mockNode = {\n            posX: node.posX,\n            posY: node.posY,\n            ctrPosX: node.ctr2PosX,\n            ctrPosY: node.ctr2PosY\n          }\n        }\n        \n        const _nodes = [\n          mockNode ? mockNode : nodes[i], \n          nodes[i + 1]\n        ]\n\n        const attrD = getD(_nodes, false);\n        paths.push({\n          attrD: attrD,\n          nodes: _nodes\n        });\n      }\n\n      if (props.path.type) { // 判定一下是不是闭合路径，如果是的话需要另外的控制点\n        let node = nodes[nodes.length - 1];\n        const mockEndNode = {\n          posX: node.posX,\n          posY: node.posY,\n          ctrPosX: node.ctr2PosX,\n          ctrPosY: node.ctr2PosY\n        }\n\n        node = nodes[0];\n        const mockStartNode = {\n          posX: node.posX,\n          posY: node.posY,\n          ctrPosX: node.ctr2PosX,\n          ctrPosY: node.ctr2PosY\n        }\n\n        const _nodes = [\n          mockEndNode,\n          mockStartNode\n        ]\n\n        const attrD = getD(_nodes, false);\n        paths.push({\n          attrD: attrD,\n          nodes: _nodes\n        });\n      }\n\n      return paths\n    }\n\n    const handleClick = (event: any) => {\n      event.stopPropagation();\n      UIStore.setEditingPath(props.path.id);\n      UIStore.setPathBbox(event.target,props.path.id);//被点击的时候计算中心点\n    }\n\n    const handleOnMouseMove = _.throttle((event: any, item: any) => {\n      event.stopPropagation();\n      if(props.currentTool !== \"pen_add_node\"){\n        return\n      }\n      const { x, y } = getRelativePositon(event);\n\n      const nums = item.nodes.reduce((pre: Array<number>, cur: typeNode, index: number) => {\n        if (index === item.nodes.length - 1) {\n          pre.push(cur.ctrPosX, cur.ctrPosY, cur.posX, cur.posY);\n        } else {\n          pre.push(cur.posX, cur.posY, cur.ctrPosX, cur.ctrPosY);\n        }\n\n        return pre\n      }, []).flat(1);\n\n      const bezier = new Bezier(nums);\n      setBezier(bezier);\n      const nodeInfo = bezier.project({x, y});\n\n      setNewNode({\n        posX: nodeInfo.x,\n        posY: nodeInfo.y,\n        ctrPosX: nodeInfo.x,\n        ctrPosY: nodeInfo.y,\n        t: nodeInfo.t\n      })\n\n    }, 50);\n\n    const handleAddNewNodeClick = () => {\n      if(props.currentTool !== \"pen_add_node\"){\n        return\n      }\n      const newPath = bezier?.split(newNode.t); // 这里贝塞尔曲线被分成了两个部分，需要分别更新左右两端\n      let points = newPath?.left.points; // 0 1 2 3 分别是第一个点的位置、控制点，第二个点的控制点、位置\n\n      if (!newPath || !points) {\n        return\n      }\n\n      let index = nodes.findIndex((node) => {\n        return node.posX === bezier?.points[0].x && node.posY === bezier?.points[0].y\n      });\n\n      let node = {\n        posX: points[0].x,\n        posY: points[0].y,\n        ctrPosX: index ? UIStore.pathList[id].nodes[index].ctrPosX : points[1].x,\n        ctrPosY: index ? UIStore.pathList[id].nodes[index].ctrPosY : points[1].y,\n        ctr2PosX: index ? points[1].x : undefined,\n        ctr2PosY: index ? points[1].y : undefined\n      } // 这里要判定一下index为0  即起始节点的情况，做特殊处理\n\n      let addingNode = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: 0,\n        ctr2PosY: 0\n      } // 这是新的节点信息\n\n      UIStore.setNodes(id, index, node); // 更新左端点\n\n      points = newPath?.right.points;\n\n      node = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: UIStore.pathList[id].nodes[index + 1].ctr2PosX || undefined,\n        ctr2PosY: UIStore.pathList[id].nodes[index + 1].ctr2PosY || undefined\n      } \n\n      addingNode.ctr2PosX = points[1].x;\n      addingNode.ctr2PosY = points[1].y; // 新的节点信息需要左右两端的\n      \n      UIStore.setNodes(id, index + 1, node); // 更新右端点\n\n      UIStore.addNodes(id, addingNode.posX, addingNode.posY, addingNode.ctrPosX, addingNode.ctrPosY, addingNode.ctr2PosX, addingNode.ctr2PosY, index + 1);\n      setNewNode(null);\n    }\n\n    const [newNode, setNewNode] = useState<any>();\n    const [bezier, setBezier] = useState<Bezier>();\n    const { id, nodes } = props.path;\n\n    if (props.currentTool === \"pen_add_node\") {\n      const paths = getEditingPath();\n      return (\n        <Fragment>\n          {\n            paths.map(item => \n              <Fragment>\n                <path key={item.attrD} onClick={handleClick} d={item.attrD} onMouseOver={e => handleOnMouseMove(e, item)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke}fill={props.path.fill}/>\n              </Fragment>\n            )\n          }\n          {nodes.length && nodes.map((node, index) => \n            <Node node={node} id={index} pathId={id} />\n          )}\n          {newNode && <Node node={newNode} id={-1} pathId={-1} onClick={handleAddNewNodeClick} onMouseLeave={() => setNewNode(null)} />}\n        </Fragment>\n      )\n    }\n\n    if (props.currentTool === \"mouse_rotate_path\" && UIStore.editingPathId === id) {\n      let rotate = `rotate(${props.path.rotate},${props.path.centerPoint.ctrx},${props.path.centerPoint.ctry})`;\n      let borderD = `M ${props.path.border[0].ctrx} ${props.path.border[0].ctry}` \n                      +` C ${props.path.border[0].ctrx} ${props.path.border[0].ctry} ${props.path.border[0].ctrx} ${props.path.border[0].ctry} ${props.path.border[1].ctrx} ${props.path.border[1].ctry}` \n                      +` C ${props.path.border[1].ctrx} ${props.path.border[1].ctry} ${props.path.border[1].ctrx} ${props.path.border[1].ctry} ${props.path.border[2].ctrx} ${props.path.border[2].ctry}` \n                      +` C ${props.path.border[2].ctrx} ${props.path.border[2].ctry} ${props.path.border[2].ctrx} ${props.path.border[2].ctry} ${props.path.border[3].ctrx} ${props.path.border[3].ctry}`\n                      +` C ${props.path.border[3].ctrx} ${props.path.border[3].ctry} ${props.path.border[3].ctrx} ${props.path.border[3].ctry} ${props.path.border[0].ctrx} ${props.path.border[0].ctry}`;\n      return (\n        <Fragment>\n          <path transform={rotate} onClick={handleClick} d={getD(nodes, !!props.path.type)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke} fill={props.path.fill}/>\n          <path d={borderD} transform={rotate} strokeWidth='2' stroke='#55f' fill='none' strokeDasharray='5'/>\n        </Fragment>\n\n      )\n    }\n\n  if (props.currentTool === \"mouse_scaling_path\" && UIStore.editingPathId === id) {\n    if(props.path.border.length === 4) {\n      let scale = `scale(${props.path.scaleX},${props.path.scaleY})`;\n      return(\n        <Fragment>\n          <path  transform ={scale} transform-origin={props.path.scale_origin}onClick={handleClick} d={getD(nodes, !!props.path.type)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke} fill={props.path.fill}/>\n          <ScalingContainer path={props.path}/>\n        </Fragment>\n      )\n    }\n  }\n\n    return (\n      <Fragment>\n        <path onClick={handleClick} d={getD(nodes, !!props.path.type)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke} fill={props.path.fill}/>\n        {id === UIStore.editingPathId && nodes.length && nodes.map((node, index) => \n          <Node key={index} node={node} id={index} pathId={id} />\n        )}\n      </Fragment>\n    )\n\n  }\n)\n\n\nexport default path;","import React, { Fragment,useEffect, useRef , useState} from 'react';\nimport {myIndexDB} from '../stores/myIndexDb';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\nimport Path from '../elements/path';\nimport { nodeTypes } from '../elements/constants';\nimport { getRelativePositon, getCentralSymmetryPosition ,getAngle,getCircleNodes,getRectNodes,calRotatePath} from '../utils/calculate';\nimport * as _ from 'lodash';\nimport '../style/EditorContainer.scss';\n\ninterface Props{\n  currentTool:string;\n}\n\nconst EditorContainer: React.FC<Props> = (props) =>  {\n\n  useEffect(() => {\n    if (!edtiorRef) {\n      return\n    }\n    const editorInfo = edtiorRef?.current?.getBoundingClientRect();\n    if (editorInfo) {\n      UIStore.editorInfo.top = editorInfo.top;\n      UIStore.editorInfo.left = editorInfo.left;\n      setEditorInfo(editorInfo);\n    }\n    const initPathList = async() =>{\n      try{\n        await myIndexDB.openDB();\n        await myIndexDB.readAll();\n        setNode({ posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1});//加载结束后重新渲染页面\n        console.log('加载数据结束');\n      }catch(err){\n        console.log('加载失败');\n      }\n    }\n    initPathList();\n  }, [])\n\n  const edtiorRef = useRef<SVGSVGElement>(null);\n  const editing = useRef<boolean>(false)\n  const [pathId, setPathId] = useState<number>(-1)\n  const [editorInfo, setEditorInfo] = useState(UIStore.editorInfo);\n  const [startNode, setStartNode] = useState<Boolean>(false);\n  const pathList = UIStore.pathList;\n  let pathid = UIStore.mouseState.pathid;\n  let nodeid = UIStore.mouseState.nodeid;\n\n \n  const [node, setNode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n  \n  useEffect(() => {\n    UIStore.setNodes(UIStore.mouseState.pathid, UIStore.mouseState.nodeid, node);\n  }, [node])\n\n  useEffect(() => {\n    if (props.currentTool !== \"pen_new_path\"){\n      const _pathid=pathId;\n      if (_pathid !== -1 && UIStore.pathList[_pathid].nodes.length < 2){\n        UIStore.deletePath(_pathid);\n        editing.current=false;\n        setPathId(-1);\n      }\n      else if (_pathid !== -1 && UIStore.pathList[_pathid].nodes.length >= 2){\n        editing.current=false;\n        setPathId(-1);\n      }\n    }\n  }, [props.currentTool,pathId])\n\n  const [toolNode, setToolNode] = useState<boolean>(false);\n  const [newToolNode, setNewToolNode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 }); \n  \n  const [newNode, setNewnode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n  const [lastNode, setLastnode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n\n  const [pos, setPos] = useState({posX : -1 ,posY : -1});\n  const [dragPath, setDragPath] = useState<boolean>(false);\n  let mouseUpTimeChange:any;\n\n  const handleMouseDown = (event: any) => {\n    event.stopPropagation();\n    const { x, y } = getRelativePositon(event);\n    switch(props.currentTool){\n      case 'mouse_drag_path':{\n        const currentPathid = UIStore.editingPathId;\n        if(currentPathid !== -1){\n          setDragPath(true);\n          setPos({\n            posX: x,\n            posY: y\n          })\n        }\n      break;\n      }\n      case 'mouse_rotate_path':{\n        const currentPathid = UIStore.editingPathId;\n        if(currentPathid !== -1){\n          setToolNode(true);\n          setNewToolNode({\n            posX:x,\n            posY:y,\n            ctrPosX:x,\n            ctrPosY:y\n          })\n        }\n      break;\n      }\n      case 'rectangle':\n      case 'circle':\n        setToolNode(true);\n        setNewToolNode({\n          posX:x,\n          posY:y,\n          ctrPosX:x,\n          ctrPosY:y\n        })\n      break;\n      case 'pen_drag_node':\n        pathid = UIStore.mouseState.pathid;\n        nodeid = UIStore.mouseState.nodeid;\n        if(pathid!==-1 && nodeid!== -1){\n          let node1 = UIStore.pathList[pathid].nodes[nodeid];\n          setNode({\n            ...node1\n          });\n       }\n      break;\n      case 'pen_new_path'://钢笔工具 按下的时候确定一个锚点的posx posy\n        if(!editing.current){\n          editing.current=true;\n          setStartNode(true);\n          setLastnode({//是路径的第一个锚点时 上一个锚点设置成一样\n            posX:x,\n            posY:y,\n            ctrPosX:x,\n            ctrPosY:y,\n            ctr2PosX:x,\n            ctr2PosY:y\n          })\n        }\n        setNewnode({\n          posX:x,\n          posY:y,\n          ctrPosX:x,\n          ctrPosY:y,\n          ctr2PosX:x,\n          ctr2PosY:y\n        })\n        break;\n    }\n  }\n    \n\n  const handleMouseMove = _.throttle((event: any) => {\n    event.stopPropagation();\n    const { x, y } = getRelativePositon(event);\n    switch(props.currentTool){\n      case 'mouse_drag_path':\n        if(!dragPath){\n          return;\n        }\n        const moveX=x-pos.posX;\n        const moveY=y-pos.posY;\n        const currentPathid = UIStore.editingPathId;\n          UIStore.movePath(currentPathid , moveX , moveY)\n          setPos({\n            posX: x,\n            posY: y\n          })\n      break;\n      case 'mouse_scaling_path':{\n\n        const currentPathid = UIStore.editingPathId;\n        if(currentPathid !== -1 && UIStore.pathList[currentPathid].scalling !== ''){\n          if(UIStore.pathList[currentPathid].scalling.indexOf(\"left\") !== -1  || UIStore.pathList[currentPathid].scalling.indexOf(\"right\") !== -1){\n            UIStore.setScaleX(currentPathid,x);\n          }\n          if(UIStore.pathList[currentPathid].scalling.indexOf(\"top\") !== -1  || UIStore.pathList[currentPathid].scalling.indexOf(\"bottom\") !== -1){\n            UIStore.setScaleY(currentPathid,y);\n          }\n        }\n        break;\n      }\n      case 'mouse_rotate_path':{\n        if(toolNode){\n          const currentPathid = UIStore.editingPathId;\n          const {ctrx,ctry} = UIStore.pathList[currentPathid].centerPoint;\n          setNewToolNode({\n            ...newToolNode,\n            ctrPosX:x,\n            ctrPosY:y\n          })\n          let angle = getAngle({\n            posX:newToolNode.posX - ctrx,\n            posY:newToolNode.posY - ctry,\n            ctrPosX:newToolNode.ctrPosX - ctrx,\n            ctrPosY:newToolNode.ctrPosY - ctry\n          });\n          UIStore.setStateInfo(currentPathid,'rotate',angle.toString());\n        }\n      break;\n      }\n      case 'rectangle':\n      case 'circle':\n        if(toolNode){\n          setNewToolNode({\n            ...newToolNode,\n            ctrPosX:x,\n            ctrPosY:y\n          })\n        }\n      break;\n      case 'pen_drag_node':\n        if(!UIStore.mouseState.drugging){\n          return\n        }\n        switch (UIStore.mouseState.type) {\n          case (nodeTypes.AnchorPoint): {\n            setNode({\n              ...node,\n              posX: x,\n              posY: y,\n            });\n            break;\n          }\n    \n          case (nodeTypes.Ctr1Point): {\n            setNode({\n              ...node,\n              ctrPosX: x,\n              ctrPosY: y,\n            });\n            break;\n          }\n    \n          case (nodeTypes.Ctr2Point): {\n            setNode({\n              ...node,\n              ctr2PosX: x,\n              ctr2PosY: y\n            });\n            break;\n          }\n\n      }\n      break;\n      case 'pen_new_path'://钢笔工具 如果在编辑模式 移动鼠标的时候不断变化控制点\n        if(editing.current){\n          setNewnode(\n            {\n              ...newNode,\n              ctrPosX:x,\n              ctrPosY:y,\n            }\n          )\n        }\n      break;\n    }\n  }, 5, { 'trailing': true })\n \n\n  const handleMouseUp = (event: any) => {\n    event.stopPropagation();\n    const { x, y } = getRelativePositon(event);\n    clearTimeout(mouseUpTimeChange);\n    mouseUpTimeChange = setTimeout(\n        () => {\n          switch(props.currentTool){\n            case 'mouse_drag_path':\n              setDragPath(false);\n              break;\n            case 'mouse_scaling_path':{\n              const currentPathid = UIStore.editingPathId;\n              if(UIStore.pathList[currentPathid]?.scalling !== \"\"){\n                UIStore.scaleFinshX(currentPathid,x);\n                UIStore.scaleFinshY(currentPathid,y);\n                UIStore.setScalling(currentPathid,\"\");\n                //UIStore.setScale(currentPathid,1,1)\n                //UIStore.setTranslate(currentPathid,{left:0,right:0,top:0,bottom:0})\n              }\n\n              break;\n            }\n            case 'mouse_rotate_path':\n              if(toolNode){\n                const currentPathid = UIStore.editingPathId;\n                calRotatePath(currentPathid);\n                UIStore.setStateInfo(currentPathid,'rotate','0');//把rotate置零\n              }\n              setToolNode(false);\n              setNewToolNode({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n              break;\n            case 'rectangle':\n                if(toolNode){\n                  let _pathId = pathId;\n                  if(pathId === -1){\n                    _pathId = UIStore.addPath(1);\n                    let nodes = getRectNodes(newToolNode);\n                    nodes.forEach((node)=>{\n                      UIStore.addNodes(_pathId,node.posX,node.posY,node.ctrPosX,node.ctrPosY,node.ctr2PosX,node.ctr2PosY);\n                    })\n                  }\n                }\n                setToolNode(false);\n                setNewToolNode({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n              break;\n            case 'circle':\n                if(toolNode){\n                  let _pathId = pathId;\n                  if(pathId === -1){\n                    _pathId = UIStore.addPath(1);\n                    let nodes = getCircleNodes(newToolNode);\n                    nodes.forEach((node)=>{\n                      UIStore.addNodes(_pathId,node.posX,node.posY,node.ctrPosX,node.ctrPosY,node.ctr2PosX,node.ctr2PosY);\n                    })\n                  }\n                }\n                setToolNode(false);\n                setNewToolNode({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n              break;\n            case 'pen_drag_node':\n                UIStore.setMouseState(nodeTypes.AnchorPoint, false, pathid, nodeid);\n              break; \n            case 'pen_new_path':{//松开鼠标确定一个点 加入path里\n              if (!editing.current){\n                return;\n              }\n              let _pathId = pathId;\n              if(pathId === -1){\n                _pathId = UIStore.addPath()\n                setPathId(_pathId);\n              }\n\n              UIStore.setEditingPath(_pathId);\n\n              if (UIStore.pathList[_pathId].type) {\n                // 需要创建闭合路径了，退出编辑模式\n                const _node = UIStore.pathList[_pathId].nodes[0];\n                const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(_node);\n                UIStore.pathList[_pathId].nodes[0].ctr2PosX = ctr2PosX;\n                UIStore.pathList[_pathId].nodes[0].ctr2PosY = ctr2PosY;\n                editing.current = false;\n                setPathId(-1);\n                return\n              }\n\n              const nodesLength = UIStore.pathList[_pathId].nodes.length;\n              const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(newNode);\n              UIStore.addNodes(_pathId,newNode.posX,newNode.posY,newNode.ctrPosX,newNode.ctrPosY,ctr2PosX,ctr2PosY,nodesLength);\n              if(startNode){// 处理第一个节点的渲染\n                setLastnode({\n                  ...newNode,\n                  ctrPosX: ctr2PosX,\n                  ctrPosY: ctr2PosY\n                })\n                setStartNode(false);\n              }else{\n                setLastnode({\n                  ...newNode\n                })\n              }\n            }\n            break;\n          } \n\n        },250)\n  }\n\n  const pathDoubleClick:any = () => {\n    clearTimeout(mouseUpTimeChange);\n    switch(props.currentTool){\n      case 'pen_new_path':\n        if (!editing.current || pathId === -1){\n          return;\n        }\n        let _pathId = pathId;\n        const nodesLength = UIStore.pathList[_pathId].nodes.length;\n        UIStore.addNodes(_pathId,newNode.posX,newNode.posY,newNode.ctrPosX,newNode.ctrPosY,newNode.ctrPosX,newNode.ctrPosY,nodesLength,true);\n    }\n    editing.current=false;\n    setPathId(-1);\n  }\n\n  const addNodes:any = () =>{\n    if(editing.current){\n      const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(lastNode);\n        let getD = `M ${lastNode.posX} ${lastNode.posY} C ${ctr2PosX} ${ctr2PosY} ${newNode.ctrPosX} ${newNode.ctrPosY}`;\n        let width = 0;\n\n        if(lastNode.posX !== newNode.posX && lastNode.posY !== newNode.posY){\n          getD += ` ${newNode.posX} ${newNode.posY}`;\n          width = 1;\n        }else{\n          getD += ` ${newNode.ctrPosX} ${newNode.ctrPosY}`;//当没有确定新的锚点时\n          width = 0;\n        }\n        return(\n          <Fragment>\n            <path d = {getD}  fill=\"none\" stroke=\"#000\" strokeWidth=\"1\"/>\n            <circle className=\"point-control\" cx={newNode.posX} cy={newNode.posY} stroke=\"#55f\" r=\"10\" />\n            <line x1={newNode.posX} y1={newNode.posY} x2={newNode.ctrPosX} y2={newNode.ctrPosY} stroke=\"#555\" strokeWidth={width} />\n          </Fragment>  \n        )\n    }\n  }\n  const addOtherPath:any = () =>{\n    if(toolNode){\n\n      let nodes = new Array(4).fill({\n        posX:-1,\n        posY:-1,\n        ctrPosX:-1,\n        ctrPosY:-1,\n        ctr2PosX:-1,\n        ctr2PosY:-1\n      })\n      switch(props.currentTool){\n        case 'rectangle': nodes = getRectNodes(newToolNode);break;\n        case 'circle':nodes = getCircleNodes(newToolNode);break;\n      }\n      let getD = \n      `M ${nodes[0].posX} ${nodes[0].posY} \n      C ${nodes[0].ctrPosX} ${nodes[0].ctrPosY} ${nodes[1].ctrPosX} ${nodes[1].ctrPosY} ${nodes[1].posX} ${nodes[1].posY} \n      C ${nodes[1].ctr2PosX} ${nodes[1].ctr2PosY} ${nodes[2].ctrPosX} ${nodes[2].ctrPosY} ${nodes[2].posX} ${nodes[2].posY} \n      C ${nodes[2].ctr2PosX} ${nodes[2].ctr2PosY} ${nodes[3].ctrPosX} ${nodes[3].ctrPosY} ${nodes[3].posX} ${nodes[3].posY} \n      C ${nodes[3].ctr2PosX} ${nodes[3].ctr2PosY} ${nodes[0].ctr2PosX} ${nodes[0].ctr2PosY} ${nodes[0].posX} ${nodes[0].posY} Z`;\n        return(\n          <Fragment>\n            <path d = {getD}  fill=\"none\" stroke=\"#55f\" strokeWidth=\"1\"/>\n          </Fragment>  \n        )\n    }\n  }\n\n  return(\n    <div className=\"editor-container\">\n      <svg ref={edtiorRef} className=\"editor-svg\" width={editorInfo.width} height={editorInfo.height}\n           onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}\n          onDoubleClick={pathDoubleClick}>\n        {addNodes()}\n        {pathList.map(path => (\n          <Path key={path.id} path={path} currentTool={props.currentTool}/>\n        ))}\n        {addOtherPath()}\n\n      </svg>\n    </div>\n  )\n}\n\nexport default EditorContainer;","import { observer } from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport '../style/statusContainer.scss';\nimport { UIStore } from '../stores/UIStore';\n\ninterface Props{\n  \n}\n\nconst StatusContainer: React.FC<Props> = observer((props: Props) => {\n\n  const currentPathid = UIStore.editingPathId\n  \n  const inputChange = (event: any) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    if(currentPathid!== -1){\n      UIStore.setStateInfo(currentPathid,name,value);\n    }\n  }\n  let pathInfo:any;\n  if(currentPathid !== -1){\n     pathInfo = UIStore.pathList[currentPathid].nodes.length ? UIStore.pathList[currentPathid]: null;\n  }\n    \n  return (\n    <Fragment>\n      <div className = \"statusContainer\">\n          <h4>状态栏</h4>\n          <label className = \"statusinput\">\n            <span>PositionX:</span>\n            <input type=\"number\"  name=\"X\" value = {pathInfo?pathInfo.nodes[0].posX.toFixed(1):0} onChange={inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>PositionY:</span>\n            <input type=\"number\" name=\"Y\"  value = {pathInfo?pathInfo.nodes[0].posY.toFixed(1):0} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>fill:</span>\n            <input type=\"color\" name=\"fill\" value = {(!pathInfo || pathInfo.fill === 'none')?'#ffffff':pathInfo.fill} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke Width:</span>\n            <input type=\"number\" name=\"strokeWidth\" value = {pathInfo?pathInfo.strokeWidth:0} min = \"0\" max = \"40\"  onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke:</span>\n            <input type=\"color\" name=\"stroke\" value = {pathInfo?pathInfo.stroke:'#000000'}  onChange = {inputChange}/>\n          </label>\n      </div>\n    </Fragment>\n  )\n\n})\n\nexport default StatusContainer;\n","import React  from 'react';\nimport '../style/FunctionContainer.scss'\n\n\ninterface Props{\n  currentTool:string;\n  set:(arg0: string)=>void;\n  id:string;\n\n}\n\nconst ToolbarContainer:  React.FC<Props> = (props) => {\n\n  function handleClick(e:any){\n    props.set(e.target.id)\n  }\n\n  return (\n\n\n      <div  className=\"function\">\n        {( ()=>{\n            switch(props.id){\n              case \"mouse\":return [\n                <div key={0} className={props.currentTool===\"mouse_rotate_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"mouse_rotate_path\">Rotate Path</div>,\n                <div key={1} className={props.currentTool===\"mouse_scaling_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"mouse_scaling_path\">Scaling Path</div>,\n                <div key={2} className={props.currentTool===\"mouse_drag_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"mouse_drag_path\">Drag Path</div>\n              ]\n              case \"pen\":return [\n                <div key={0} className={props.currentTool===\"pen_add_node\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"pen_add_node\">Add Node</div>,\n                <div key={1} className={props.currentTool===\"pen_drag_node\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"pen_drag_node\">Drag Node</div>,\n                <div key={2} className={props.currentTool===\"pen_new_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"pen_new_path\">New Path</div>\n              ]\n\n              default:return null;\n            }\n          }\n        )()}\n      </div>\n\n\n\n  )\n}\n\nexport default ToolbarContainer;\n","export default __webpack_public_path__ + \"static/media/circle.292ce4e1.svg\";","export default __webpack_public_path__ + \"static/media/pen.4de46a1c.svg\";","export default __webpack_public_path__ + \"static/media/mouse.dfeff54d.svg\";","export default __webpack_public_path__ + \"static/media/line.86048c7a.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.d8ea8f58.svg\";","import React from 'react';\nimport '../style/ToolbarContainer.scss'\nimport circle from '../asset/circle.svg'\nimport pen from '../asset/pen.svg'\nimport mouse from '../asset/mouse.svg'\nimport line from '../asset/line.svg'\nimport rectangle from '../asset/rectangle.svg'\n\ninterface Props{\n  currentTool:string;\n  set:(arg0: string)=>void;\n}\n\nconst ToolbarContainer:  React.FC<Props> = (props) => {\n\n  function handleClick(e:any){\n    props.set(e.target.id)\n  }\n\n  return (\n    <div className=\"toolbar\">\n        <div className=\"toolitem\" onClick={handleClick} >\n            <img className={props.currentTool.indexOf(\"mouse\")!==-1?\"itmeIconselect\":\"itmeIcon\"} id=\"mouse\"  alt=\"mouse\" src={mouse}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"circle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"circle\" alt=\"circle\" src={circle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"rectangle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"rectangle\" alt=\"rectangle\" src={rectangle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"line\"?\"itmeIconselect\":\"itmeIcon\"} id=\"line\" alt=\"line\" src={line}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool.indexOf(\"pen\")!==-1?\"itmeIconselect\":\"itmeIcon\"} id=\"pen\" alt=\"pen\" src={pen}/>\n        </div>\n    </div>\n  )\n}\n\nexport default ToolbarContainer;\n","import React, { useState } from 'react';\nimport EditorContainer from './EditorContainer';\nimport StatusContainer from './StatusContainer';\nimport FunctionContainer from './FunctionContainer';\nimport '../style/index.scss';\nimport ToolbarContainer from \"./ToolbarContainer\";\nimport '../style/BasicContainer.scss'\nimport { UIStore } from '../stores/UIStore';\n\n\nconst BasicLayout = () => {\n\n  const [currentTool, setCurrenttool] = useState(\"mouse\");\n  const handleToolChange = (toolName: string) => {\n    UIStore.setCurrentTool(toolName);\n    setCurrenttool(toolName)\n  }\n\n  return(\n    <div className=\"basic-container\">\n      <ToolbarContainer currentTool={currentTool} set={handleToolChange}/>\n      {\n        currentTool.indexOf(\"mouse\")===-1\n          ? null\n          : <FunctionContainer currentTool={currentTool} set={handleToolChange} id=\"mouse\"/>\n      }\n      {\n        currentTool.indexOf(\"pen\")===-1\n          ? null\n          : <FunctionContainer currentTool={currentTool} set={handleToolChange} id=\"pen\"/>\n      }\n      <EditorContainer currentTool={currentTool} />\n\n\n      <StatusContainer />\n\n    </div>\n  )\n}\n\nexport default BasicLayout\n","import React from 'react';\nimport BasciLayout from './containers/BasciLayout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasciLayout />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
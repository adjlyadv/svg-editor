{"version":3,"sources":["elements/constants.ts","stores/UIStore.ts","stores/myIndexDb.ts","utils/calculate.ts","elements/node.tsx","elements/path.tsx","containers/EditorContainer.tsx","containers/StatusContainer.tsx","containers/FunctionContainer.tsx","asset/circle.svg","asset/pen.svg","asset/mouse.svg","asset/line.svg","asset/rectangle.svg","containers/ToolbarContainer.tsx","containers/BasciLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nodeTypes","UIStore","editorInfo","width","height","left","top","mouseState","type","drugging","pathid","nodeid","pathList","editingPathId","initPathList","id","path","addPath","push","length","nodes","strokeWidth","stroke","fill","deletePath","pathId","splice","myIndexDB","remove","setEditingPath","update","setNodes","nodeId","node","addNodes","posX","posY","ctrPosX","ctrPosY","ctr2PosX","ctr2PoxY","index","over","nodesLength","add","slice","ctr2PosY","setMouseState","dragging","movePath","moveX","moveY","it","setStateInfo","name","value","oldX","Number","oldY","makeAutoObservable","this","dbName","version","tableName","db","openDB","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","event","console","log","target","result","onupgradeneeded","create_table","onerror","idb","objectStoreNames","contains","createObjectStore","keyPath","createIndex","unique","newPath","toJS","transaction","objectStore","readAll","openCursor","cursor","key","continue","_","put","delete","getRelativePositon","x","clientX","y","clientY","getCentralSymmetryPosition","Node","observer","props","onClick","onMouseLeave","className","cx","cy","handleMouseDown","elec","onMouseDown","e","x1","y1","x2","y2","getD","d","i","handleClick","stopPropagation","handleOnMouseMove","throttle","item","currentTool","nums","reduce","pre","cur","flat","bezier","Bezier","setBezier","nodeInfo","project","setNewNode","t","useState","newNode","paths","mockNode","_nodes","attrD","getEditingPath","map","onMouseOver","split","points","findIndex","undefined","addingNode","right","EditorContainer","useEffect","edtiorRef","current","getBoundingClientRect","setEditorInfo","a","setNode","useRef","editing","setPathId","startNode","setStartNode","_pathid","mouseUpTimeChange","setNewnode","lastNode","setLastnode","pos","setPos","dragPath","setDragPath","handleMouseMove","currentPathid","ref","node1","onMouseMove","onMouseUp","clearTimeout","setTimeout","_pathId","onDoubleClick","r","StatusContainer","pathInfo","inputChange","onChange","min","max","ToolbarContainer","set","indexOf","alt","src","mouse","circle","rectangle","line","pen","BasicLayout","setCurrenttool","App","BasciLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d30b6b19.chunk.js","sourcesContent":["export const nodeTypes = {\n  AnchorPoint: 0,\n  Ctr1Point: 1,\n  Ctr2Point: 2\n}\n","import { makeAutoObservable} from 'mobx';\nimport { nodeTypes } from '../elements/constants';\nimport { myIndexDB } from './myIndexDb';\nexport interface Node{\n  posX: number,\n  posY: number,\n  ctrPosX: number,\n  ctrPosY: number,\n  ctr2PosX?: number,\n  ctr2PosY?: number,\n}\n\nexport interface Path {\n  id: number,\n  nodes: Node[],\n  type: number, // 0 非闭合 1 闭合\n  strokeWidth: number,\n  stroke: string,\n  fill:string\n}\n\nclass UIstore {\n\n  editorInfo = {\n    width: 800,\n    height: 600,\n    left: 0,\n    top: 0\n  }\n  mouseState = {\n    type: nodeTypes.AnchorPoint,\n    drugging: false,\n    pathid: -1,\n    nodeid: -1\n  }\n\n  pathList: Path[] = [];\n  editingPathId = -1;\n  \n  constructor() {\n    makeAutoObservable(this); \n  }\n\n  initPathList = (id:number,path:Path) =>{\n    this.pathList[id] = path;\n  }\n\n  addPath = () => {\n    this.pathList.push(\n        {\n          id: this.pathList.length,\n          nodes: [],\n          strokeWidth: 5,\n          stroke: \"#000000\",\n          fill: \"none\",\n          type: 0\n        }\n    )\n    return this.pathList.length - 1;\n  }\n\n  deletePath = (pathId: number) => {\n    this.pathList = this.pathList.splice(pathId,1);\n    myIndexDB.remove(pathId);\n  }\n\n  setEditingPath = (pathId: number) => {\n    this.editingPathId = pathId;\n    myIndexDB.update(this.pathList[pathId]);\n  }\n\n  setNodes = (pathId: number, nodeId: number, node: Node) => {\n    if(this.pathList[pathId]){\n      this.pathList[pathId].nodes[nodeId] = node;\n      myIndexDB.update(this.pathList[pathId]);\n    }\n    \n  }\n\n  addNodes =(pathId: number , posX: number, posY: number, ctrPosX?: number, ctrPosY?: number, ctr2PosX?: number, ctr2PoxY?: number, index?: number,over?:boolean) => {\n\n    const nodesLength = this.pathList[pathId].nodes.length;\n    if(nodesLength === 0 || over){\n      this.pathList[pathId].nodes.push(\n        {\n          posX: posX,\n          posY: posY,\n          ctrPosX: ctrPosX || posX,\n          ctrPosY: ctrPosY || posY\n        }\n      )\n      if(nodesLength === 0){\n        myIndexDB.add(this.pathList[pathId]);\n      }else{\n        myIndexDB.update(this.pathList[pathId]);\n      }\n    }\n    else{\n      this.pathList[pathId].nodes = [\n        ...this.pathList[pathId].nodes.slice(0, index || nodesLength - 1),\n        {\n          posX: posX,\n          posY: posY,\n          ctrPosX: ctrPosX || posX,\n          ctrPosY: ctrPosY || posY,\n          ctr2PosX: ctr2PosX,\n          ctr2PosY: ctr2PoxY\n        },\n        ...this.pathList[pathId].nodes.slice(index || nodesLength - 1)\n      ]\n      myIndexDB.update(this.pathList[pathId]);\n    }\n\n  }\n\n  setMouseState = (type: number, dragging:boolean, pathid:number, nodeid:number) => {\n    this.mouseState.pathid = pathid;\n    this.mouseState.nodeid = nodeid;\n    this.mouseState.type = type;\n    this.mouseState.drugging = dragging;\n  }\n\n  movePath = (pathid: number , moveX: number , moveY: number) => {\n    for( let it of this.pathList[pathid].nodes){\n      it.posX += moveX;\n      it.posY += moveY;\n      it.ctrPosX += moveX;\n      it.ctrPosY += moveY;\n      if(it.ctr2PosY && it.ctr2PosX){\n        it.ctr2PosX += moveX;\n        it.ctr2PosY += moveY;\n      }\n    }\n    myIndexDB.update(this.pathList[pathid]);\n  }\n\n\n  setStateInfo = (pathId: number, name:string, value:string) => {\n    switch(name){\n      case 'X':\n        let oldX = this.pathList[pathId].nodes[0].posX;\n        this.movePath(pathId, Number(value) - oldX, 0);\n        break;\n      case 'Y':\n        let oldY = this.pathList[pathId].nodes[0].posY;\n        this.movePath(pathId,0, Number(value) - oldY);\n        break;\n      case 'fill':\n        this.pathList[pathId].fill = value;\n        break;\n      case 'strokeWidth':\n        this.pathList[pathId].strokeWidth = Number(value);\n        break;\n      case 'stroke':\n        this.pathList[pathId].stroke = value;\n        break;\n      default:        \n    }\n    myIndexDB.update(this.pathList[pathId]);\n  }\n}\n\nexport const UIStore = new UIstore();","import {UIStore} from './UIStore';\nimport * as _ from 'lodash';\nimport {toJS} from 'mobx';\nclass IndexDB{\n\n    private dbName: string = 'svgData';//数据库名称\n    private version: number = 1;//数据库版本\n    private tableName: string = 'svgPath';//数据表名称\n    private db: IDBDatabase | null = null;\n\n    //打开数据库\n    openDB = () => {\n        return new Promise((resolve,reject)=>{\n            const request = window.indexedDB.open(this.dbName, this.version);\n\n            request.onsuccess = (event: any) => {//数据库打开成功\n                console.log('成功打开数据库')\n                this.db = event.target.result\n                resolve(1);\n            };\n    \n            request.onupgradeneeded = (event:any) => {\n                console.log('成功新建数据库')\n                this.db = event.target.result;\n                this.create_table(this.db);\n            }\n    \n            request.onerror = (event:any) => {\n                console.log('数据库打开报错');\n                reject(1);\n            };\n        })\n        \n    }\n\n    //新建数据表\n    create_table  = (idb: any) => {\n        if (!idb.objectStoreNames.contains(this.tableName)) {\n            let objectStore;\n            objectStore = idb.createObjectStore(this.tableName, { keyPath: 'id' });\n            objectStore.createIndex('id', 'id', { unique: true });\n        }\n    }\n    //向indexdb中增加数据\n\n    add  = (newPath:any) => {\n        if(this.db){\n            let path = toJS(newPath);\n            let request = this.db.transaction([this.tableName], 'readwrite')\n            .objectStore(this.tableName)\n            .add(path);\n            request.onsuccess = function (event:any) {\n                console.log('数据写入成功');\n            };\n    \n            request.onerror = function (event:any) {\n                console.log('数据写入失败');\n            }\n        } \n    }\n    //读取所有数据\n    readAll = () => {\n            return new Promise((resolve,reject)=>{\n                if(this.db){\n                    let objectStore = this.db.transaction(this.tableName).objectStore(this.tableName);\n                    objectStore.openCursor().onsuccess = function (event:any) {\n                        var cursor = event.target.result;\n                        if (cursor) {\n                            UIStore.initPathList(cursor.key,cursor.value);\n                            cursor.continue();\n                        } else {\n                            console.log('没有更多数据了！');\n                            resolve(1);\n                        }\n                    };\n                }\n                else{\n                    reject();\n                }\n            })\n    }\n\n    //更新数据\n    update = _.debounce((newPath:any)=> {\n        if(this.db){\n            let path = toJS(newPath);\n            let request = this.db.transaction([this.tableName], 'readwrite')\n            .objectStore(this.tableName)\n            .put(path);\n            request.onsuccess = function (event:any) {\n                console.log('数据更新成功');\n            };\n\n            request.onerror = function (event:any) {\n                console.log('数据更新失败');\n            }\n        }\n    },1000,{ 'maxWait': 10000 })\n\n    //删除数据\n    remove = (id:number) => {\n        if(this.db){\n            let request = this.db.transaction([this.tableName], 'readwrite')\n            .objectStore(this.tableName)\n            .delete(id);\n          request.onsuccess = function (event) {\n            console.log('数据删除成功');\n          };\n        }\n    }\n\n}\nexport const myIndexDB = new IndexDB();","import { UIStore, Node } from '../stores/UIStore'\n\nexport function getRelativePositon(event: any) {\n  const editorInfo = UIStore.editorInfo;\n  return {\n    x: event.clientX - editorInfo.left,\n    y: event.clientY - editorInfo.top\n  }\n}\n\nexport function getCentralSymmetryPosition(node: Node) {\n  return {\n    ctr2PosX: node.posX * 2 - node.ctrPosX,\n    ctr2PosY: node.posY * 2 - node.ctrPosY\n  }\n}","import { observer} from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport { nodeTypes } from './constants';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\n\ninterface Props {\n  node: typeNode,\n  id: number,\n  pathId: number,\n  onClick?: any,\n  onMouseLeave?: any\n}\n\nconst Node = observer((props: Props) => {\n\n  if (props.id === -1) {\n    return (\n      <circle onClick={props.onClick} onMouseLeave={props.onMouseLeave} className=\"point-control-add\" cx={props.node.posX} cy={props.node.posY} />\n    )\n  }\n\n  const node = UIStore.pathList[props.pathId].nodes[props.id];\n\n  const handleMouseDown = (elec:number, event: any) => {\n    UIStore.pathList[props.pathId].type = 1; //设定成闭合\n\n    switch(elec) {\n      case nodeTypes.AnchorPoint: {\n        UIStore.setMouseState(nodeTypes.AnchorPoint, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr1Point: {\n        UIStore.setMouseState(nodeTypes.Ctr1Point, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr2Point: {\n        UIStore.setMouseState(nodeTypes.Ctr2Point, true, props.pathId, props.id);\n        break\n      }\n    }\n  }\n  \n  return(\n    <Fragment>\n      <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.AnchorPoint, e)} cx={node.posX} cy={node.posY} />\n        <line x1={node.posX} y1={node.posY} x2={node.ctrPosX} y2={node.ctrPosY} stroke=\"#555\" strokeWidth=\"1\" />\n      <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr1Point, e)} cx={node.ctrPosX} cy={node.ctrPosY} />\n\n      {node.ctr2PosX && node.ctr2PosY && <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr2Point, e)} cx={node.ctr2PosX} cy={node.ctr2PosY} />}\n      {node.ctr2PosX && node.ctr2PosY && <line x1={node.posX} y1={node.posY} x2={node.ctr2PosX} y2={node.ctr2PosY} stroke=\"#555\" strokeWidth=\"1\" />}\n    </Fragment>\n  )\n\n})\n\nexport default Node;","import React, { Fragment, useState } from 'react';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\nimport { getRelativePositon, getCentralSymmetryPosition } from '../utils/calculate';\nimport Node from './node';\nimport _ from 'lodash';\nimport Bezier from 'bezier-js';\nimport { observer } from 'mobx-react';\n\ninterface Props{\n  path: {\n    id: number,\n    nodes: typeNode[],\n    strokeWidth: number,\n    stroke: string,\n    fill:string,\n    type: number\n  }\n  currentTool:String;\n}\n\nconst path: React.FC<Props> = observer((props: Props) => {\n    \n    const getD = (nodes: string | any[], type: boolean) => {\n\n      let d = \"\";\n      const length = nodes.length;\n      if(length === 1){//钢笔增加路径的时候对第一个节点的渲染\n        return d;\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        if (i === 0) {\n          d += `M ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctrPosX} ${nodes[i].ctrPosY} `\n        } else if (i + 1 <= nodes.length - 1) {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctr2PosX} ${nodes[i].ctr2PosY} `\n        } else {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY} `\n        }\n      }\n\n      if (type) {\n        const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(nodes[0])\n        d += `C ${nodes[length - 1].ctr2PosX} ${nodes[length - 1].ctr2PosY} \n          ${nodes[0].ctr2PosX ? nodes[0].ctr2PosX : ctr2PosX} ${nodes[0].ctr2PosY ? nodes[0].ctr2PosY : ctr2PosY} ${nodes[0].posX} ${nodes[0].posY} z`\n      }\n\n      return d\n    }\n    \n    const getEditingPath = () => {\n      let paths = [];\n      let mockNode = null;\n\n      for (let i = 0; i + 1 < nodes.length; i++) {\n\n        if (i !== 0) {\n          const node = nodes[i];\n          mockNode = {\n            posX: node.posX,\n            posY: node.posY,\n            ctrPosX: node.ctr2PosX,\n            ctrPosY: node.ctr2PosY\n          }\n        }\n        \n        const _nodes = [\n          mockNode ? mockNode : nodes[i], \n          nodes[i + 1]\n        ]\n\n        const attrD = getD(_nodes, false);\n        paths.push({\n          attrD: attrD,\n          nodes: _nodes\n        });\n      }\n\n      if (props.path.type) { // 判定一下是不是闭合路径，如果是的话需要另外的控制点\n        let node = nodes[nodes.length - 1];\n        const mockEndNode = {\n          posX: node.posX,\n          posY: node.posY,\n          ctrPosX: node.ctr2PosX,\n          ctrPosY: node.ctr2PosY\n        }\n\n        node = nodes[0];\n        const mockStartNode = {\n          posX: node.posX,\n          posY: node.posY,\n          ctrPosX: node.ctr2PosX,\n          ctrPosY: node.ctr2PosY\n        }\n\n        const _nodes = [\n          mockEndNode,\n          mockStartNode\n        ]\n\n        const attrD = getD(_nodes, false);\n        paths.push({\n          attrD: attrD,\n          nodes: _nodes\n        });\n      }\n\n      return paths\n    }\n\n    const handleClick = (event: any) => {\n      event.stopPropagation();\n      UIStore.setEditingPath(props.path.id);\n    }\n\n    const handleOnMouseMove = _.throttle((event: any, item: any) => {\n      event.stopPropagation();\n      if(props.currentTool !== \"pen_add_node\"){\n        return\n      }\n      const { x, y } = getRelativePositon(event);\n\n      const nums = item.nodes.reduce((pre: Array<number>, cur: typeNode, index: number) => {\n        if (index === item.nodes.length - 1) {\n          pre.push(cur.ctrPosX, cur.ctrPosY, cur.posX, cur.posY);\n        } else {\n          pre.push(cur.posX, cur.posY, cur.ctrPosX, cur.ctrPosY);\n        }\n\n        return pre\n      }, []).flat(1);\n\n      const bezier = new Bezier(nums);\n      setBezier(bezier);\n      const nodeInfo = bezier.project({x, y});\n\n      setNewNode({\n        posX: nodeInfo.x,\n        posY: nodeInfo.y,\n        ctrPosX: nodeInfo.x,\n        ctrPosY: nodeInfo.y,\n        t: nodeInfo.t\n      })\n\n    }, 50);\n\n    const handleAddNewNodeClick = () => {\n      if(props.currentTool !== \"pen_add_node\"){\n        return\n      }\n      const newPath = bezier?.split(newNode.t); // 这里贝塞尔曲线被分成了两个部分，需要分别更新左右两端\n      let points = newPath?.left.points; // 0 1 2 3 分别是第一个点的位置、控制点，第二个点的控制点、位置\n\n      if (!newPath || !points) {\n        return\n      }\n\n      let index = nodes.findIndex((node) => {\n        return node.posX === bezier?.points[0].x && node.posY === bezier?.points[0].y\n      });\n\n      let node = {\n        posX: points[0].x,\n        posY: points[0].y,\n        ctrPosX: index ? UIStore.pathList[id].nodes[index].ctrPosX : points[1].x,\n        ctrPosY: index ? UIStore.pathList[id].nodes[index].ctrPosY : points[1].y,\n        ctr2PosX: index ? points[1].x : undefined,\n        ctr2PosY: index ? points[1].y : undefined\n      } // 这里要判定一下index为0  即起始节点的情况，做特殊处理\n\n      let addingNode = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: 0,\n        ctr2PosY: 0\n      } // 这是新的节点信息\n\n      UIStore.setNodes(id, index, node); // 更新左端点\n\n      points = newPath?.right.points;\n\n      node = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: UIStore.pathList[id].nodes[index + 1].ctr2PosX || undefined,\n        ctr2PosY: UIStore.pathList[id].nodes[index + 1].ctr2PosY || undefined\n      } \n\n      addingNode.ctr2PosX = points[1].x;\n      addingNode.ctr2PosY = points[1].y; // 新的节点信息需要左右两端的\n      \n      UIStore.setNodes(id, index + 1, node); // 更新右端点\n\n      UIStore.addNodes(id, addingNode.posX, addingNode.posY, addingNode.ctrPosX, addingNode.ctrPosY, addingNode.ctr2PosX, addingNode.ctr2PosY, index + 1);\n      setNewNode(null);\n    }\n\n    const [newNode, setNewNode] = useState<any>();\n    const [bezier, setBezier] = useState<Bezier>();\n    const { id, nodes } = props.path;\n\n    if (props.currentTool === \"mouse_add_node\") {\n      const paths = getEditingPath();\n\n      return (\n        <Fragment>\n          {\n            paths.map(item => \n              <Fragment>\n                <path key={item.attrD} onClick={handleClick} d={item.attrD} onMouseOver={e => handleOnMouseMove(e, item)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke}fill={props.path.fill}/>\n              </Fragment>\n            )\n          }\n          {nodes.length && nodes.map((node, index) => \n            <Node node={node} id={index} pathId={id} />\n          )}\n          {newNode && <Node node={newNode} id={-1} pathId={-1} onClick={handleAddNewNodeClick} onMouseLeave={() => setNewNode(null)} />}\n        </Fragment>\n      )\n    }\n\n    return (\n      <Fragment>\n        <path onClick={handleClick} d={getD(nodes, !!props.path.type)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke} fill={props.path.fill}/>\n        {id === UIStore.editingPathId && nodes.length && nodes.map((node, index) => \n          <Node node={node} id={index} pathId={id} />\n        )}\n      </Fragment>\n    )\n\n  }\n)\n\n\nexport default path;","import React, { Fragment,useEffect, useRef , useState} from 'react';\nimport {myIndexDB} from '../stores/myIndexDb';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\nimport Path from '../elements/path';\nimport { nodeTypes } from '../elements/constants';\nimport { getRelativePositon, getCentralSymmetryPosition } from '../utils/calculate';\nimport * as _ from 'lodash';\nimport '../style/EditorContainer.scss';\n\ninterface Props{\n  currentTool:string;\n}\n\nconst EditorContainer: React.FC<Props> = (props) =>  {\n\n  useEffect(() => {\n    if (!edtiorRef) {\n      return\n    }\n    const editorInfo = edtiorRef?.current?.getBoundingClientRect();\n    if (editorInfo) {\n      UIStore.editorInfo.top = editorInfo.top;\n      UIStore.editorInfo.left = editorInfo.left;\n      setEditorInfo(editorInfo);\n    }\n    const initPathList = async() =>{\n      try{\n        await myIndexDB.openDB();\n        await myIndexDB.readAll();\n        setNode({ posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1});//加载结束后重新渲染页面\n        console.log('加载数据结束');\n      }catch(err){\n        console.log('加载失败');\n      }\n    }\n    initPathList();\n  }, [])\n\n  const edtiorRef = useRef<SVGSVGElement>(null);\n  const editing = useRef<boolean>(false)\n  const [pathId, setPathId] = useState<number>(-1)\n  const [editorInfo, setEditorInfo] = useState(UIStore.editorInfo);\n  const [startNode, setStartNode] = useState<Boolean>(false);\n  const pathList = UIStore.pathList;\n  let pathid = UIStore.mouseState.pathid;\n  let nodeid = UIStore.mouseState.nodeid;\n\n \n  const [node, setNode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n  \n  useEffect(() => {\n    UIStore.setNodes(UIStore.mouseState.pathid, UIStore.mouseState.nodeid, node);\n  }, [node])\n\n  useEffect(() => {\n    if (props.currentTool !== \"pen_new_path\"){\n      const _pathid=pathId;\n      if (_pathid !== -1 && UIStore.pathList[_pathid].nodes.length < 2){\n        UIStore.deletePath(_pathid);\n        editing.current=false;\n        setPathId(-1);\n      }\n      else if (_pathid !== -1 && UIStore.pathList[_pathid].nodes.length >= 2){\n        editing.current=false;\n        setPathId(-1);\n      }\n    }\n  }, [props.currentTool,pathId])\n\n  const [newNode, setNewnode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n  const [lastNode, setLastnode] = useState<typeNode>({posX: -1, posY: -1, ctrPosX: -1, ctrPosY: -1 });\n\n  const [pos, setPos] = useState({posX : -1 ,posY : -1});\n  const [dragPath, setDragPath] = useState<boolean>(false);\n  let mouseUpTimeChange:any;\n\n  const handleMouseDown = (event: any) => {\n    event.stopPropagation();\n    const { x, y } = getRelativePositon(event);\n    switch(props.currentTool){\n      case 'pen_drag_node':\n        pathid = UIStore.mouseState.pathid;\n        nodeid = UIStore.mouseState.nodeid;\n        if(pathid!==-1 && nodeid!== -1){\n          let node1 = UIStore.pathList[pathid].nodes[nodeid];\n          setNode({\n            ...node1\n          });\n       }\n      break;\n      case 'mouse_drag_path':\n        const currentPathid = UIStore.editingPathId;\n        if(currentPathid !== -1){\n          setDragPath(true);\n          setPos({\n            posX: x,\n            posY: y\n          })\n        }\n      break;\n      case 'pen_new_path'://钢笔工具 按下的时候确定一个锚点的posx posy\n        if(!editing.current){\n          editing.current=true;\n          setStartNode(true);\n          setLastnode({//是路径的第一个锚点时 上一个锚点设置成一样\n            posX:x,\n            posY:y,\n            ctrPosX:x,\n            ctrPosY:y,\n            ctr2PosX:x,\n            ctr2PosY:y\n          })\n        }\n        setNewnode({\n          posX:x,\n          posY:y,\n          ctrPosX:x,\n          ctrPosY:y,\n          ctr2PosX:x,\n          ctr2PosY:y\n        })\n        break;\n    }\n  }\n    \n\n  const handleMouseMove = _.throttle((event: any) => {\n    event.stopPropagation();\n    const { x, y } = getRelativePositon(event);\n    switch(props.currentTool){\n      case 'pen_drag_node':\n        if(!UIStore.mouseState.drugging){\n          return\n        }\n        switch (UIStore.mouseState.type) {\n          case (nodeTypes.AnchorPoint): {\n            setNode({\n              ...node,\n              posX: x,\n              posY: y,\n            });\n            break;\n          }\n    \n          case (nodeTypes.Ctr1Point): {\n            setNode({\n              ...node,\n              ctrPosX: x,\n              ctrPosY: y,\n            });\n            break;\n          }\n    \n          case (nodeTypes.Ctr2Point): {\n            setNode({\n              ...node,\n              ctr2PosX: x,\n              ctr2PosY: y\n            });\n            break;\n          }\n\n      }\n      break;\n      case 'mouse_drag_path':\n        if(!dragPath){\n          return;\n        }\n        const moveX=x-pos.posX;\n        const moveY=y-pos.posY;\n        const currentPathid = UIStore.editingPathId;\n          UIStore.movePath(currentPathid , moveX , moveY)\n          setPos({\n            posX: x,\n            posY: y\n          })\n      break;\n      case 'pen_new_path'://钢笔工具 如果在编辑模式 移动鼠标的时候不断变化控制点\n        if(editing.current){\n          setNewnode(\n            {\n              ...newNode,\n              ctrPosX:x,\n              ctrPosY:y,\n            }\n          )\n        }\n      break;\n    }\n  }, 5, { 'trailing': true })\n \n\n  const handleMouseUp = (event: any) => {\n    event.stopPropagation();\n    clearTimeout(mouseUpTimeChange);\n    mouseUpTimeChange = setTimeout(\n        () => {\n          switch(props.currentTool){\n            case 'pen_drag_node':\n              UIStore.setMouseState(nodeTypes.AnchorPoint, false, pathid, nodeid);\n              break;\n            case 'mouse_drag_path':\n              setDragPath(false);\n              break;\n            case 'pen_new_path':{//松开鼠标确定一个点 加入path里\n              if (!editing.current){\n                return;\n              }\n              let _pathId = pathId;\n              if(pathId === -1){\n                _pathId = UIStore.addPath()\n                setPathId(_pathId);\n              }\n\n              UIStore.setEditingPath(_pathId);\n\n              if (UIStore.pathList[_pathId].type) {\n                // 需要创建闭合路径了，退出编辑模式\n                const _node = UIStore.pathList[_pathId].nodes[0];\n                const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(_node);\n                UIStore.pathList[_pathId].nodes[0].ctr2PosX = ctr2PosX;\n                UIStore.pathList[_pathId].nodes[0].ctr2PosY = ctr2PosY;\n                editing.current = false;\n                setPathId(-1);\n                return\n              }\n\n              const nodesLength = UIStore.pathList[_pathId].nodes.length;\n              const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(newNode);\n              UIStore.addNodes(_pathId,newNode.posX,newNode.posY,newNode.ctrPosX,newNode.ctrPosY,ctr2PosX,ctr2PosY,nodesLength);\n              if(startNode){// 处理第一个节点的渲染\n                setLastnode({\n                  ...newNode,\n                  ctrPosX: ctr2PosX,\n                  ctrPosY: ctr2PosY\n                })\n                setStartNode(false);\n              }else{\n                setLastnode({\n                  ...newNode\n                })\n              }\n            }\n            break;\n          } \n\n        },50)\n  }\n\n  const pathDoubleClick:any = () => {\n    clearTimeout(mouseUpTimeChange);\n    switch(props.currentTool){\n      case 'pen_new_path':\n        if (!editing.current || pathId === -1){\n          return;\n        }\n        let _pathId = pathId;\n        const nodesLength = UIStore.pathList[_pathId].nodes.length;\n        UIStore.addNodes(_pathId,newNode.posX,newNode.posY,newNode.ctrPosX,newNode.ctrPosY,newNode.ctrPosX,newNode.ctrPosY,nodesLength,true);\n\n    }\n    editing.current=false;\n    setPathId(-1);\n  }\n\n  const addNodes:any = () =>{\n    if(editing.current){\n      const { ctr2PosX, ctr2PosY } = getCentralSymmetryPosition(lastNode);\n        let getD = `M ${lastNode.posX} ${lastNode.posY} C ${ctr2PosX} ${ctr2PosY} ${newNode.ctrPosX} ${newNode.ctrPosY}`;\n        let width = 0;\n\n        if(lastNode.posX !== newNode.posX && lastNode.posY !== newNode.posY){\n          getD += ` ${newNode.posX} ${newNode.posY}`;\n          width = 1;\n        }else{\n          getD += ` ${newNode.ctrPosX} ${newNode.ctrPosY}`;//当没有确定新的锚点时\n          width = 0;\n        }\n        return(\n          <Fragment>\n            <path d = {getD}  fill=\"none\" stroke=\"#000\" strokeWidth=\"1\"/>\n            <circle className=\"point-control\" cx={newNode.posX} cy={newNode.posY} stroke=\"#55f\" r=\"10\" />\n            <line x1={newNode.posX} y1={newNode.posY} x2={newNode.ctrPosX} y2={newNode.ctrPosY} stroke=\"#555\" strokeWidth={width} />\n          </Fragment>  \n        )\n    }\n  }\n\n  return(\n    <div className=\"editor-container\">\n      <svg ref={edtiorRef} className=\"editor-svg\" width={editorInfo.width} height={editorInfo.height}\n           onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}\n          onDoubleClick={pathDoubleClick}>\n        {addNodes()}\n        {pathList.map(path => (\n          <Path key={path.id} path={path} currentTool={props.currentTool}/>\n        ))}\n\n      </svg>\n    </div>\n  )\n}\n\nexport default EditorContainer;","import { observer } from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport '../style/statusContainer.scss';\nimport { UIStore } from '../stores/UIStore';\n\ninterface Props{\n  \n}\n\nconst StatusContainer: React.FC<Props> = observer((props: Props) => {\n\n  const currentPathid = UIStore.editingPathId\n  \n  const inputChange = (event: any) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    if(currentPathid!== -1){\n      UIStore.setStateInfo(currentPathid,name,value);\n    }\n  }\n  let pathInfo;\n  if(currentPathid !== -1){\n     pathInfo = UIStore.pathList[currentPathid].nodes.length ? UIStore.pathList[currentPathid]: null;\n  }\n    \n  return (\n    <Fragment>\n      <div className = \"statusContainer\">\n          <h4>状态栏</h4>\n          <label className = \"statusinput\">\n            <span>PositionX:</span>\n            <input type=\"number\"  name=\"X\" value = {pathInfo?.nodes[0].posX} onChange={inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>PositionY:</span>\n            <input type=\"number\" name=\"Y\"  value = {pathInfo?.nodes[0].posY} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>fill:</span>\n            <input type=\"color\" name=\"fill\" value = {pathInfo?.fill} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke Width:</span>\n            <input type=\"number\" name=\"strokeWidth\" value = {pathInfo?.strokeWidth} min = \"0\" max = \"40\"  onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke:</span>\n            <input type=\"color\" name=\"stroke\" value = {pathInfo?.stroke}  onChange = {inputChange}/>\n          </label>\n      </div>\n    </Fragment>\n  )\n\n})\n\nexport default StatusContainer;\n","import React  from 'react';\nimport '../style/FunctionContainer.scss'\n\n\ninterface Props{\n  currentTool:string;\n  set:(arg0: string)=>void;\n  id:string;\n\n}\n\nconst ToolbarContainer:  React.FC<Props> = (props) => {\n\n  function handleClick(e:any){\n    props.set(e.target.id)\n  }\n\n  return (\n\n\n      <div  className=\"function\">\n        {( ()=>{\n            switch(props.id){\n              case \"mouse\":return [\n                <div className={props.currentTool===\"mouse_rotate_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"mouse_rotate_path\">Rotate Path</div>,\n                <div className={props.currentTool===\"mouse_scaling_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"mouse_scaling_path\">Scaling Path</div>,\n                <div className={props.currentTool===\"mouse_drag_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"mouse_drag_path\">Drag Path</div>\n              ]\n              case \"pen\":return [\n                <div className={props.currentTool===\"pen_add_node\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"pen_add_node\">Add Node</div>,\n                <div className={props.currentTool===\"pen_drag_node\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"pen_drag_node\">Drag Node</div>,\n                <div className={props.currentTool===\"pen_new_path\"?\"functionItemSelect\":\"functionItem\"}\n                     onClick={handleClick} id=\"pen_new_path\">New Path</div>\n              ]\n\n              default:return null;\n            }\n          }\n        )()}\n      </div>\n\n\n\n  )\n}\n\nexport default ToolbarContainer;\n","export default __webpack_public_path__ + \"static/media/circle.292ce4e1.svg\";","export default __webpack_public_path__ + \"static/media/pen.4de46a1c.svg\";","export default __webpack_public_path__ + \"static/media/mouse.dfeff54d.svg\";","export default __webpack_public_path__ + \"static/media/line.86048c7a.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.d8ea8f58.svg\";","import React from 'react';\nimport '../style/ToolbarContainer.scss'\nimport circle from '../asset/circle.svg'\nimport pen from '../asset/pen.svg'\nimport mouse from '../asset/mouse.svg'\nimport line from '../asset/line.svg'\nimport rectangle from '../asset/rectangle.svg'\n\ninterface Props{\n  currentTool:string;\n  set:(arg0: string)=>void;\n}\n\nconst ToolbarContainer:  React.FC<Props> = (props) => {\n\n  function handleClick(e:any){\n    props.set(e.target.id)\n  }\n\n  return (\n    <div className=\"toolbar\">\n        <div className=\"toolitem\" onClick={handleClick} >\n            <img className={props.currentTool.indexOf(\"mouse\")!==-1?\"itmeIconselect\":\"itmeIcon\"} id=\"mouse\"  alt=\"mouse\" src={mouse}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"circle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"circle\" alt=\"circle\" src={circle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"rectangle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"rectangle\" alt=\"rectangle\" src={rectangle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"line\"?\"itmeIconselect\":\"itmeIcon\"} id=\"line\" alt=\"line\" src={line}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool.indexOf(\"pen\")!==-1?\"itmeIconselect\":\"itmeIcon\"} id=\"pen\" alt=\"pen\" src={pen}/>\n        </div>\n    </div>\n  )\n}\n\nexport default ToolbarContainer;\n","import React, { useState } from 'react';\nimport EditorContainer from './EditorContainer';\nimport StatusContainer from './StatusContainer';\nimport FunctionContainer from './FunctionContainer';\nimport '../style/index.scss';\nimport ToolbarContainer from \"./ToolbarContainer\";\nimport '../style/BasicContainer.scss'\n\n\nconst BasicLayout = () => {\n\n  const [currentTool, setCurrenttool] = useState(\"mouse\");\n\n  return(\n    <div className=\"basic-container\">\n      <ToolbarContainer currentTool={currentTool} set={setCurrenttool}/>\n      {\n        currentTool.indexOf(\"mouse\")===-1\n          ? null\n          : <FunctionContainer currentTool={currentTool} set={setCurrenttool} id=\"mouse\"/>\n      }\n      {\n        currentTool.indexOf(\"pen\")===-1\n          ? null\n          : <FunctionContainer currentTool={currentTool} set={setCurrenttool} id=\"pen\"/>\n      }\n      <EditorContainer currentTool={currentTool} />\n\n\n      <StatusContainer />\n\n    </div>\n  )\n}\n\nexport default BasicLayout\n","import React from 'react';\nimport BasciLayout from './containers/BasciLayout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasciLayout />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["elements/constants.ts","stores/UIStore.ts","utils/calculate.ts","elements/node.tsx","elements/path.tsx","containers/EditorContainer.tsx","containers/StatusContainer.tsx","asset/circle.svg","asset/pen.svg","asset/mouse.svg","asset/line.svg","asset/rectangle.svg","containers/ToolbarContainer.tsx","containers/BasciLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nodeTypes","UIStore","editorInfo","width","height","left","top","mouseState","type","drugging","pathid","nodeid","pathList","addPath","push","id","length","nodes","strokeWidth","stroke","fill","setNodes","pathId","nodeId","node","addNodes","posX","posY","ctrPosX","ctrPosY","ctr2PosX","ctr2PoxY","index","nodesLength","slice","ctr2PosY","setMouseState","dragging","setStateInfo","name","value","node1","Number","node2","makeAutoObservable","this","getRelativePositon","event","x","clientX","y","clientY","Node","observer","props","onClick","onMouseLeave","className","cx","cy","handleMouseDown","elec","onMouseDown","e","x1","y1","x2","y2","path","getD","d","i","console","log","handleClick","stopPropagation","setPathid","handleOnMouseMove","_","throttle","item","nums","reduce","pre","cur","flat","bezier","Bezier","setBezier","nodeInfo","project","setNewNode","t","useState","editing","setEditing","newNode","onDoubleClick","currentTool","paths","mockNode","attrD","getEditingPath","map","onMouseOver","newPath","split","points","findIndex","undefined","addingNode","right","EditorContainer","useEffect","edtiorRef","current","getBoundingClientRect","setEditorInfo","setStartNode","setPathId","clickTimeChange","useRef","startNode","setNode","handleMouseMove","ref","onMouseMove","onMouseUp","clearTimeout","setTimeout","_pathId","set","StatusContainer","inputChange","target","currentPathid","pathInfo","onChange","min","max","ToolbarContainer","alt","src","mouse","circle","rectangle","line","pen","BasicLayout","setCurrenttool","setCurrentPathid","App","BasciLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0084702b.chunk.js","sourcesContent":["export const nodeTypes = {\n  AnchorPoint: 0,\n  Ctr1Point: 1,\n  Ctr2Point: 2\n}\n","import { makeAutoObservable } from 'mobx';\nimport { nodeTypes } from '../elements/constants';\n\nexport interface Node {\n  posX: number,\n  posY: number,\n  ctrPosX: number,\n  ctrPosY: number,\n  ctr2PosX?: number,\n  ctr2PosY?: number,\n}\n\nexport interface Path {\n  id: number,\n  nodes: Node[],\n  strokeWidth: number,\n  stroke: string,\n  fill:string\n}\n\nclass UIstore {\n\n  editorInfo = {\n    width: 800,\n    height: 600,\n    left: 0,\n    top: 0\n  }\n  mouseState ={\n    type: nodeTypes.AnchorPoint,\n    drugging: false,\n    pathid: 0,\n    nodeid: 0\n  }\n\n  pathList: Path[] = [];\n\n  constructor() {\n    makeAutoObservable(this);\n    this.pathList.push(\n      {\n        id: 0,\n        nodes: [\n          {\n            posX: 125.5,\n            posY: 171.5,\n            ctrPosX: 194.5,\n            ctrPosY: 85.5\n          },\n          {\n            posX: 246.5,\n            posY: 140.5,\n            ctrPosX: 288.5,\n            ctrPosY: 95.5,\n            ctr2PosX: 204.5,\n            ctr2PosY: 185.5\n          },\n          {\n            posX: 210,\n            posY: 261,\n            ctrPosX: 309.5,\n            ctrPosY: 309.5,\n          },\n        ],\n        strokeWidth: 5,\n        stroke: \"#000000\",\n        fill: \"#ffffff\"\n      }\n    )\n  }\n\n  addPath = () => {\n    this.pathList.push(\n        {\n          id: this.pathList.length - 1,\n          nodes: [],\n          strokeWidth: 5,\n          stroke: \"#000000\",\n          fill: \"#ffffff\"\n        }\n    )\n    return this.pathList.length - 1;\n  }\n\n  setNodes = (pathId: number, nodeId: number, node: Node) => {\n    this.pathList[pathId].nodes[nodeId] = node;\n  }\n\n  addNodes =(pathId: number , posX: number, posY: number, ctrPosX?: number, ctrPosY?: number, ctr2PosX?: number, ctr2PoxY?: number, index?: number) => {\n\n    const nodesLength = this.pathList[pathId].nodes.length;\n\n    this.pathList[pathId].nodes = [\n      ...this.pathList[pathId].nodes.slice(0, index || nodesLength - 1),\n      {\n        posX: posX,\n        posY: posY,\n        ctrPosX: ctrPosX || posX,\n        ctrPosY: ctrPosY || posY,\n        ctr2PosX: ctr2PosX,\n        ctr2PosY: ctr2PoxY\n      },\n      ...this.pathList[pathId].nodes.slice(index || nodesLength - 1)\n    ]\n\n  }\n\n  setMouseState = (type: number, dragging:boolean, pathid:number, nodeid:number) => {\n    this.mouseState.pathid = pathid;\n    this.mouseState.nodeid = nodeid;\n    this.mouseState.type = type;\n    this.mouseState.drugging = dragging;\n  }\n\n  setStateInfo = (pathId: number, name:string, value:string) => {\n    switch(name){\n      case 'X':\n        let node1 = this.pathList[0].nodes[0];\n        node1.posX = Number(value);\n        this.setNodes(0, 0,node1);\n        break;\n      case 'Y':\n        let node2 = this.pathList[0].nodes[0];\n        node2.posY = Number(value)\n        this.setNodes(0, 0,node2);\n        break;\n      case 'fill':\n        this.pathList[pathId].fill = value;\n        break;\n      case 'strokeWidth':\n        this.pathList[pathId].strokeWidth = Number(value);\n        break;\n      case 'stroke':\n        this.pathList[pathId].stroke = value;\n        break;\n      default:        \n    }\n  }\n}\n\nexport const UIStore = new UIstore();","import { UIStore } from '../stores/UIStore'\n\nexport function getRelativePositon(event: any) {\n  const editorInfo = UIStore.editorInfo;\n  return {\n    x: event.clientX - editorInfo.left,\n    y: event.clientY - editorInfo.top\n  }\n}","import { observer} from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport { nodeTypes } from './constants';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\n\ninterface Props {\n  node: typeNode,\n  id: number,\n  pathId: number,\n  onClick?: any,\n  onMouseLeave?: any\n}\n\nconst Node = observer((props: Props) => {\n\n  if (props.id === -1) {\n    return (\n      <circle onClick={props.onClick} onMouseLeave={props.onMouseLeave} className=\"point-control-add\" cx={props.node.posX} cy={props.node.posY} />\n    )\n  }\n\n  const node = UIStore.pathList[props.pathId].nodes[props.id];\n\n  const handleMouseDown = (elec:number, event: any) => {\n    switch(elec) {\n      case nodeTypes.AnchorPoint: {\n        UIStore.setMouseState(nodeTypes.AnchorPoint, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr1Point: {\n        UIStore.setMouseState(nodeTypes.Ctr1Point, true, props.pathId, props.id);\n        break;\n      }\n\n      case nodeTypes.Ctr2Point: {\n        UIStore.setMouseState(nodeTypes.Ctr2Point, true, props.pathId, props.id);\n        break\n      }\n    }\n\n  }\n  \n  return(\n    <Fragment>\n      <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.AnchorPoint, e)} cx={node.posX} cy={node.posY} />\n        <line x1={node.posX} y1={node.posY} x2={node.ctrPosX} y2={node.ctrPosY} stroke=\"#555\" strokeWidth=\"1\" />\n      <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr1Point, e)} cx={node.ctrPosX} cy={node.ctrPosY} />\n\n      {node.ctr2PosX && node.ctr2PosY && <circle className=\"point-control\" onMouseDown={(e) => handleMouseDown(nodeTypes.Ctr2Point, e)} cx={node.ctr2PosX} cy={node.ctr2PosY} />}\n      {node.ctr2PosX && node.ctr2PosY && <line x1={node.posX} y1={node.posY} x2={node.ctr2PosX} y2={node.ctr2PosY} stroke=\"#555\" strokeWidth=\"1\" />}\n    </Fragment>\n  )\n\n})\n\nexport default Node;","import React, { Fragment, useState } from 'react';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\nimport { getRelativePositon } from '../utils/calculate';\nimport Node from './node';\nimport _ from 'lodash';\nimport Bezier from 'bezier-js';\nimport { observer } from 'mobx-react';\n\ninterface Props{\n  path: {\n    id: number,\n    nodes: typeNode[],\n    strokeWidth: number,\n    stroke: string,\n    fill:string\n  }\n  setPathid:(arg0: number)=>void;\n  currentTool:String;\n}\n\nconst path: React.FC<Props> = observer((props: Props) => {\n    \n    const getD = (nodes: string | any[]) => {\n\n      let d = \"\";\n      for (let i = 0; i < nodes.length; i++) {\n        if (i === 0) {\n          d += `M ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctrPosX} ${nodes[i].ctrPosY} `\n        } else if (i + 1 <= nodes.length - 1) {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY} C ${nodes[i].ctr2PosX} ${nodes[i].ctr2PosY} `\n        } else {\n          d += `${nodes[i].ctrPosX} ${nodes[i].ctrPosY} ${nodes[i].posX} ${nodes[i].posY}`\n        }\n      }\n\n      console.log(d)\n      \n      return d\n    }\n    \n    const getEditingPath = () => {\n      let paths = [];\n      let mockNode = null;\n\n      for (let i = 0; i + 1 < nodes.length; i++) {\n\n        if (i !== 0 && i + 1 !== nodes.length) {\n          const node = nodes[i];\n\n          mockNode = {\n            posX: node.posX,\n            posY: node.posY,\n            ctrPosX: node.ctr2PosX,\n            ctrPosY: node.ctr2PosY\n          }\n        }\n\n        const attrD = getD([mockNode ? mockNode : nodes[i], nodes[i + 1]]);\n        paths.push({\n          attrD: attrD,\n          nodes: [\n            mockNode ? mockNode : nodes[i], \n            nodes[i + 1]\n          ],\n        });\n      }\n\n      return paths\n    }\n    \n    const handleDoubleClick = (event: any) => {\n      event.stopPropagation();\n      if(props.currentTool === 'mouse')\n        setEditing(true);\n    }\n\n    const handleClick = (event: any) => {\n      event.stopPropagation();\n      props.setPathid(props.path.id);\n    }\n\n    const handleOnMouseMove = _.throttle((event: any, item: any) => {\n      event.stopPropagation();\n      const { x, y } = getRelativePositon(event);\n\n      const nums = item.nodes.reduce((pre: Array<number>, cur: typeNode, index: number) => {\n        if (index === item.nodes.length - 1) {\n          pre.push(cur.ctrPosX, cur.ctrPosY, cur.posX, cur.posY);\n        } else {\n          pre.push(cur.posX, cur.posY, cur.ctrPosX, cur.ctrPosY);\n        }\n\n        return pre\n      }, []).flat(1);\n\n      const bezier = new Bezier(nums);\n      setBezier(bezier);\n      const nodeInfo = bezier.project({x, y});\n\n      setNewNode({\n        posX: nodeInfo.x,\n        posY: nodeInfo.y,\n        ctrPosX: nodeInfo.x,\n        ctrPosY: nodeInfo.y,\n        t: nodeInfo.t\n      })\n\n    }, 50);\n\n    const handleAddNewNodeClick = () => {\n      const newPath = bezier?.split(newNode.t); // 这里贝塞尔曲线被分成了两个部分，需要分别更新左右两端\n      let points = newPath?.left.points; // 0 1 2 3 分别是第一个点的位置、控制点，第二个点的控制点、位置\n\n      if (!newPath || !points) {\n        return\n      }\n\n      let index = nodes.findIndex((node) => {\n        return node.posX === bezier?.points[0].x && node.posY === bezier?.points[0].y\n      });\n\n      let node = {\n        posX: points[0].x,\n        posY: points[0].y,\n        ctrPosX: index ? UIStore.pathList[id].nodes[index].ctrPosX : points[1].x,\n        ctrPosY: index ? UIStore.pathList[id].nodes[index].ctrPosY : points[1].y,\n        ctr2PosX: index ? points[1].x : undefined,\n        ctr2PosY: index ? points[1].y : undefined\n      } // 这里要判定一下index为0  即起始节点的情况，做特殊处理\n\n      let addingNode = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: 0,\n        ctr2PosY: 0\n      } // 这是新的节点信息\n\n      UIStore.setNodes(id, index, node); // 更新左端点\n\n      points = newPath?.right.points;\n\n      node = {\n        posX: points[3].x,\n        posY: points[3].y,\n        ctrPosX: points[2].x,\n        ctrPosY: points[2].y,\n        ctr2PosX: UIStore.pathList[id].nodes[index + 1].ctr2PosX || undefined,\n        ctr2PosY: UIStore.pathList[id].nodes[index + 1].ctr2PosY || undefined\n      }\n\n      addingNode.ctr2PosX = points[1].x;\n      addingNode.ctr2PosY = points[1].y; // 新的节点信息需要左右两端的\n      \n      UIStore.setNodes(id, index + 1, node); // 更新右端点\n\n      UIStore.addNodes(id, addingNode.posX, addingNode.posY, addingNode.ctrPosX, addingNode.ctrPosY, addingNode.ctr2PosX, addingNode.ctr2PosY, index + 1);\n      setNewNode(null);\n    }\n\n    const [editing, setEditing] = useState<boolean>(false);\n    const [newNode, setNewNode] = useState<any>();\n    const [bezier, setBezier] = useState<Bezier>();\n    const { id, nodes } = props.path;\n\n    if (!editing) {\n      return (\n        <Fragment>\n          <path onDoubleClick={handleDoubleClick} onClick={handleClick} d={getD(nodes)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke} fill={props.path.fill}/>\n        </Fragment>\n      );\n    }\n\n    const paths = getEditingPath();\n\n    return (\n      <Fragment>\n        {\n          paths.map(item => \n            <Fragment>\n              <path key={item.attrD} onClick={handleClick} d={item.attrD} onMouseOver={e => handleOnMouseMove(e, item)} strokeWidth={props.path.strokeWidth} stroke={props.path.stroke}fill={props.path.fill}/>\n            </Fragment>\n          )\n        }\n        {nodes.map((node, index) => \n          <Node node={node} id={index} pathId={id} />\n        )}\n        {newNode && <Node node={newNode} id={-1} pathId={-1} onClick={handleAddNewNodeClick} onMouseLeave={() => setNewNode(null)} />}\n      </Fragment>\n    )\n\n\n  }\n)\n\n\nexport default path;","import React, { useEffect, useRef , useState} from 'react';\nimport { Node as typeNode, UIStore } from '../stores/UIStore';\nimport Path from '../elements/path';\nimport { nodeTypes } from '../elements/constants';\nimport { getRelativePositon } from '../utils/calculate';\nimport * as _ from 'lodash';\nimport '../style/EditorContainer.scss';\n\ninterface Props{\n  currentTool:string;\n  currentPathid:number;\n  set:(arg0: number)=>void;\n}\n\nconst EditorContainer: React.FC<Props> = (props) =>  {\n\n  useEffect(() => {\n    if (!edtiorRef) {\n      return\n    }\n    const editorInfo = edtiorRef?.current?.getBoundingClientRect();\n    if (editorInfo) {\n      UIStore.editorInfo.top = editorInfo.top;\n      UIStore.editorInfo.left = editorInfo.left;\n      setEditorInfo(editorInfo);\n    }\n\n  }, [])\n\n  //cucurrentTool改变\n  useEffect(() => {\n    if (props.currentTool !== \"pen\") {\n      setStartNode({posX: -1, posY: -1});\n      setPathId(-1);\n\n    }\n  },[props.currentTool])\n\n  const edtiorRef = useRef<SVGSVGElement>(null);\n  var clickTimeChange:any;\n\n  const editing = useRef<boolean>(true)\n  const [pathId, setPathId] = useState<number>(-1)\n  const [editorInfo, setEditorInfo] = useState(UIStore.editorInfo);\n\n  const [startNode,setStartNode] = useState(\n      {\n        posX : -1,\n        posY :-1\n      }\n  )\n\n  const pathList = UIStore.pathList;\n  let pathid = UIStore.mouseState.pathid;\n  let nodeid = UIStore.mouseState.nodeid;\n\n\n  const [node, setNode] = useState<typeNode>(pathList[UIStore.mouseState.pathid].nodes[UIStore.mouseState.nodeid]);\n  \n  \n  useEffect(() => {\n    UIStore.setNodes(UIStore.mouseState.pathid, UIStore.mouseState.nodeid, node);\n  }, [node])\n\n  const handleMouseDown = (event: any) => {\n    event.stopPropagation();\n    pathid = UIStore.mouseState.pathid;\n    nodeid = UIStore.mouseState.nodeid;\n    let node1 = UIStore.pathList[pathid].nodes[nodeid];\n    setNode({\n      posX: node1.posX,\n      posY: node1.posY,\n      ctrPosX: node1.ctrPosX,\n      ctrPosY: node1.ctrPosY,\n      ctr2PosX: node1.ctr2PosX,\n      ctr2PosY: node1.ctr2PosY\n    });\n  }\n\n  const handleMouseMove = _.debounce((event: any) => {\n    event.stopPropagation();\n    if(!UIStore.mouseState.drugging){\n      return\n    }\n    const { x, y } = getRelativePositon(event);\n\n    switch (UIStore.mouseState.type) {\n      case (nodeTypes.AnchorPoint): {\n        setNode({\n          ...node,\n          posX: x,\n          posY: y,\n        });\n        break;\n      }\n\n      case (nodeTypes.Ctr1Point): {\n        setNode({\n          ...node,\n          ctrPosX: x,\n          ctrPosY: y,\n        });\n        break;\n      }\n\n      case (nodeTypes.Ctr2Point): {\n        setNode({\n          ...node,\n          ctr2PosX: x,\n          ctr2PosY: y\n        });\n        break;\n      }\n      \n    }\n  }, 5, { 'trailing': true })\n  \n  const handleMouseUp = (event: any) => {\n    event.stopPropagation();\n    UIStore.setMouseState(nodeTypes.AnchorPoint, false, pathid, nodeid);\n  }\n//创建新的路径 点击\n  const pathClick:any = (e:any) => {\n\n    e.stopPropagation();\n    clearTimeout(clickTimeChange);\n    clickTimeChange = setTimeout(\n        () => {\n          switch (props.currentTool) {\n            case \"pen\": {\n              if (!editing.current) {\n                editing.current=true;\n              } else {\n                let _pathId = pathId;\n                const { x, y } = getRelativePositon(e)\n\n                if (_pathId === -1) {\n                  if (startNode.posX > -1 && startNode.posY > -1) {\n                    _pathId = UIStore.addPath()\n                    setPathId(_pathId);\n                    UIStore.addNodes(_pathId, startNode.posX, startNode.posY);\n                    setStartNode({posX : -1, posY: -1});\n                  } else {\n                    setStartNode({posX : x, posY: y});\n                    return;\n                  }\n\n                }\n                UIStore.addNodes(_pathId, x, y)\n              }\n            }\n          }\n          \n        },\n        300\n    );\n  }\n\n  \n  const pathDoubleClick:any = () => {\n    clearTimeout(clickTimeChange);\n    editing.current=false;\n    setPathId(-1);\n  }\n\n  return(\n    <div className=\"editor-container\">\n      <svg ref={edtiorRef} className=\"editor-svg\" width={editorInfo.width} height={editorInfo.height}\n           onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}\n           onDoubleClick={pathDoubleClick} onClick={pathClick}>\n        {pathList.map(path => (\n          <Path key={path.id} path={path} setPathid={props.set} currentTool={props.currentTool}/>\n        ))}\n      </svg>\n    </div>\n  )\n}\n\nexport default EditorContainer;","import { observer } from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport '../style/statusContainer.scss';\nimport { UIStore } from '../stores/UIStore';\n\ninterface Props{\n  currentPathid:number;\n}\n\nconst StatusContainer: React.FC<Props> = observer((props: Props) => {\n  \n  const inputChange = (event: any) => {\n    let name = event.target.name;\n    let value = event.target.value;\n      UIStore.setStateInfo(props.currentPathid,name,value);\n  }\n\n  const pathInfo = UIStore.pathList[props.currentPathid];\n\n  return (\n    <Fragment>\n      <div className = \"statusContainer\">\n          <h4>状态栏</h4>\n          <label className = \"statusinput\">\n            <span>PositionX:</span>\n            <input type=\"number\"  name=\"X\" value={pathInfo.nodes[0].posX} onChange={inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>PositionY:</span>\n            <input type=\"number\" name=\"Y\" value = {pathInfo.nodes[0].posY} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>fill:</span>\n            <input type=\"color\" name=\"fill\" value = {pathInfo.fill} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke Width:</span>\n            <input type=\"number\" name=\"strokeWidth\" min = \"0\" max = \"40\" value = {pathInfo.strokeWidth} onChange = {inputChange}/>\n          </label>\n          <label className = \"statusinput\">\n            <span>stroke:</span>\n            <input type=\"color\" name=\"stroke\" value = {pathInfo.stroke} onChange = {inputChange}/>\n          </label>\n      </div>\n    </Fragment>\n  )\n\n})\n\nexport default StatusContainer;\n","export default __webpack_public_path__ + \"static/media/circle.292ce4e1.svg\";","export default __webpack_public_path__ + \"static/media/pen.4de46a1c.svg\";","export default __webpack_public_path__ + \"static/media/mouse.dfeff54d.svg\";","export default __webpack_public_path__ + \"static/media/line.86048c7a.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.d8ea8f58.svg\";","import React from 'react';\nimport '../style/ToolbarContainer.scss'\nimport circle from '../asset/circle.svg'\nimport pen from '../asset/pen.svg'\nimport mouse from '../asset/mouse.svg'\nimport line from '../asset/line.svg'\nimport rectangle from '../asset/rectangle.svg'\n\ninterface Props{\n  currentTool:string;\n  set:(arg0: string)=>void;\n}\n\nconst ToolbarContainer:  React.FC<Props> = (props) => {\n\n  function handleClick(e:any){\n    props.set(e.target.id)\n  }\n\n  return (\n    <div className=\"toolbar\">\n        <div className=\"toolitem\" onClick={handleClick} >\n            <img className={props.currentTool===\"mouse\"?\"itmeIconselect\":\"itmeIcon\"} id=\"mouse\"  alt=\"mouse\" src={mouse}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"circle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"circle\" alt=\"circle\" src={circle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"rectangle\"?\"itmeIconselect\":\"itmeIcon\"} id=\"rectangle\" alt=\"rectangle\" src={rectangle}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"line\"?\"itmeIconselect\":\"itmeIcon\"} id=\"line\" alt=\"line\" src={line}/>\n        </div>\n        <div className=\"toolitem\" onClick={handleClick}>\n            <img className={props.currentTool===\"pen\"?\"itmeIconselect\":\"itmeIcon\"} id=\"pen\" alt=\"pen\" src={pen}/>\n        </div>\n    </div>\n  )\n}\n\nexport default ToolbarContainer;\n","import React, { useState } from 'react';\nimport EditorContainer from './EditorContainer';\nimport StatusContainer from './StatusContainer';\nimport '../style/index.scss';\nimport ToolbarContainer from \"./ToolbarContainer\";\nimport '../style/BasicContainer.scss'\n\n\nconst BasicLayout = () => {\n\n  const [currentTool, setCurrenttool] = useState(\"mouse\");\n  const [currentPathid, setCurrentPathid] = useState(0);\n\n  return(\n    <div className=\"basic-container\">\n      <ToolbarContainer currentTool={currentTool} set={setCurrenttool}/>\n      <EditorContainer currentTool={currentTool} currentPathid={currentPathid} set={setCurrentPathid} />\n      <StatusContainer currentPathid={currentPathid}/>\n    </div>\n  )\n}\n\nexport default BasicLayout\n","import React from 'react';\nimport BasciLayout from './containers/BasciLayout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasciLayout />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}